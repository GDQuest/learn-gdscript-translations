# Translations template for Learn GDScript From Zero.
# Copyright (C) 2023 GDQuest
# This file is distributed under the same license as the Learn GDScript From
# Zero project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
msgid ""
msgstr ""
"Project-Id-Version: Learn GDScript From Zero\n"
"Report-Msgid-Bugs-To: https://github.com/GDQuest/learn-gdscript\n"
"POT-Creation-Date: 2023-12-09 20:05+0100\n"
"PO-Revision-Date: 2025-01-05 05:06+0000\n"
"Last-Translator: Atur <aturaseman9@gmail.com>\n"
"Language-Team: Persian <https://hosted.weblate.org/projects/"
"learn-gdscript-from-zero/glossary_database/fa/>\n"
"Language: fa\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n > 1;\n"
"X-Generator: Weblate 5.10-dev\n"
"Generated-By: Babel 2.10.1\n"

#. Reference: member function
#: ./course/glossary.csv:6
msgid "member function"
msgstr "تابع عضو"

#. Reference: member function
#: ./course/glossary.csv:6
msgid "member functions"
msgstr "تابع‌های عضو"

#. Reference: member function
#: ./course/glossary.csv:6
msgid ""
"Member functions are functions attached to a specific value type, like "
"arrays, strings, or dictionaries. We also call them methods.\n"
"\n"
"For example, arrays have member functions like "
"[code]array.append()[/code].\n"
"\n"
"You can only call the function on an array, using the access operator "
"([code].[/code]) to access it, as shown above."
msgstr ""
"تابع‌های عضو تابع‌هایی‌اند که به یک گونهٔ ارزش معین پیوست خورده‌اند، مانند "
"آرایه‌ها، رشته‌ها یا دیکشنری‌ها. به آنها روش یا مِتُد نیز گفته می‌شود.\n"
"\n"
"برای نمونه، آرایه‌ها تابع‌های عضوی مانند [code]array.append()[/code] دارند.\n"
"\n"
"تابع را تنها می‌توان روی آرایه‌ها و با به‌کارگیری عملگر دسترسی ([code].[/code]) "
"برای دسترسی به آن، همانگونه که در بالا می‌بینید فراخواند."

#. Reference: member variable
#: ./course/glossary.csv:9
msgid "member variable"
msgstr "متغیر عضو"

#. Reference: member variable
#: ./course/glossary.csv:9
msgid "member variables"
msgstr "متغیرهای عضو"

#. Reference: member variable
#: ./course/glossary.csv:9
msgid ""
"Member variables are variables attached to a specific value type, like a "
"vector's [code]x[/code] and [code]y[/code] sub-variables. We also call "
"them [i]properties[/i] or [i]fields[/i] of the vector.\n"
"\n"
"To access a member variable, you must first write the value's name "
"followed by the access operator ([code].[/code]). For example, "
"[code]position.x[/code]."
msgstr ""
"متغیرهای عضو متغیرهایی‌اند که به یک گونهٔ ارزش معین پیوست خورده‌اند، مانند "
"زیرمتغیرهای [code]x[/code] و [code]y[/code] بردارها. به آنها [i]ویژگی[/i] یا "
"[i]میدان[/i] بردار نیز گفته می‌شود.\n"
"\n"
"برای دسترسی به متغیرهای عضو، باید نخست نام ارزش را نوشته و آن را با عملگر "
"دسترسی([code].[/code]) دنبال کنید. برای نمونه، [code]position.x[/code]."

#. Reference: parameter
#: ./course/glossary.csv:12
msgid "parameter"
msgstr "پارامتر"

#. Reference: parameter
#: ./course/glossary.csv:12
msgid "parameters"
msgstr "پارامترها"

#. Reference: parameter
#: ./course/glossary.csv:12
msgid ""
"A parameter is a variable you create as part of a function definition.\n"
"\n"
"It allows you to reuse the function more by having values that vary in "
"the function's body."
msgstr ""
"پارامترها متغیری‌اند که آن را بعنوان پاره‌ای از تعریف تابع‌ها می‌سازید.\n"
"\n"
"به شما اجازه می‌دهند تا تابع را بخاطر داشتن ارزش‌هایی که در بدن تابع تفاوت "
"دارند، چندین بار به کار ببرید."

#. Reference: radian
#: ./course/glossary.csv:17
msgid "radian"
msgstr "رادیان"

#. Reference: radian
#: ./course/glossary.csv:17
msgid "radians"
msgstr "رادیان‌ها"

#. Reference: radian
#: ./course/glossary.csv:17
msgid ""
"A radian is a unit of measurement of angles based on the circle's "
"circumference.\n"
"\n"
"We tend to use degrees more in our daily lives, but in computer "
"programming, and especially in games, radians are common.\n"
"\n"
"An angle of [code]2 * PI[/code] radians corresponds to 360 degrees. And "
"an angle of [code]PI[/code] radians corresponds to 180 degrees."
msgstr ""
"رادیان یکای سنجش زاویه‌ها بر پایهٔ محیط دایره است.\n"
"\n"
"ما در زندگی روزانه بیشتر درجه را به کار می‌بریم، ولی در برنامه‌نویسی رایانه‌ای، "
"به‌ویژه در بازی‌ها، رادیان‌ها رواج یافته‌اند.\n"
"\n"
" [code]2 * PI[/code] رادیان برابر با ۳۶۰ درجه و [code]PI[/code] رادیان برابر "
"با ۱۸۰ درجه است."

#. Reference: type
#: ./course/glossary.csv:20
msgid "type"
msgstr "گونه"

#. Reference: type
#: ./course/glossary.csv:20
msgid "types"
msgstr "گونه‌ها"

#. Reference: type
#: ./course/glossary.csv:20
msgid ""
"In computer programming, a type is the class of a value. For example, "
"whole numbers like [code]3[/code], [code]11[/code], and "
"[code]255462[/code] are all of type [code]int[/code] (short for integer)."
"\n"
"\n"
"The computer uses types to determine which operations are valid between "
"two values and when they're undefined."
msgstr ""
"در برنامه‌نویسی رایانه‌ای،‌ گونه‌ها ردهٔ ارزش‌ها اند. برای نمونه،‌ شماره‌های صحیح "
"مانند [code]3[/code]، [code]11[/code] و [code]255462[/code] همه از گونهٔ "
"[code]int[/code] (کوتاه‌شدهٔ integer به معنای شمارهٔ صحیح) اند.\n"
"\n"
"رایانه گونه‌ها را به کار می‌گیرد تا مشخص کند کدام عملیات‌ها میان دو ارزش معتبر "
"بوده و کدام‌ها تعریف‌نشده‌اند."

#. Reference: iteration
#: ./course/glossary.csv:23
msgid "iteration"
msgstr "تکرار"

#. Reference: iteration
#: ./course/glossary.csv:23
msgid "iterations"
msgstr "تکرارها"

#. Reference: iteration
#: ./course/glossary.csv:23
msgid ""
"In computer code, an iteration is one repetition of some process or code."
" We typically use the term with loops, where one iteration is one run of "
"the loop's code.\n"
"\n"
"When talking of algorithms, an iteration can mean a full pass of the "
"algorithm on a data set."
msgstr ""
"در کدنویسی رایانه‌ای، تکرارها بازانجامش برخی فرایند‌ها یا کداند. بیشتر واژهٔ "
"چرخه را به کار رفته می‌شود، که هر تکرار یک بار اجرای کد چرخه است.\n"
"\n"
"در پهنهٔ الگوریتم‌ها، تکرار می‌تواند معنای یک گذشت کامل الگوریتم روی دادگان را "
"بدهد."

#. Reference: vector
#: ./course/glossary.csv:28
msgid "vector"
msgstr "بُردار"

#. Reference: vector
#: ./course/glossary.csv:28
msgid "vectors"
msgstr "بُردارها"

#. Reference: vector
#: ./course/glossary.csv:28
msgid ""
"In math, a vector is a list of numbers. In games, we often use 2D and 3D "
"vectors: respectively, lists of two and three numbers.\n"
"\n"
"We use that to represent a direction and magnitude or intensity in space."
" For example, you can use a vector to represent the direction and speed "
"at which a character or a vehicle moves.\n"
"\n"
"Vectors can seem daunting at first because they are pretty abstract, but "
"as you will see, they'll simplify code tremendously."
msgstr ""
"در ریاضیات، بردارها فهرستی از شماره‌ها اند. در بازی‌ها، بیشتر زمان‌ها بردارهای "
"دوبعدی و سه‌بعدی، به ترتیب، برای فهرست‌های دو و سه‌تایی شماره‌ها به کار می‌روند.\n"
"\n"
"ما این شماره‌ها را برای نمایاندن یک سو و بزرگی یا شدت در فضا به کار می‌بریم. "
"برای نمونه، می‌توانید بُرداری را برای نمایاندن تندی و سویی که ترابَر یا شخصیتی "
"به آن می‌رود به کار ببرید.\n"
"\n"
"بردارها بخاطر انتزاعی بودنشان می‌توانند تا اندازه‌ای دلهره‌آور به نظر برسند، "
"ولی همانگونه که خواهید دید، کد را بسیار ساده خواهند ساخت."

#. Reference: argument
#: ./course/glossary.csv:37
msgid "argument"
msgstr "آرگومان"

#. Reference: argument
#: ./course/glossary.csv:37
msgid "arguments"
msgstr "آرگومان‌ها"

#. Reference: argument
#: ./course/glossary.csv:37
msgid ""
"An argument is a value that you pass to a function when calling the "
"function. For example, in the call [code]rotate(0.5)[/code], the value "
"[code]0.5[/code] in the parentheses is an argument.\n"
"\n"
"A function can receive no arguments, one argument, or multiple arguments."
" Arguments can be mandatory or optional.\n"
"\n"
"When a function takes multiple arguments, you separate the values with "
"commas, like in this function call: [code]jump(50, 100)[/code]\n"
"\n"
"When [i]calling[/i] a function, we name the values passed in parentheses "
"[i]arguments[/i].\n"
"\n"
"When writing a function definition, however, we talk about function "
"[i]parameters[/i]. In the following example, the names [code]x[/code] and"
" [code]y[/code] are [i]parameters[/i]."
msgstr ""
"آرگومان‌ها ارزشی‌اند که هنگام فراخواندن تابعی آنها را می‌دهید. برای نمونه،‌ در "
"فراخوان [code]rotate(0.5)[/code]، ارزش [code]0.5[/code] درون کمانک‌ها یک "
"آرگومان است.\n"
"\n"
"تابع‌ها می‌توانند هیچ آرگومان، یک آرگومان یا چندین آرگومان را دریافت کنند. "
"آرگومان‌ها می‌توانند دلبخواهی یا اجباری باشند.\n"
"\n"
"زمانی که تابعی چندین آرگومان دریافت می‌کند، ارزش‌ها را با کاما (ویرگول انگلیسی)"
" جدا می‌کنیم، مانند این فراخوان تابع: [code]jump(50, 100)[/code]\n"
"\n"
"هنگام [i]فراخواندن[/i] تابعی، ارزشی که درون کمانک‌ها داده می‌شود را [i]آرگومان"
"[/i] می‌خوانیم.\n"
"\n"
"ولی هنگام نوشتن تعریف تابع‌ها،‌ [i]پارامترها[/i] را به کار می‌بریم. در نمونهٔ "
"زیر، نام‌های [code]x[/code] و [code]y[/code] [i]پارامتر[/i]اند."

#. Reference: array
#: ./course/glossary.csv:44
msgid "array"
msgstr "آرایه"

#. Reference: array
#: ./course/glossary.csv:44
msgid "arrays"
msgstr "آرایه‌ها"

#. Reference: array
#: ./course/glossary.csv:44
msgid ""
"An array is a list of values. In GDScript, arrays can contain [i]any[/i] "
"types of value.\n"
"\n"
"To create an array, you write comma-separated values in square brackets: "
"[code]var three_numbers = [1, 2, 3][/code]\n"
"\n"
"In games, we use arrays all the time to store lists of characters in a "
"party, lists of items in inventory, lists of spells the player unlocked, "
"and so on. They're everywhere.\n"
"\n"
"Arrays are a fundamental value type in computer programming. You'll find "
"arrays in pretty much any programming language."
msgstr ""
"آرایه‌ها فهرستی از ارزش‌ها هستند. در جی.دی.اسکریپت، آرایه‌ها می‌توانند [i]هر[/i] "
"گونه ارزش را درون خود داشته باشند.\n"
"\n"
"برای ساختن آرایه‌ها، ارزش‌های جداشده با کاما (ویرگول انگلیسی) را درون دو قلاب "
"می‌نویسیم: [code]var three_numbers = [1, 2, 3][/code]\n"
"\n"
"در بازی‌ها، آرایه‌ها برای انبار کردن فهرست شخصیت‌های درون گروه، فهرست آیتم‌های "
"درون اینوِنتوری، فهرست جادوهایی که بازیکن به دست آورده و... بسیار به کار می‌"
"روند. آنها همه جا هستند.\n"
"\n"
"آرایه‌ها گونهٔ ارزشی بنیادی در برنامه‌نویسی رایانه‌ای هستند. آرایه‌ها را در هر "
"زبان برنامه‌نویسی‌ای خواهید یافت."

#. Reference: assign
#: ./course/glossary.csv:45
msgid "assign"
msgstr "واگذاری"

#. Reference: assign
#: ./course/glossary.csv:45
msgid ""
"Assigning a value to a variable means that you store a value inside the "
"variable. You do this with the equal sign ([code]=[/code])."
msgstr ""
"واگذاری یک ارزش به یک متغیر یعنی ارزشی را درون آن متغیر انبار می‌کنید. این "
"کار را با نشانهٔ برابر ([code]=[/code]) می‌کنیم."

#. Reference: dictionary
#: ./course/glossary.csv:52
msgid "dictionary"
msgstr "دیکشنری"

#. Reference: dictionary
#: ./course/glossary.csv:52
msgid "dictionaries"
msgstr "دیکشنری‌ها"

#. Reference: dictionary
#: ./course/glossary.csv:52
msgid ""
"A dictionary is a data structure that maps values with key-value pairs. "
"When you give the dictionary a key, it finds and gives you back the "
"corresponding value.\n"
"\n"
"In GDScript, keys can be many things. We often use text strings or "
"numbers, but you're not limited to that. A [code]Vector2[/code] can also "
"be a valid key, which is handy to map a grid cell to a unit or an item in"
" a grid-based game.\n"
"\n"
"You will often use dictionaries to associate bits of data in your games. "
"For example, we could use them to associate an equipment's name with its "
"weapon stats in a database.\n"
"\n"
"Like arrays, they are a fundamental data type that you will see in many "
"programming languages and use a lot."
msgstr ""
"دیکشنری‌ها ساختار داده‌ای هستند که ارزش‌ها را با کلیدها جفت می‌کنند. هنگامی که "
"به دیکشنری‌ای کلیدی بدهید، ارزش جفتیده با آن کلید را می‌یابد و می‌دهد.\n"
"\n"
"در جی.دی.اسکریپت، کلیدها می‌توانند چیزهای بسیاری باشند. ما بیشتر زمان‌ها رشته‌"
"های نوشتاری یا شماره‌ها را به کار می‌بریم، ولی به آن محدود نیستید"
".[code]Vector2[/code]ها هم می‌توانند کلید معتبری باشند، که هنگام نهادن یاخته‌"
"های توری در یک یگان یا آیتم در بازی‌های توری‌بنیاد پرکاربرد هستند.\n"
"\n"
"دیکشنری‌ها را برای پیوند دادن تکه‌های داده درون بازی‌هایتان بسیار به کار خواهید "
"برد. برای نمونه، می‌توانیم آنها را برای پیوند دادن نام شمشیری به آمارهایش در "
"یک دادگان به کار ببریم.\n"
"\n"
"مانند آرایه‌ها، گونهٔ داده‌ای بنیادی‌اند که آنها را در زبان‌های برنامه‌نویسی "
"بسیاری خواهید دید و به کار خواهید برد."

#. Reference: for loop
#: ./course/glossary.csv:59
msgid "for loop"
msgstr "چرخهٔ for"

#. Reference: for loop
#: ./course/glossary.csv:59
msgid "for loops"
msgstr "چرخه‌های for"

#. Reference: for loop
#: ./course/glossary.csv:59
msgid ""
"A for loop instructs the computer to repeat a set of instructions once "
"for each value in an array.\n"
"\n"
"In each loop iteration, the compiler extracts one value from the array "
"and gives you access to it in the loop's body.\n"
"\n"
"For loops run code a limited amount of times: one per value in the array."
" It is different from while loops that keep repeating code until a "
"condition is met.\n"
"\n"
"We recommend favoring for loops when you can. They're safer and easier to"
" use than while loops."
msgstr ""
"چرخه‌های for به رایانه می‌گویند که دسته‌ای از فرمان‌ها را یک بار برای هر ارزش "
"درون آرایه‌ای تکرار کند.\n"
"\n"
"در هر تکرار چرخه، کامپایلر یک ارزش را از آرایه استخراج کرده و به شما در بدن "
"چرخه به آن دسترسی می‌دهد.\n"
"\n"
"چرخه‌های for بارهای محدودی کد را اجرا می‌کنند: یک بار برای هر ارزش درون آرایه. "
"با چرخه‌های while، که کد را تا زمانی که شرطی برقرار باشد اجرا می‌کنند، "
"متفاوت‌اند.\n"
"\n"
"تا جایی که برای‌تان شدنی‌ست ما چرخه‌های for را پیشنهاد می‌کنیم. به‌کارگیری آنها "
"از چرخه‌های while آسان‌تر و امن‌تر است."

#. Reference: function
#: ./course/glossary.csv:64
msgid "function"
msgstr "تابع"

#. Reference: function
#: ./course/glossary.csv:64
msgid "functions"
msgstr "تابع‌ها"

#. Reference: function
#: ./course/glossary.csv:64
msgid ""
"A function is a group of code instructions you give a name. When you "
"define a function, you can call it any time to run all the instructions "
"it contains.\n"
"\n"
"You can modify a function's behavior with parameters. Parameters are "
"variable names that you write in the function definition. You can then "
"use them in the function's body to make your code adapt to different "
"cases.\n"
"\n"
"Also, functions can optionally return a value to the code calling it."
msgstr ""
"تابع‌ها گروهی از فرمان‌های کدی هستند که به آن نامی می‌دهید. هنگامی که تابعی را "
"تعریف می‌کنید، می‌توانید هر زمانی که می‌خواهید برای اجرا کردن همهٔ فرمان‌هایی که "
"در خود دارد آن را فراخوانید.\n"
"\n"
"می‌توانید رفتار تابع‌ها را با پارامترها دگرگون کنید. پارامترها نام متغیرهایی‌"
"اند که آنها را در تعریف تابع‌ها می‌نویسید. می‌توانید آنها را درون بدن تابع به "
"کار ببرید تا کدتان بسته به موقعیت‌های گوناگون سازوار شود.\n"
"\n"
"همچنین، تابع‌ها می‌توانند ارزشی را به کدی که آن را فراخوانده است بهینه‌وار "
"برگردانند."

#. Reference: increment
#: ./course/glossary.csv:65
msgid "increment"
msgstr "فزایش"

#. Reference: increment
#: ./course/glossary.csv:65
msgid "increments"
msgstr "فزایش‌ها"

#. Reference: increment
#: ./course/glossary.csv:65
msgid "An increment is the amount by which a value changes in your code."
msgstr "فزایش‌ها مقداری‌اند که بر پایهٔ آنها ارزشی درون کدتان دگرگون می‌شود."

#. Reference: instruction
#: ./course/glossary.csv:68
msgid "instruction"
msgstr ""

#. Reference: instruction
#: ./course/glossary.csv:68
msgid "instructions"
msgstr ""

#. Reference: instruction
#: ./course/glossary.csv:68
msgid ""
"In computer programming, instructions are a single operation the computer"
" recognizes and can execute.\n"
"\n"
"For example, a function call, an addition, or assigning a value to a "
"variable."
msgstr ""

#. Reference: variable
#: ./course/glossary.csv:77
msgid "variable"
msgstr ""

#. Reference: variable
#: ./course/glossary.csv:77
msgid "variables"
msgstr ""

#. Reference: variable
#: ./course/glossary.csv:77
msgid ""
"Variables are a tool to give a name to values you want to store in your "
"code and change over time.\n"
"\n"
"For example, a character's health: when the character takes a hit, you "
"want it to go down. When healing, you want the health to go back up.\n"
"\n"
"You can create a variable named [code]health[/code] to represent the "
"health.\n"
"\n"
"Then, every time you write the keyword [code]health[/code] in your code, "
"the computer will fetch the corresponding value in its memory for you.\n"
"\n"
"Variables work a bit like product labels in a supermarket. They are names"
" that you attach to some value. Any time, you can take the label and "
"stick it onto a new product or, in that case, a new value."
msgstr ""

#. Reference: while loop
#: ./course/glossary.csv:84
msgid "while loop"
msgstr ""

#. Reference: while loop
#: ./course/glossary.csv:84
msgid "while loops"
msgstr ""

#. Reference: while loop
#: ./course/glossary.csv:84
msgid ""
"A while loop instructs the computer to keep running code based on a "
"condition. While the condition is true, the loop keeps running.\n"
"\n"
"When coding while loops, you must be careful: they will keep running "
"infinitely and freeze your game if you get the condition wrong.\n"
"\n"
"That's why we recommend using the safer for loop whenever you can.\n"
"\n"
"However, there are still essential cases in which we use while loops, "
"like processing files, processing computer code, or for powerful "
"algorithms."
msgstr ""

#. Reference: body
#: ./course/glossary.csv:85
msgid "body"
msgstr ""

#. Reference: body
#: ./course/glossary.csv:85
msgid ""
"We talk about a loop or a function's body to refer to the lines of code "
"that are part of the loop or function."
msgstr ""

#. Reference: return
#: ./course/glossary.csv:88
msgid "return"
msgstr ""

#. Reference: return
#: ./course/glossary.csv:88
msgid ""
"Returning a value is the process of sending a value to the place where "
"you call a function.\n"
"\n"
"It happens when a function uses the [code]return[/code] keyword followed "
"by a value, for example: [code]return -1[/code]."
msgstr ""

#. Reference: library
#: ./course/glossary.csv:89
msgid "library"
msgstr ""

#. Reference: library
#: ./course/glossary.csv:89
msgid "libraries"
msgstr ""

#. Reference: library
#: ./course/glossary.csv:89
msgid ""
"A collection of valuable and reusable code bundled together by other "
"programmers to save you time. All programmers use code libraries."
msgstr ""

#. Reference: sprite
#: ./course/glossary.csv:90
msgid "sprite"
msgstr ""

#. Reference: sprite
#: ./course/glossary.csv:90
msgid "sprites"
msgstr ""

#. Reference: sprite
#: ./course/glossary.csv:90
msgid ""
"In computer graphics, a sprite is an image you display on the screen. We "
"generally use this word to talk about moving images, like a character, a "
"monster, or an item falling on the ground."
msgstr ""
