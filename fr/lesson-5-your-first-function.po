# Translations template for Learn GDScript From Zero.
# Copyright (C) 2022 GDQuest
# This file is distributed under the same license as the Learn GDScript From
# Zero project.
# Automatically generated, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Learn GDScript From Zero\n"
"Report-Msgid-Bugs-To: https://github.com/GDQuest/learn-gdscript\n"
"POT-Creation-Date: 2022-03-07 21:03+0100\n"
"PO-Revision-Date: 2022-03-26 18:16+0100\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"Generated-By: Babel 2.9.1\n"
"X-Generator: Poedit 3.0.1\n"

#: course/lesson-5-your-first-function/lesson.tres:14
msgid ""
"So far, we have called existing functions that other developers wrote.\n"
"\n"
"In this lesson, we'll talk more about what functions are and see some "
"examples. Then, you will learn how to define your own functions."
msgstr ""
"Jusqu'à présent, nous avons appelé des fonctions existantes écrites par "
"d'autres développeurs.\n"
"\n"
"Dans cette leçon, nous allons parler davantage de ce que sont les fonctions "
"et voir quelques exemples. Ensuite, vous apprendrez à définir vos propres "
"fonctions."

#: course/lesson-5-your-first-function/lesson.tres:24
msgid "Functions are named sequences of instructions"
msgstr "Les fonctions sont des séquences d'instructions avec un nom"

#: course/lesson-5-your-first-function/lesson.tres:26
msgid ""
"Functions are [i]sequences of instructions[/i] we give a name. We call that "
"name an [i]identifier[/i].\n"
"\n"
"Using the identifier, we can get the computer to execute all the "
"instructions inside the function as many times as we need. This is what a "
"[i]function call[/i] does."
msgstr ""
"Les fonctions sont des [i]séquences d'instructions[/i] auxquelles nous "
"donnons un nom. Nous appelons ce nom un [i]identifiant[/i].\n"
"\n"
"En utilisant l'identifiant, nous pouvons demander à l'ordinateur d'exécuter "
"toutes les instructions de la fonction autant de fois que nécessaire. C'est "
"ce que fait un [i]appel de fonction[/i]."

# avec précision
# de façon précise. 
#: course/lesson-5-your-first-function/lesson.tres:38
msgid ""
"In computer programming, we talk about [i]identifiers[/i] rather than \"names"
"\".\n"
"\n"
"It is because a function name is a label the computer uses to precisely "
"[i]identify[/i] and refer to a function or other code elements.\n"
"\n"
"Identifiers are unique: you cannot reuse the same name in a given [i]space[/"
"i] in your code.\n"
"\n"
"If you try to name two functions the same, the computer will raise an error."
msgstr ""
"En programmation informatique, on parle d'[i]identifiants[/i] plutôt que de "
"« noms ».\n"
"\n"
"C'est parce qu'un nom de fonction est une étiquette que l'ordinateur utilise "
"pour précisément [i]identifier[/i] et faire référence à une fonction ou à "
"d'autres éléments du code.\n"
"\n"
"Les identifiants sont uniques : vous ne pouvez pas réutiliser le même nom "
"dans un [i]espace[/i] donné de votre code.\n"
"\n"
"Si vous essayez de donner le même nom à deux fonctions, l'ordinateur émettra "
"une erreur."

#: course/lesson-5-your-first-function/lesson.tres:54
msgid ""
"If there is any code that you need to run multiple times, you can put it "
"inside a function and give it a name.\n"
"\n"
"The instructions inside a function can be any code you want, and they will "
"all run every time you call the function.\n"
"\n"
"Here's the example of a [code]move_and_rotate()[/code] function that moves "
"the turtle forward and then turns it 90°."
msgstr ""
"S'il y a du code que vous devez exécuter plusieurs fois, vous pouvez le "
"mettre dans une fonction et lui donner un nom.\n"
"\n"
"Les instructions à l'intérieur d'une fonction peuvent être n'importe quel "
"code que vous voulez, et elles seront toutes exécutées chaque fois que vous "
"appelez la fonction.\n"
"\n"
"Voici l'exemple d'une fonction [code]move_and_rotate()[/code] qui fait "
"avancer la tortue puis la fait tourner de 90°."

#: course/lesson-5-your-first-function/lesson.tres:78
#, fuzzy
msgid ""
"The [code]move_and_rotate()[/code] function consists of two instructions, "
"each on a separate line. Both of those instructions call another familiar "
"function.\n"
"\n"
"You could write another function that calls [code]move_and_rotate()[/code] "
"four times to draw a square of length 200 pixels."
msgstr ""
"La fonction [code]move_and_rotate()[/code] se compose de deux instructions, "
"chacune sur une ligne distincte. Ces deux instructions appellent une autre "
"fonction que nous connaissions déjà.\n"
"\n"
"Vous pouvez écrire une autre fonction qui appelle [code]move_and_rotate()[/"
"code] quatre fois pour dessiner un carré de 200 pixels de long."

#: course/lesson-5-your-first-function/lesson.tres:100
msgid ""
"Every time we call [code]move_and_rotate()[/code], the two functions "
"[code]move_forward(200)[/code] and [code]turn_right(90)[/code] are called in "
"sequence.\n"
"\n"
"In this simple example, it may not feel super useful. Here's a more useful "
"and realistic one: a function to draw any rectangle.\n"
"\n"
"The following function uses [i]parameters[/i], which we will explore in the "
"next lesson.\n"
"\n"
"[i]Drag the slider to change the square's size.[/i]"
msgstr ""
"Chaque fois que nous appelons [code]move_and_rotate()[/code], les deux "
"fonctions [code]move_forward(200)[/code] et [code]turn_right(90)[/code] sont "
"appelées en séquence.\n"
"\n"
"Dans cet exemple si simple, cela peut ne pas sembler super utile. En voici "
"un plus utile et réaliste : une fonction pour dessiner n'importe quel "
"rectangle.\n"
"\n"
"La fonction suivante utilise des [i]paramètres[/i], que nous allons explorer "
"dans la prochaine leçon.\n"
"\n"
"[i]Faites glisser le curseur pour modifier la taille du carré.[/i]"

#: course/lesson-5-your-first-function/lesson.tres:124
msgid "How to define your own functions"
msgstr "Comment définir vos propres fonctions"

# On va décortiquer la marche a suivre pour def
#: course/lesson-5-your-first-function/lesson.tres:126
msgid ""
"Let's break down how you define a function.\n"
"\n"
"A function definition starts with the [code]func[/code] keyword followed by "
"a space, the function's name, parentheses, and a colon."
msgstr ""
"Voyons comment définir une fonction.\n"
"\n"
"Une définition de fonction commence par le mot-clé [code]func[/code] suivi "
"d'un espace, du nom de la fonction, de parenthèses et de deux points."

#: course/lesson-5-your-first-function/lesson.tres:148
msgid ""
"The instructions inside the function [b]must[/b] all start with a leading "
"tab character. You can insert that tab character by pressing the [b]Tab[/b] "
"key.\n"
"\n"
"We call those leading tabs [i]indents[/i]. They're important: the computer "
"uses them to know which instructions are part of the same code block."
msgstr ""
"Les instructions à l'intérieur de la fonction [b]doivent[/b] toutes "
"commencer par un caractère de tabulation. Vous pouvez insérer ce caractère "
"de tabulation en appuyant sur la touche [b]Tab[/b].\n"
"\n"
"Nous appelons ces tabulations initiales [i]indentations[/i]. Elles sont "
"importantes : l'ordinateur les utilise pour savoir quelles instructions font "
"partie du même bloc de code."

#: course/lesson-5-your-first-function/lesson.tres:158
msgid "Why do we use functions?"
msgstr "Pourquoi utilisons-nous des fonctions ?"

#: course/lesson-5-your-first-function/lesson.tres:161
msgid ""
"Functions are groups of instructions we reuse every time we call the "
"function.\n"
"\n"
"Because we give functions a name, they also allow us to name a set of "
"instructions, which is handy!"
msgstr ""
"Les fonctions sont des groupes d'instructions que nous réutilisons chaque "
"fois que nous appelons la fonction.\n"
"\n"
"Parce que nous donnons un nom aux fonctions, elles nous permettent aussi de "
"nommer un ensemble d'instructions, ce qui est pratique !"

#: course/lesson-5-your-first-function/lesson.tres:164
#: course/lesson-5-your-first-function/lesson.tres:165
msgid "To reuse code multiple times. "
msgstr "Pour réutiliser le code plusieurs fois. "

#: course/lesson-5-your-first-function/lesson.tres:164
#: course/lesson-5-your-first-function/lesson.tres:165
msgid "To run multiple instructions at once."
msgstr "Pour exécuter plusieurs instructions à la fois."

#: course/lesson-5-your-first-function/lesson.tres:164
#: course/lesson-5-your-first-function/lesson.tres:165
msgid "To put a name on multiple lines of code."
msgstr "Pour donner un nom aux plusieurs lignes de code."

#: course/lesson-5-your-first-function/lesson.tres:172
msgid "Names in code have rules"
msgstr "Les noms dans le code ont des règles"

#: course/lesson-5-your-first-function/lesson.tres:174
msgid ""
"Function identifiers cannot contain spaces. In general, names in programming "
"languages cannot contain spaces.\n"
"\n"
"The computer uses spaces to detect the separation between different keywords "
"and identifiers.\n"
"\n"
"Instead of spaces, in GDScript, we use underscores (\"_\"). You saw this "
"already with functions like [code]move_forward()[/code] or "
"[code]move_local_x()[/code]. This is the convention we follow in GDScript.\n"
"\n"
"There's another convention programmers use in some other programming "
"languages.\n"
"\n"
"Instead of using underscores, they start words with capital letters except "
"for the first one. With that convention, you'd write function names like "
"[code]moveForward()[/code] or [code]moveLocalX()[/code]\n"
"\n"
"Identifiers also [i]have[/i] to start with a letter or an underscore; You "
"[i]can't[/i] begin with a number, but you can use numbers after the first "
"character."
msgstr ""
"Les identifiants de fonction ne peuvent pas contenir d'espaces. En général, "
"les noms dans les langages de programmation ne peuvent pas contenir "
"d'espaces.\n"
"\n"
"L'ordinateur utilise les espaces pour détecter la séparation entre les "
"différents mots-clés et identifiants.\n"
"\n"
"Au lieu d'espaces, dans GDScript, nous utilisons des tirets bas (\"_\"). "
"Vous l'avez déjà vu avec des fonctions comme [code]move_forward()[/code] ou "
"[code]move_local_x()[/code]. C'est la convention que nous suivons dans "
"GDScript.\n"
"\n"
"Il existe une autre convention que les programmeurs utilisent dans d'autres "
"langages de programmation.\n"
"\n"
"Au lieu d'utiliser des tirets bas, on commence les mots par des lettres "
"majuscules, sauf pour le premier. Avec cette convention, vous écririez des "
"noms de fonctions comme [code]moveForward()[/code] ou [code]moveLocalX()[/"
"code]\n"
"\n"
"Les identifiants [i]doivent[/i] également commencer par une lettre ou un "
"tiret bas ; vous [i]ne pouvez pas[/i] commencer par un nombre, mais vous "
"pouvez utiliser des nombres après le premier caractère."

#: course/lesson-5-your-first-function/lesson.tres:192
msgid "Which of the following names are valid function names?"
msgstr "Parmi les noms suivants, lesquels sont des noms de fonction valides ?"

#: course/lesson-5-your-first-function/lesson.tres:193
msgid "Note that it's fine to use capital letters."
msgstr "Notez qu'il est acceptable d'utiliser des majuscules."

#: course/lesson-5-your-first-function/lesson.tres:195
msgid ""
"You can't name a function [code]move forward[/code] because it contains a "
"space. Names in code cannot contain spaces.\n"
"\n"
"They can't start with numbers either, which is why [code]45_degree_turn[/"
"code] is also invalid. \n"
"\n"
"However, having numbers elsewhere in a function name is fine. That's why "
"[code]make3NewCharacters[/code] works."
msgstr ""
"Vous ne pouvez pas nommer une fonction [code]move forward[/code] parce que "
"ce nom contient un espace. Les noms dans le code ne peuvent pas contenir "
"d'espaces.\n"
"\n"
"Ils ne peuvent pas non plus commencer par des nombres, c'est pourquoi "
"[code]45_degree_turn[/code] n'est pas non plus valide\n"
"\n"
"Cependant, il est possible d'avoir des nombres ailleurs dans le nom d'une "
"fonction. C'est pourquoi [code]make3NewCharacters[/code] fonctionne."

#: course/lesson-5-your-first-function/lesson.tres:200
msgid "move forward"
msgstr "move forward"

#: course/lesson-5-your-first-function/lesson.tres:200
#: course/lesson-5-your-first-function/lesson.tres:201
msgid "jump"
msgstr "jump"

#: course/lesson-5-your-first-function/lesson.tres:200
#: course/lesson-5-your-first-function/lesson.tres:201
msgid "make3NewCharacters"
msgstr "make3NewCharacters"

#: course/lesson-5-your-first-function/lesson.tres:200
#: course/lesson-5-your-first-function/lesson.tres:201
msgid "move_forward"
msgstr "move_forward"

#: course/lesson-5-your-first-function/lesson.tres:200
msgid "45_degree_turn"
msgstr "45_degree_turn"

#: course/lesson-5-your-first-function/lesson.tres:208
msgid "Instantly moving the turtle to a different position"
msgstr "Déplacer instantanément la tortue dans une position différente"

#: course/lesson-5-your-first-function/lesson.tres:210
msgid ""
"In order to draw multiple squares in different positions, we introduce a new "
"function for our turtle to use.\n"
"\n"
"The [code]jump()[/code] function picks up the turtle and places it relative "
"to where it is.\n"
"\n"
"So calling [code]jump(-100, 50)[/code] moves the turtle by 100 pixels to the "
"[b]left[/b] and 50 pixels [b]down[/b] without drawing any lines."
msgstr ""
"Afin de dessiner plusieurs carrés dans des positions différentes, nous "
"introduisons une nouvelle fonction à utiliser par notre tortue.\n"
"\n"
"La fonction [code]jump()[/code] prend la tortue et la place dans une "
"position relative à l'endroit où elle se trouve.\n"
"\n"
"Ainsi, en appelant [code]jump(-100, 50)[/code], la tortue se déplace de 100 "
"pixels vers [b]la gauche[/b] et de 50 pixels vers [b]le bas[/b] sans "
"dessiner de lignes."

#: course/lesson-5-your-first-function/lesson.tres:232
msgid "A function to draw squares"
msgstr "Une fonction pour dessiner des carrés"

#: course/lesson-5-your-first-function/lesson.tres:233
msgid ""
"Code a function named [code]draw_square()[/code] to draw one square of "
"length 200 pixels. The function should take no parameters.\n"
"\n"
"Use the [code]move_forward()[/code] and [code]turn_right()[/code] functions "
"to instruct the turtle.\n"
"\n"
"In the following practice, you'll use the [code]draw_square()[/code] "
"function to draw multiple squares by calling your own function."
msgstr ""
"Codez une fonction nommée [code]draw_square()[/code] pour dessiner un carré "
"de 200 pixels de long. La fonction ne doit prendre aucun paramètre.\n"
"\n"
"Utilisez les fonctions [code]move_forward()[/code] et [code]turn_right()[/"
"code] pour donner des instructions à la tortue.\n"
"\n"
"Dans l'exercice suivant, vous allez utiliser la fonction [code]draw_square()"
"[/code] pour dessiner plusieurs carrés en appelant votre propre fonction."

#: course/lesson-5-your-first-function/lesson.tres:246
#, fuzzy
msgid ""
"Until now, you've had to write code by hand, and it's boring. It's time to "
"code a reusable function. You'll use it to draw multiple squares."
msgstr ""
"Jusqu'à présent, vous deviez écrire du code à la main, et cela pouvait vous "
"sembler ennuyeux. Il est temps de coder une fonction réutilisable. Vous "
"allez l'utiliser pour dessiner plusieurs carrés."

#: course/lesson-5-your-first-function/lesson.tres:251
msgid "Drawing multiple squares"
msgstr "Dessiner plusieurs carrés"

#: course/lesson-5-your-first-function/lesson.tres:252
msgid ""
"You have a function to draw one square: [code]draw_square()[/code]. Use it "
"to draw three squares.\n"
"\n"
"We already created [code]draw_square()[/code] for you. Create a function "
"named [code]draw_three_squares[/code] that calls [code]draw_square()[/code] "
"three times.\n"
"\n"
"If you just call the function, all three squares will overlap. To stack them "
"diagonally, call [code]jump(300, 300)[/code] between two calls to "
"[code]draw_square()[/code].\n"
"\n"
"Calling [code]jump(300, 300)[/code] makes the turtle jump by 300 pixels to "
"the right and 300 pixels down without drawing any lines."
msgstr ""
"Vous avez une fonction pour dessiner un carré : [code]draw_square()[/code]. "
"Utilisez-la pour dessiner trois carrés.\n"
"\n"
"Nous avons déjà créé [code]draw_square()[/code] pour vous. Créez une "
"fonction appelée [code]draw_three_squares[/code] qui appelle "
"[code]draw_square()[/code] trois fois.\n"
"\n"
"Si vous appelez simplement la fonction, les trois carrés se superposeront. "
"Pour les empiler en diagonale, appelez [code]jump(300, 300)[/code] entre "
"deux appels à [code]draw_square()[/code].\n"
"\n"
"En appelant [code]jump(300, 300)[/code], la tortue fait un saut de 300 "
"pixels vers la droite et de 300 pixels vers le bas sans dessiner de lignes."

#: course/lesson-5-your-first-function/lesson.tres:275
msgid ""
"Now you created a function to draw squares, you can reuse it by calling it "
"multiple times."
msgstr ""
"Maintenant que vous avez créé une fonction pour dessiner des carrés, vous "
"pouvez la réutiliser en l'appelant plusieurs fois."

#: course/lesson-5-your-first-function/lesson.tres:279
msgid "Coding Your First Function"
msgstr "Coder votre première fonction"
