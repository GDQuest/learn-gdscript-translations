# Translations template for Learn GDScript From Zero.
# Copyright (C) 2022 GDQuest
# This file is distributed under the same license as the Learn GDScript From
# Zero project.
# Automatically generated, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Learn GDScript From Zero\n"
"Report-Msgid-Bugs-To: https://github.com/GDQuest/learn-gdscript\n"
"POT-Creation-Date: 2023-12-09 20:05+0100\n"
"PO-Revision-Date: 2022-03-12 00:58+0000\n"
"Last-Translator: Katarzyna Twardowska <katarina.twardowska@gmail.com>\n"
"Language-Team: Polish <https://hosted.weblate.org/projects/learn-gdscript-"
"from-zero/lesson-7-member-variables/pl/>\n"
"Language: pl\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=n==1 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 "
"|| n%100>=20) ? 1 : 2;\n"
"X-Generator: Weblate 4.12-dev\n"
"Generated-By: Babel 2.9.1\n"

#: course/lesson-7-member-variables/lesson.tres:14
msgid ""
"In this lesson, we take a first look at variables.\n"
"\n"
"In games, you need to keep track of many values that change over time:\n"
"\n"
"- The player's score.\n"
"- Every character or enemy's health.\n"
"- The last checkpoint.\n"
"\n"
"And so much more. You need to store, retrieve, and update those values.\n"
"\n"
"We call those values [i]variables[/i]. Variables are labels you use to keep "
"track of values that vary over time. Here's an example of a variable "
"tracking a character or monster's health."
msgstr ""
"W tej lekcji na warsztat weźmiemy w pierwszej kolejności zmienne.\n"
"\n"
"W grach musisz śledzić wiele wartości, które zmieniają się w czasie:\n"
"\n"
"- Wynik gracza.\n"
"- Zdrowie każdej postaci lub wroga.\n"
"- Ostatni punkt kontrolny.\n"
"\n"
"A to nie wszystkie z nich. Musisz przechowywać, pobierać i aktualizować te "
"wartości.\n"
"\n"
"Nazywamy te wartości [i]zmiennymi[/i]. Zmienne to etykiety używane do "
"śledzenia wartości zmieniających się w czasie. Oto przykład zmiennej "
"śledzącej zdrowie postaci lub potwora."

#: course/lesson-7-member-variables/lesson.tres:44
msgid ""
"The line above defines a new variable named [code]health[/code] and assigns "
"it a starting value of [code]100[/code] (that's what the equal sign does, "
"more on that below).\n"
"\n"
"Function parameters, which you saw in the previous lesson, are another "
"example of variables."
msgstr ""
"Powyższy wiersz definiuje nową zmienną o nazwie [code]health[/code] i "
"przypisuje jej wartość początkową [code]100[/code] (to właśnie robi znak "
"równości, więcej na ten temat poniżej).\n"
"\n"
"Parametry funkcji, z którymi zapoznałeś się w poprzedniej lekcji, to kolejny "
"przykład zmiennych."

#: course/lesson-7-member-variables/lesson.tres:56
msgid ""
"In this lesson, we start using variables built into Godot. They're a "
"particular kind called [i]member variables[/i].\n"
"\n"
"Member variables are values attached to a game entity. They're useful "
"properties like the [code]position[/code], [code]rotation[/code], and "
"[code]scale[/code] of a character.\n"
"\n"
"In a previous lesson, we saw how we could use the [code]rotate()[/code] "
"function to rotate our character."
msgstr ""
"W tej lekcji zaczniemy używać zmiennych wbudowanych w Godota. Jest to "
"szczególny rodzaj zmiennych nazywany [i]zmiennymi składowymi[/i].\n"
"\n"
"Zmienne składowe to wartości dołączone do narzędzia tworzącego gry. Są to "
"przydatne właściwości, takie jak [code]position[/code] (pozycja), "
"[code]rotation[/code] (obrót) czy [code]scale[/code] (skala).\n"
"\n"
"W poprzednich lekcjach wykorzystywaliśmy już funkcję [code]rotate()[/code] "
"do obracania naszej postaci."

#: course/lesson-7-member-variables/lesson.tres:80
msgid ""
"This function increases or decreases the value of the entity's "
"[code]rotation[/code] member variable.\n"
"\n"
"Say we want to reset the rotation to [code]0[/code] and make the character "
"upright. Using the [code]rotate()[/code] function can prove difficult: you "
"need to know the character's exact current angle to cancel it out.\n"
"\n"
"It's much easier to use the member variable rather than the function.\n"
"\n"
"The following code assigns the value [code]0[/code] to the character's "
"rotation, resetting its angle and making it upright."
msgstr ""
"Funkcja ta zwiększa lub zmniejsza wartość zmiennej składowej [code]rotation[/"
"code] odpowiadającej za obrót.\n"
"\n"
"Załóżmy, że chcemy zresetować obrót do [code]0[/code] i ustawić nasza postać "
"w pozycji pionowej. Użycie funkcji [code]rotate()[/code] może okazać się "
"trudne: musimy w końcu znać dokładny bieżący kąt obrotu, aby go wyzerować.\n"
"\n"
"Dużo łatwiej jest używać zmiennej składowej niż funkcji.\n"
"\n"
"Poniższy kod przypisuje wartość [code]0[/code] do obrotu postaci, resetując "
"jej kąt i ustawiając robota w pozycji pionowej."

#: course/lesson-7-member-variables/lesson.tres:106
msgid ""
"Notice how we use the equal sign ([code]=[/code]) to change the value of a "
"variable."
msgstr ""
"Zwróć uwagę, że używamy tutaj znaku równości ([code]=[/code]) do zmiany "
"wartości zmiennej."

#: course/lesson-7-member-variables/lesson.tres:114
msgid "What's a variable?"
msgstr "Czym jest zmienna?"

#: course/lesson-7-member-variables/lesson.tres:117
msgid ""
"Variables are labels you use to access values that change over time.\n"
"\n"
"You can also use them to put a name on a value you want to reuse throughout "
"your code. It makes your code easier to read and to change."
msgstr ""
"Zmienne to etykiety, których używasz, aby uzyskać dostęp do wartości "
"zmieniających się w czasie.\n"
"\n"
"Możesz również używać ich do przypisania nazwy wartościom, których będziesz "
"chciał użyć ponownie w swoim kodzie. Nazywanie ich ułatwia czytanie i "
"zmienianie kodu."

#: course/lesson-7-member-variables/lesson.tres:120
#: course/lesson-7-member-variables/lesson.tres:121
msgid "A label you use to keep track of a value that can change."
msgstr "Etykietą używaną do śledzenia wartości, która może ulec zmianie."

#: course/lesson-7-member-variables/lesson.tres:120
msgid "A function that varies over time."
msgstr "Funkcją, która zmienia się w czasie."

#: course/lesson-7-member-variables/lesson.tres:120
msgid "A decimal number."
msgstr "Liczbą dziesiętną."

#: course/lesson-7-member-variables/lesson.tres:128
msgid "Accessing sub-variables with the dot"
msgstr "Dostęp do podzmiennych z wykorzystaniem kropki"

#: course/lesson-7-member-variables/lesson.tres:130
#, fuzzy
msgid ""
"In video games, you will see many member variables that have sub-values.\n"
"\n"
"For example, the [code]position[/code] we mentioned has two coordinates: "
"[code]x[/code] and [code]y[/code].\n"
"\n"
"It's the same for the [code]scale[/code]: it has [code]x[/code] and [code]y[/"
"code] sub-variables. They respectively control the horizontal and vertical "
"size of the game entity.\n"
"\n"
"To access those X and Y sub-components, you add a dot (\".\") after the "
"variable name.\n"
"\n"
"The code below places the entity at [code]200[/code] pixels on the x-axis "
"and [code]250[/code] pixels on the y-axis."
msgstr ""
"W grach wideo zobaczysz wiele zmiennych składowych mających wartości "
"podrzędne.\n"
"\n"
"Na przykład wspomniana przez nas [code]position[/code] (pozycja) posiada "
"dwie współrzędne: [code]x[/code] i [code]y[/code].\n"
"\n"
"To samo dotyczy [code]scale[/code] (skali): jej podzmiennymi są [code]x[/"
"code] i [code]y[/code]. Kontrolują one odpowiednio poziomą i pionową "
"wielkość danego elementu.\n"
"\n"
"Aby uzyskać dostęp do tych podkomponentów X i Y, należy dodać kropkę („=”) "
"po nazwie zmiennej.\n"
"\n"
"Poniższy kod umieszcza dany element na pozycji wyrażonej w pikselach: "
"[code]180[/code] na osi x i [code]120[/code] na osi y."

#: course/lesson-7-member-variables/lesson.tres:158
msgid ""
"Notice how we use the equal sign (\"=\") to assign the numbers on the right "
"to the sub-variables on the left.\n"
"\n"
"Unlike in maths, in computer programming, the equal sign (\"=\") does not "
"mean \"is equal to.\"\n"
"\n"
"Instead, it means \"assign the result of the expression on the right to the "
"variable on the left\". We assign values so often in code that we prefer to "
"reserve the equal sign for that."
msgstr ""
"Zwróć uwagę, że używamy znaku równości („=”), aby przypisać liczby po prawej "
"stronie do podzmiennych po lewej stronie.\n"
"\n"
"W przeciwieństwie do matematyki, w programowaniu komputerowym znak równości "
"(„=”) nie oznacza „jest równy”.\n"
"\n"
"Zamiast tego oznacza „przypisz wynik wyrażenia po prawej stronie do zmiennej "
"po lewej stronie”. Tak często przypisujemy wartości w kodzie, że woleliśmy "
"zarezerwować na to znak równości."

#: course/lesson-7-member-variables/lesson.tres:170
msgid "In games, the Y-axis is positive going down"
msgstr "W grach oś Y schodzi dodanio w dół"

#: course/lesson-7-member-variables/lesson.tres:172
#, fuzzy
msgid ""
"Note that in games, assuming your character's position starts at (0, 0), the "
"code above moves the entity [code]200[/code] pixels to the right and "
"[code]250[/code] pixels down.\n"
"\n"
"In math, the y-axis is generally positive going up by convention.\n"
"\n"
"The convention is the [i]opposite[/i] in video games and many computer "
"applications: the y-axis is positive going down."
msgstr ""
"Zwróć uwagę, że w grach (zakładając, że pozycja twojej postaci zaczyna się "
"od (0, 0)) powyższy kod przesuwa jednostkę o [code]180[/code] pikseli w "
"prawo i [code]120[/code] pikseli w dół.\n"
"\n"
"W matematyce oś Y jest generalnie dodatnia, zgodnie z konwencją.\n"
"\n"
"Konwencja ta jest [i]przeciwna[/i] w grach wideo i wielu aplikacjach "
"komputerowych: tutaj oś y jest dodatnia, gdy schodzimy w dół."

#: course/lesson-7-member-variables/lesson.tres:194
#, fuzzy
msgid "Why does the Y-axis point downwards?"
msgstr "W grach oś Y schodzi dodanio w dół"

#: course/lesson-7-member-variables/lesson.tres:196
msgid ""
"This may be confusing if you only saw the y-axis pointing up in math "
"classes. However, in math, axes go in any direction. They don't even have to "
"be perpendicular.\n"
"\n"
"On the computer, the position (0, 0) happens to correspond to the top-left "
"of your computer screen. It then makes sense for coordinates to be positive "
"when going towards the bottom-right corner.\n"
"\n"
"This leads to another question: why is position zero the top left of the "
"screen? This is due to computer and TV displays history: they would "
"calculate and display pixels starting from the top left corner and moving "
"towards the bottom right corner."
msgstr ""
"Może być to dla ciebie mylące, gdyż oś y na lekcjach matematyki jest "
"skierowana w górę. Jednak w samej matematyce osie mogą iść w dowolnym "
"kierunku. Nie muszą nawet być prostopadłe.\n"
"\n"
"Na komputerze pozycja (0, 0) odpowiada lewemu górnemu rogu ekranu. Przez to "
"sensownym jest, żeby współrzędne były dodatnie podczas przechodzenia w prawy "
"dolny róg.\n"
"\n"
"To prowadzi do kolejnego pytania: dlaczego pozycja zero znajduje się w lewym "
"górnym rogu ekranu? Wynika to z historii wyświetlaczy komputerowych i "
"telewizyjnych: obliczały one i wyświetlały piksele, zaczynając od lewego "
"górnego rogu i przesuwając się w kierunku prawego dolnego rogu."

#: course/lesson-7-member-variables/lesson.tres:210
msgid ""
"Let's look at one last example before moving on to the practice. The "
"following code makes the character 1.5 times its starting size."
msgstr ""
"Rzućmy okiem jeszcze na ostatni przykład, nim przejdziemy do ćwiczeń. "
"Poniższy kod sprawia, że postać staje się 1,5 raza większa od swojego "
"początkowego rozmiaru."

#: course/lesson-7-member-variables/lesson.tres:228
msgid "How do you access sub-variables?"
msgstr "Jak uzyskać dostęp do zmiennych podrzędnych?"

#: course/lesson-7-member-variables/lesson.tres:229
msgid ""
"Variables often hold sub-values, like the [code]position[/code] has two sub-"
"variables: [code]x[/code] and [code]y[/code]. How would you access the "
"[code]x[/code], for example?"
msgstr ""
"Zmienne często przechowują wartości podrzędne, na przykład [code]position[/"
"code] zawiera w sobie dwie podzmienne: [code]x[/code] i [code]y[/code]. W "
"jaki sposób możesz uzyskać dostęp do na przykład [code]x[/code]?"

#: course/lesson-7-member-variables/lesson.tres:231
msgid ""
"To access a sub-variable, you need to write a dot between the parent "
"variable name and the sub-variable name.\n"
"\n"
"For example, to access the [code]x[/code] sub-variable of the "
"[code]position[/code] variable, you'll write [code]position.x[/code]."
msgstr ""
"Aby uzyskać dostęp do podzmiennej, musisz wpisać kropkę między nazwą "
"zmiennej nadrzędnej a nazwą podzmiennej.\n"
"\n"
"Na przykład, aby uzyskać dostęp do zmiennej podrzędnej [code]x[/code] "
"należącej do zmiennej [code]position[/code], napiszesz [code]position.x[/"
"code]."

#: course/lesson-7-member-variables/lesson.tres:234
#: course/lesson-7-member-variables/lesson.tres:235
msgid "You write a dot (\".\") between the variable and the sub-variable name."
msgstr "Wpisując kropkę („.”) pomiędzy nazwą zmiennej a podzmiennej."

#: course/lesson-7-member-variables/lesson.tres:234
msgid ""
"You write an arrow (\"->\") between the variable and the sub-variable name."
msgstr "Wpisując strzałkę („->”) pomiędzy nazwą zmiennej a podzmiennej."

#: course/lesson-7-member-variables/lesson.tres:234
msgid ""
"You write a slash (\"/\") between the variable and the sub-variable name."
msgstr "Wpisując ukośnik („/”) pomiędzy nazwą zmiennej a podzmiennej."

#: course/lesson-7-member-variables/lesson.tres:244
msgid ""
"In a future lesson, we'll explain why and how those variables have sub-"
"variables.\n"
"\n"
"For now, just know you can use the dot to access them.\n"
"\n"
"We'll tell you which variables have sub-components and what their names "
"are.\n"
"\n"
"In the next lessons, you'll create your own variables and do operations on "
"them to add or remove [code]score[/code], [code]health[/code], you name it.\n"
"\n"
"For now, let's practice accessing variables."
msgstr ""
"W przyszłych lekcjach wyjaśnimy, dlaczego i w jaki sposób te zmienne mają "
"swoje podzmienne.\n"
"\n"
"Na razie po prostu miej świadomość, że możesz użyć kropki, aby uzyskać do "
"nich dostęp.\n"
"\n"
"Powiemy ci, które zmienne mają podkomponenty i jakie są ich nazwy.\n"
"\n"
"W następnych lekcjach utworzysz własne zmienne i wykonasz na nich operacje, "
"aby dodać lub usunąć [code]score[/code] (wynik), [code]health[/code] "
"(zdrowie), czy wartość dowolnie nazwanych przez siebie zmiennych.\n"
"\n"
"Na ten moment przećwiczmy jednak uzyskiwanie dostępu do zmiennych."

#: course/lesson-7-member-variables/lesson.tres:260
msgid "Draw a rectangle at a precise position"
msgstr "Narysuj prostokąt o dokładnej pozycji"

#: course/lesson-7-member-variables/lesson.tres:261
msgid ""
"Draw a rectangle of 200 by 120 pixels at the X position of 120 pixels and Y "
"position of 100 pixels.\n"
"\n"
"You need to replace the numbers in the code editor to draw the correct "
"rectangle."
msgstr ""
"Narysuj prostokąt o wielkości 200 na 120 pikseli w pozycji X 120 pikseli i Y "
"100 pikseli.\n"
"\n"
"Aby narysować poprawny prostokąt, musisz odpowiednio zmienić liczby "
"przypisane w edytorze kodu."

#: course/lesson-7-member-variables/lesson.tres:275
msgid ""
"Use the position member variable and its sub-variables to change the "
"rectangle's position."
msgstr ""
"Użyj zmiennej składowej odpowiadającej za pozycję i jej zmiennych "
"podrzędnych, aby zmienić położenie prostokąta."

#: course/lesson-7-member-variables/lesson.tres:280
#, fuzzy
msgid "Draw squares at different positions"
msgstr "Narysuj prostokąty o różnych pozycjach"

#: course/lesson-7-member-variables/lesson.tres:281
#, fuzzy
msgid ""
"Draw three squares of size 100 by 100 that are 100 pixels apart on the "
"horizontal axis. In other words, there should be a 100-pixel gap between two "
"squares.\n"
"\n"
"You should draw the squares starting at the position (100, 100). This means "
"you should position the first square at 100 on the X axis and 100 on the Y "
"axis.\n"
"\n"
"Remember you need to use the equal sign ([code]=[/code]) to change the value "
"of a variable, like the turtle's position.\n"
"\n"
"Write your code inside the [code]run()[/code] function so the computer can "
"recognize it.\n"
"\n"
"Use the provided [code]draw_rectangle()[/code] function to draw each square."
msgstr ""
"Narysuj trzy kwadraty o wymiarach 100 na 100 pikseli oddalone od siebie o "
"100 pikseli na osi poziomej. Innymi słowy pomiędzy stworzonymi kwadratami "
"powinien być odstęp wynoszący 100 pikseli.\n"
"\n"
"Zacznij rysować kwadraty od pozycji (100, 100). Oznacza to, że musisz "
"umieścić swój pierwszy kwadrat na pozycji 100 pikseli w osi X i 100 pikseli "
"w osi Y.\n"
"\n"
"Pamiętaj, że musisz użyć znaku równości ([code]=[/code]), aby zmienić "
"wartość danej zmiennej odpowiadającej na przykład za pozycję żółwika.\n"
"\n"
"Napisz swój kod w funkcji [code]run()[/code], aby komputer mógł go rozpoznać."

#: course/lesson-7-member-variables/lesson.tres:299
#, fuzzy
msgid ""
"Now you can place and draw one shape, but how about drawing several? In this "
"practice, you'll place three squares side by side to really get the hang of "
"properties."
msgstr ""
"Będąc w stanie narysować jeden prostokąt o podanej pozycji, co powiesz na "
"spozycjonowanie kilku? Naprawdę staniesz się z właściwościami za pan brat."

#: course/lesson-7-member-variables/lesson.tres:303
msgid "Introduction to Member Variables"
msgstr "Wprowadzenie do zmiennych składowych"
