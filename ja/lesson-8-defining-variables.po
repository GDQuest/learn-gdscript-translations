# Translations template for Learn GDScript From Zero.
# Copyright (C) 2022 GDQuest
# This file is distributed under the same license as the Learn GDScript From
# Zero project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Learn GDScript From Zero\n"
"Report-Msgid-Bugs-To: https://github.com/GDQuest/learn-gdscript\n"
"POT-Creation-Date: 2023-05-16 09:25+0200\n"
"PO-Revision-Date: 2024-03-31 12:09+0000\n"
"Last-Translator: cyochot <k97un9ri@gmail.com>\n"
"Language-Team: Japanese <https://hosted.weblate.org/projects/"
"learn-gdscript-from-zero/lesson-8-defining-variables/ja/>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 5.5-dev\n"
"Generated-By: Babel 2.9.1\n"

#: course/lesson-8-defining-variables/lesson.tres:13
msgid ""
"In the previous lesson, you used a predefined member variable named "
"[code]position[/code].\n"
"\n"
"In your projects, you will need to define your own variables.\n"
"\n"
"Imagine that you need to track the player's health in your game.\n"
"\n"
"They may start with [code]5[/code] health points. When taking a hit, the "
"health should go down to [code]4[/code]. After another hit, it should be "
"[code]3[/code]. And so on.\n"
"\n"
"To keep track of that, you can create a variable named [code]health[/code] "
"to which you add and subtract points.\n"
"\n"
"The example below introduces the [code]print()[/code] function, which "
"outputs its argument to the output box on the left.\n"
"\n"
"Click the [i]run()[/i] button to instantly run the entire function, and "
"click the [i]step[/i] button to execute lines of code one by one.\n"
"\n"
"The [i]Debugger[/i] panel at the bottom shows the current value of the "
"[code]health[/code] variable."
msgstr ""
"前のレッスンでは、[code]position[/code] "
"という名前の事前定義されたメンバー変数を使用しました。\n"
"\n"
"プロジェクトでは、独自の変数を定義する必要があります。\n"
"\n"
"ゲーム内でプレイヤーの健康状態を追跡する必要があると想像してください。\n"
"\n"
"体力[code]5[/code] から始まる場合があります。 攻撃を受けると、体力は "
"[code]4[/code] まで低下します。 もう一度ヒットすると、[code]3[/code] "
"になるはずです。 等々。\n"
"\n"
"これを追跡するには、[code]health[/code] "
"という名前の変数を作成し、それにポイントを加算および減算します。\n"
"\n"
"以下の例では、引数を左側の出力ボックスに出力する [code]print()[/code] "
"関数を紹介します。\n"
"\n"
"[i]run()[/i] ボタンをクリックすると関数全体が即座に実行され、[i]step[/i] "
"ボタンをクリックするとコード行を 1 行ずつ実行します。\n"
"\n"
"下部の [i]Debugger[/i] パネルには、[code]health[/code] "
"変数の現在の値が表示されます。"

#: course/lesson-8-defining-variables/lesson.tres:47
msgid ""
"After executing the first two lines of code, you will have a health variable "
"storing a value of [code]4[/code].\n"
"\n"
"Below, we'll break down how you define new variables and explain the "
"[code]print()[/code] function."
msgstr ""
"コードの最初の 2 行を実行すると、[code]4[/code] "
"の値を格納するhelth変数が作成されます。\n"
"\n"
"以下では、新しい変数を定義する方法を詳しく説明し、[code]print()[/code] "
"関数について説明します。"

#: course/lesson-8-defining-variables/lesson.tres:57
msgid "Defining a variable"
msgstr "変数の定義"

#: course/lesson-8-defining-variables/lesson.tres:59
msgid ""
"To use a variable, you must first define it so the computer registers its "
"name.\n"
"\n"
"To do so, you start a line of code with the [code]var[/code] keyword "
"followed by your desired variable name. Like [code]func[/code] stands for "
"[i]function[/i], [code]var[/code] stands for [i]variable[/i].\n"
"\n"
"Variables are case-sensitive, which means [code]health[/code] and "
"[code]Health[/code] are technically different variables. Be careful to use "
"the same capitalization wherever you refer to the same variable, or you "
"could be reading or writing to a different variable.\n"
"\n"
"The following line defines a [code]health[/code] variable pointing to no "
"value. You can think of it as creating a product label you have yet to stick "
"onto something."
msgstr ""
"変数を使用するには、まずコンピューターがその名前を登録できるように定義する必"
"要があります。\n"
"\n"
"変数を定義するには、コード行の先頭に[code]var[/code]キーワードを書き、その後"
"に希望する変数名を続けます。 [code]func[/code]が[i]関数[/i]を表すのと同様に、"
"[code]var[/code]は[i]変数[/i]を表します。\n"
"\n"
"変数名は、大文字と小文字が区別されます。つまり、[code]health[/code]と[code]He"
"alth[/code]は技術的には異なる変数です。 "
"同じ変数を参照するときは、常に同じ大文字と小文字を使用する必要があります。 "
"そうしないと、別の変数を読み書きしている可能性があります。\n"
"\n"
"次の行は、値を持たない[code]health[/code]変数を定義しています。 "
"商品ラベルをまだ何も貼っていない状態と考えてください。"

#: course/lesson-8-defining-variables/lesson.tres:85
msgid ""
"Like with functions, a member variable's name must be unique inside a given "
"code file. Creating two variables next to each other with the same name will "
"cause an error."
msgstr ""
"関数と同様に、メンバー変数の名前は、特定のコードファイル内で一意である必要が"
"あります。 同じ名前の変数を隣り合わせに作成すると、エラーが発生します。"

#: course/lesson-8-defining-variables/lesson.tres:105
msgid ""
"To use a variable, you want to assign it a starting value. You can do so "
"using the equal sign (=).\n"
"\n"
"This code assigns the value [code]100[/code] to a new variable named "
"[code]health[/code]."
msgstr ""
"変数を使用するには、最初に値を割り当てる必要があります。 "
"等号（=）を使用して割り当てることができます。\n"
"\n"
"次のコードは、値[code]100[/code]を[code]health[/code]という名前の新しい変数に"
"割り当てます。"

#: course/lesson-8-defining-variables/lesson.tres:127
msgid ""
"After defining your variable, you can access its value by writing the "
"variable's name."
msgstr "変数を定義した後、その値にアクセスするには、変数名を記述します。"

#: course/lesson-8-defining-variables/lesson.tres:147
msgid ""
"The code above will display the number [code]100[/code] to some output "
"window.\n"
"\n"
"Notice we don't use the [code]var[/code] keyword anymore as we only need it "
"to [i]define[/i] a variable.\n"
"\n"
"Also, once you define a variable, you can change its value anytime with the "
"equal sign."
msgstr ""
"上記のコードは、出力ウィンドウに数字[code]100[/code]を表示します。\n"
"\n"
"変数を[i]定義[/i]するときにのみ必要なので、[code]var[/code]キーワードがもう使"
"用されていないことに注意してください。\n"
"\n"
"また、変数を定義すると、等号を使っていつでもその値を変更できます。"

#: course/lesson-8-defining-variables/lesson.tres:169
msgid "About the print function"
msgstr "print関数について"

#: course/lesson-8-defining-variables/lesson.tres:171
msgid ""
"The [code]print()[/code] function is generally the first function you learn "
"in academic programming courses.\n"
"\n"
"It sends (\"prints\") the message or value you give it to some output "
"window, often a black window with plain white text."
msgstr ""
"[code]print()[/code] 関数は、通常、学術的なプログラミング "
"コースで最初に学習する関数です。\n"
"\n"
"指定したメッセージまたは値を出力ウィンドウ "
"(多くの場合、白いテキストが表示された黒いウィンドウ) に送信 (「印刷」) "
"します。"

#: course/lesson-8-defining-variables/lesson.tres:183
msgid ""
"Programmers often use [code]print()[/code] to quickly check the value of "
"their variables when their game runs.\n"
"\n"
"In the app, we made a special output window that captures calls to "
"[code]print()[/code] and displays a card to make it friendlier for you."
msgstr ""
"プログラマーはよく、ゲームの実行中に変数の値をすばやく確認するために[code]pri"
"nt()[/code]関数を使います。\n"
"\n"
"このアプリでは、[code]print()[/code] 関数が呼び出された内容をキャプチャする特"
"別な出力ウィンドウを用意しており、カードとして表示することでわかりやすくしま"
"した。"

#: course/lesson-8-defining-variables/lesson.tres:205
msgid ""
"Here, the verb [i]print[/i] means \"to send information to display on the "
"screen.\"\n"
"\n"
"The function \"prints\" things on your computer display; It does not relate "
"to printers."
msgstr ""
"ここで、動詞の[i]print[/i]は「画面に表示するための情報を送る」ことを意味しま"
"す。\n"
"\n"
"「print」関数は、プリンターではなく、コンピューターのディスプレイに物事を「表"
"示」します。"

#: course/lesson-8-defining-variables/lesson.tres:215
msgid "Variables are like labels"
msgstr "変数はラベルのようなもの"

#: course/lesson-8-defining-variables/lesson.tres:217
msgid ""
"As we hinted above, in GDScript, variables work a bit like labels.\n"
"\n"
"Assigning a value to a variable is like taking your label (the variable) and "
"sticking it onto some item (the value)."
msgstr ""
"先ほども少し触れましたが、GDScript での変数は、ラベルのような働きをします。\n"
"\n"
"変数に値を代入することは、ラベル (変数) を取ってきて、何かのアイテム (値) "
"に貼り付けるようなものです。"

#: course/lesson-8-defining-variables/lesson.tres:229
msgid ""
"Like a supermarket has a database of product labels, the computer keeps a "
"list of all variables in your code.\n"
"\n"
"Given the variable name, the computer can look up the attached value.\n"
"\n"
"It has an important consequence. In GDScript, you can stick that label to "
"any other value."
msgstr ""
"スーパーマーケットが商品のラベルのデータベースを持っているように、コンピュー"
"ターはあなたのコード内の全ての変数のリストを保持しています。\n"
"\n"
"変数名さえわかれば、コンピューターはその変数に紐付けられた値を調べることがで"
"きます。\n"
"\n"
"この仕組みには、GDScript において重要なポイントがあります。 "
"貼ったラベルは、別の値に貼り直すこともできるのです。"

#: course/lesson-8-defining-variables/lesson.tres:253
msgid ""
"The above code is like taking a label from the appropriate item and sticking "
"it to the wrong thing:\n"
"\n"
"- At line 2, the [code]health[/code] variable holds a number.\n"
"- From line 3, [code]health[/code] holds text.\n"
"\n"
"The computer will let you do that! The code's syntax and \"grammar\" are "
"correct, but it's not good.\n"
"\n"
"Variable names should describe the value they contain, so a [code]health[/"
"code] variable with a text value will confuse your future self and other "
"coders. It can also cause errors in your game.\n"
"\n"
"Later on, we'll see how to avoid this issue with [i]variable types[/i]. For "
"now, let's practice creating variables!"
msgstr ""
"上記のコードは、あるアイテムから本来のラベルをはがして、別の間違ったものに貼"
"り付けるようなものです。\n"
"\n"
"・2行目では、[code]health[/code]変数は数値を持っています。(本来のラベルが貼ら"
"れている)\n"
"・3行目からは、[code]health[/code]変数はテキストを持っています。(本来のラベル"
"をはがして、別のラベルを貼った)\n"
"\n"
"コンピュータは、このようなことを許容してしまいます。コードの構文と \"文法\" "
"は正しくても、望ましい動作ではありません。\n"
"\n"
"変数名は、その中に含まれている値を説明するものでなければなりません。そのため"
"、[code]health[/code]という変数にテキスト値を入れると、将来の自分や他のプログ"
"ラマーを混乱させる可能性があります。ゲーム内でエラーが発生する原因にもなりえ"
"ます。\n"
"\n"
"後ほど、[i]変数型[/i] を使ってこのような問題を回避する方法を見ていきます。 "
"今回は、変数作成の演習をしてみましょう！"

#: course/lesson-8-defining-variables/lesson.tres:270
msgid "Define a health variable"
msgstr "ヘルス変数を定義する"

#: course/lesson-8-defining-variables/lesson.tres:271
msgid ""
"Define a variable named [code]health[/code] with a starting value of "
"[code]100[/code].\n"
"\n"
"You can define variables inside or outside functions. In this practice, you "
"shouldn't create a function."
msgstr ""
"[code]health[/code] という名前の変数を、開始値 [code]100[/code] "
"で定義します。\n"
"\n"
"関数の内部または外部で変数を定義できます。 "
"この実践では、関数を作成しないでください。"

#: course/lesson-8-defining-variables/lesson.tres:282
msgid ""
"In this practice, you'll define your first variable and give it a specific "
"starting value."
msgstr "この演習では、最初の変数を定義し、その変数に具体的な初期値を設定します。"

#: course/lesson-8-defining-variables/lesson.tres:286
msgid "Defining Your Own Variables"
msgstr "独自の変数を定義する"
