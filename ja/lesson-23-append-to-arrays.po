# Translations template for Learn GDScript From Zero.
# Copyright (C) 2022 GDQuest
# This file is distributed under the same license as the Learn GDScript From
# Zero project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Learn GDScript From Zero\n"
"Report-Msgid-Bugs-To: https://github.com/GDQuest/learn-gdscript\n"
"POT-Creation-Date: 2022-06-12 11:07+0200\n"
"PO-Revision-Date: 2024-03-31 09:14+0000\n"
"Last-Translator: cyochot <k97un9ri@gmail.com>\n"
"Language-Team: Japanese <https://hosted.weblate.org/projects/"
"learn-gdscript-from-zero/lesson-23-append-to-arrays/ja/>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 5.5-dev\n"
"Generated-By: Babel 2.9.1\n"

#: course/lesson-23-append-to-arrays/lesson.tres:13
msgid ""
"In previous lessons, you learned how to create arrays to store lists of "
"values and how to loop over them. It's nice, but you won't go far with only "
"that.\n"
"\n"
"The real strength of arrays is that you can add and remove values from them "
"at any time. It allows you to [i]queue[/i] or [i]stack[/i] data."
msgstr ""
"前のレッスンでは、値のリストを格納する配列を作成する方法と、値をループ処理す"
"る方法を学習しました。それは素晴らしいことですが、それだけでは遠くまで行きま"
"せん。\n"
"\n"
"配列の本当の強みは、いつでも値を追加および削除できることです。これにより、デ"
"ータを[i]キュー[/i]に入れたり[i]スタック[/i]したりできます。"

#: course/lesson-23-append-to-arrays/lesson.tres:25
msgid "For now, let's take another example."
msgstr "とりあえず、別の例を見てみましょう。"

#: course/lesson-23-append-to-arrays/lesson.tres:33
msgid "Tracking orders in a restaurant management game"
msgstr "レストラン管理ゲームでの注文の追跡"

#: course/lesson-23-append-to-arrays/lesson.tres:35
msgid ""
"You're making a restaurant management game where customers place orders, and "
"you need to handle them as they come.\n"
"\n"
"In this game, customers order meals that end up in a queue. You need to "
"prepare them in the kitchen.\n"
"\n"
"In this example, we simulate orders arriving and getting completed over time."
msgstr ""
"顧客が注文し、注文が来たときに処理する必要があるレストラン管理ゲームを作成し"
"ています。\n"
"\n"
"このゲームでは、顧客が注文した食事が列に並びます。キッチンで準備する必要があ"
"ります。\n"
"\n"
"この例では、時間の経過とともに注文が到着し、完了することをシミュレートします"
"。"

#: course/lesson-23-append-to-arrays/lesson.tres:59
msgid ""
"How do you keep track of pending and completed orders? With an array!\n"
"\n"
"When a customer purchases a meal, you want to [i]append[/i] it to the array. "
"Then, as you complete a meal in the kitchen and serve it, you want to remove "
"it from the array.\n"
"\n"
"You can do that with the [code]append()[/code] and the [code]pop_front()[/"
"code] functions of the array, respectively.\n"
"\n"
"Try to read the code below before moving on. Don't worry if not everything "
"makes sense, as we'll break it all down."
msgstr ""
"保留中の注文と完了した注文をどのように追跡しますか?配列付き!\n"
"\n"
"顧客が食事を購入したら、その食事を配列に[i]追加[/i]します。次に、キッチンで食"
"事を完成させて提供するときに、配列から削除する必要があります。\n"
"\n"
"これは、配列の [code]append()[/code] 関数と [code]pop_front()[/code] "
"関数でそれぞれ行うことができます。\n"
"\n"
"先に進む前に、以下のコードを読んでみてください。すべてが理にかなっているとは"
"限らなくても、すべてを分解しますのでご安心ください。"

#: course/lesson-23-append-to-arrays/lesson.tres:85
msgid ""
"Notice how we call some functions by writing a dot after a variable name. "
"Like a given value type can have sub-variables, it can also have its own "
"functions.\n"
"\n"
"Functions like [code]append()[/code] and [code]pop_front()[/code] only exist "
"on arrays. That's why to call them, we need to access it from the array "
"using the dot: [code]array.append()[/code]."
msgstr ""
"変数名の後にドットを記述していくつかの関数を呼び出す方法に注目してください。"
"特定の値型がサブ変数を持つことができるのと同様に、独自の関数を持つこともでき"
"ます。\n"
"\n"
"[code]append()[/code] や [code]pop_front()[/code] のような関数は配列にのみ存"
"在します。そのため、それらを呼び出すには、ドットを使用して配列からアクセスす"
"る必要があります: [code]array.append()[/code]。"

#: course/lesson-23-append-to-arrays/lesson.tres:97
msgid ""
"Let's break down the code.\n"
"\n"
"We queue orders in the [code]waiting_orders[/code] array by appending them "
"to the array."
msgstr ""
"コードを分解してみましょう。\n"
"\n"
"[code]waiting_orders[/code] 配列の注文を配列に追加してキューに入れます。"

#: course/lesson-23-append-to-arrays/lesson.tres:119
msgid ""
"We can use a string to represent a meal when calling the [code]add_order()[/"
"code] function."
msgstr "[code]add_order()[/code] "
"関数を呼び出すときに、文字列を使用して食事を表すことができます。"

#: course/lesson-23-append-to-arrays/lesson.tres:139
msgid ""
"When completing an order, we remove it from the [code]waiting_orders[/code] "
"array by calling its [code]pop_front()[/code] function. This function gives "
"us the order back, which allows us to assign it to a temporary variable."
msgstr ""
"注文を完了すると、[code]pop_front()[/code] 関数を呼び出して "
"[code]waiting_orders[/code] 配列から注文を削除します。この関数は順序を戻し、"
"一時変数に割り当てることができます。"

#: course/lesson-23-append-to-arrays/lesson.tres:159
msgid ""
"We can then append the order to our [code]completed_orders[/code] array."
msgstr "次に、注文を [code]completed_orders[/code] 配列に追加できます。"

#: course/lesson-23-append-to-arrays/lesson.tres:179
msgid ""
"We call arrays like [code]waiting_orders[/code] a [i]queue[/i]: the first "
"element we append to the array is the first one we remove."
msgstr "[code]waiting_orders[/code] のような配列を[i]キュー[/i]と呼び、配列に追加する"
"最初の要素が最初に削除します。"

#: course/lesson-23-append-to-arrays/lesson.tres:187
msgid "What does #... mean?"
msgstr "どういう意味？"

#: course/lesson-23-append-to-arrays/lesson.tres:189
msgid ""
"We write [code]#...[/code] to represent ellipses in the code. It means "
"\"we're completing the function's code.\" We use that to break down code "
"examples and make them easier to learn from.\n"
"\n"
"The hash sign itself marks the start of a code comment. It's a line the "
"computer will ignore, which is why it typically appears in grey."
msgstr ""
"コード内で省略記号を表すには、[code]#...[/code] と記述します。 "
"これは、「関数のコードが完成している」ことを意味します。 "
"これを使用してコード例を細分化し、学習しやすくしています。\n"
"\n"
"ハッシュ記号自体がコード コメントの開始を示します。 "
"これはコンピュータが無視する行であるため、通常は灰色で表示されます。"

#: course/lesson-23-append-to-arrays/lesson.tres:199
msgid "Using arrays as stacks"
msgstr "配列をスタックとして使用する"

#: course/lesson-23-append-to-arrays/lesson.tres:201
msgid ""
"Another common use of arrays is [i]stacks[/i] of data.\n"
"\n"
"Take a factory management game where you need to retrieve materials from "
"stacks of crates. They arrive at the factory piled up vertically, and you "
"need to take them from top to bottom."
msgstr ""
"配列のもう 1 つの一般的な用途は、データの[i]スタック[/i]です。\n"
"\n"
"山積みの木箱から材料を取り出す必要がある工場管理ゲームを考えてみましょう。 "
"工場では縦に積まれた状態で届くので、上から下へ持っていく必要があります。"

#: course/lesson-23-append-to-arrays/lesson.tres:223
msgid ""
"To take a crate from the back of the array, this time, we use the "
"[code]pop_back()[/code] array function.\n"
"\n"
"This function removes (pops) the last value from the array and returns it to "
"you.\n"
"\n"
"Here we pop the last value of the array and print what's left of the array "
"to demonstrate how the array gets smaller."
msgstr ""
"配列の後ろからクレートを取得するには、今回は [code]pop_back()[/code] "
"配列関数を使用します。\n"
"\n"
"この関数は、配列から最後の値を削除 (ポップ) し、それを返します。\n"
"\n"
"ここでは、配列の最後の値をポップし、配列の残りを出力して、配列がどのように小"
"さくなるかを示します。"

#: course/lesson-23-append-to-arrays/lesson.tres:247
msgid ""
"Like [code]pop_front()[/code], the function returns the value removed from "
"the array. You will often store that value in a variable.\n"
"\n"
"The value in question could be the crate's content, which you can then use "
"to give resources to the player.\n"
"\n"
"In the following practices, you will use the [code]append()[/code], "
"[code]pop_front()[/code], and [code]pop_back()[/code] array functions."
msgstr ""
"[code]pop_front()[/code] と同様に、この関数は配列から削除された値を返します。"
" 多くの場合、その値は変数に保存されます。\n"
"\n"
"問題の値はクレートの内容である可能性があり、これを使用してプレーヤーにリソー"
"スを与えることができます。\n"
"\n"
"次の演習では、[code]append()[/code]、[code]pop_front()[/code]、および "
"[code]pop_back()[/code] 配列関数を使用します。"

#: course/lesson-23-append-to-arrays/lesson.tres:259
msgid "Completing orders"
msgstr "注文の完了"

#: course/lesson-23-append-to-arrays/lesson.tres:260
msgid ""
"The [code]waiting_orders[/code] array will be filled over time.\n"
"\n"
"Your job is to move orders from the waiting list to the "
"[code]completed_orders[/code] list using the array's [code]append()[/code] "
"and [code]pop_front()[/code] functions.\n"
"\n"
"Remember that the array's [code]pop_front()[/code] function returns the "
"popped value, which allows you to store it in a variable and then pass it to "
"another function."
msgstr ""
"[code]waiting_orders[/code] 配列は時間の経過とともにいっぱいになります。\n"
"\n"
"あなたの仕事は、配列の [code]append()[/code] 関数と [code]pop_front()[/code] "
"関数を使用して、待機リストから注文を [code]completed_orders[/code] "
"リストに移動することです。\n"
"\n"
"配列の [code]pop_front()[/code] 関数はポップされた値を返すので、それを変数に"
"格納して別の関数に渡すことができることに注意してください。"

#: course/lesson-23-append-to-arrays/lesson.tres:277
msgid ""
"Orders are piling up in the kitchen, and we need to clear them fast using "
"the array's [code]pop_front()[/code] function."
msgstr ""
"キッチンには注文が山積みになっているため、配列の [code]pop_front()[/code] "
"関数を使用して注文をすばやく片付ける必要があります。"

#: course/lesson-23-append-to-arrays/lesson.tres:282
msgid "Clearing up the crates"
msgstr "木箱を片付ける"

#: course/lesson-23-append-to-arrays/lesson.tres:283
msgid ""
"Crates are piling up on the platform. Move them out of the way by popping "
"them from the [code]crates[/code] array.\n"
"\n"
"You need to remove them from top to bottom using the array's [code]pop_back()"
"[/code] function.\n"
"\n"
"Your code should remove all the crates in the array using a while loop.\n"
"\n"
"[b]Careful![/b] if you run a while loop carelessly, you can lock the "
"software.\n"
"\n"
"You can check if the [code]crates[/code] array still contains values by "
"writing [code]while crates:[/code]"
msgstr ""
"プラットフォームには木箱が山積みになっています。 [code]crates[/code] "
"配列からそれらをポップして、邪魔にならない場所に移動します。\n"
"\n"
"配列の [code]pop_back()[/code] "
"関数を使用して、上から下にそれらを削除する必要があります。\n"
"\n"
"コードでは、while "
"ループを使用して配列内のすべてのクレートを削除する必要があります。\n"
"\n"
"[b]注意してください！[/b] while "
"ループを不用意に実行すると、ソフトウェアがロックされる可能性があります。\n"
"\n"
"[code]while crates:[/code] と記述することで、[code]crates[/code] "
"配列にまだ値が含まれているかどうかを確認できます"

#: course/lesson-23-append-to-arrays/lesson.tres:303
msgid ""
"Crates are piling up on the platform. Move them out of the way by popping "
"them from their array."
msgstr "プラットフォームには木箱が山積みになっています。 "
"配列からそれらをポップして、邪魔にならない場所に移動します。"

#: course/lesson-23-append-to-arrays/lesson.tres:307
msgid "Appending and popping values from arrays"
msgstr "配列への値の追加とポップ"
