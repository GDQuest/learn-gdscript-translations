# Translations template for Learn GDScript From Zero.
# Copyright (C) 2022 GDQuest
# This file is distributed under the same license as the Learn GDScript From
# Zero project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Learn GDScript From Zero\n"
"Report-Msgid-Bugs-To: https://github.com/GDQuest/learn-gdscript\n"
"POT-Creation-Date: 2023-10-06 07:34+0200\n"
"PO-Revision-Date: 2023-05-18 10:51+0000\n"
"Last-Translator: Riccardo Santangelo <s.burns@live.it>\n"
"Language-Team: Italian <https://hosted.weblate.org/projects/learn-gdscript-"
"from-zero/lesson-4-drawing-a-rectangle/it/>\n"
"Language: it\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Weblate 4.18-dev\n"
"Generated-By: Babel 2.9.0\n"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:14
msgid ""
"We'll use code created by others like we did in the previous lesson. This "
"time, we'll solve a more complicated problem: drawing shapes."
msgstr ""
"Useremo codice creato da altri proprio come nelle scorse successive. Questa "
"volta risolveremo un problema più complicato: disegnare delle forme "
"geometriche."

#: course/lesson-4-drawing-a-rectangle/lesson.tres:22
msgid "Meet the turtle"
msgstr "Ti presentiamo la tartaruga"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:24
msgid ""
"We present you: the turtle! We created the turtle to teach you how to call "
"functions."
msgstr ""
"Ti presentiamo: la tartaruga! Abbiamo creato la tartaruga per insegnarti a "
"chiamare le funzioni."

#: course/lesson-4-drawing-a-rectangle/lesson.tres:44
msgid ""
"The turtle is a little machine that moves forward, turns, and draws lines "
"along its path.\n"
"\n"
"To make it draw, you give it a list of instructions: on each code line, you "
"call one specific function.\n"
"\n"
"We prepared several functions for you:\n"
"\n"
"- [code]move_forward(pixels)[/code] makes the turtle move forward over a "
"given distance in [i]pixels[/i].  \n"
"- [code]turn_right(degrees)[/code] makes the turtle turn clockwise by a "
"precise amount of [i]degrees[/i].\n"
"- [code]turn_left(degrees)[/code] works the same as [code]turn_right(degrees)"
"[/code], except the turtle turns counter-clockwise.\n"
"\n"
"You'll use these functions the same way you used [code]rotate()[/code] "
"before.\n"
"\n"
"The turtle draws a white line as it moves. We'll use this line to draw "
"shapes.\n"
"\n"
"For example, to move the turtle 200 pixels, you would write "
"[code]move_forward(200)[/code]."
msgstr ""
"La tartaruga è una piccola macchina che si muove in avanti, si gira e "
"disegna linee lungo il suo percorso.\n"
"\n"
"Per farla disegnare, si dà un elenco di istruzioni: in ogni riga di codice "
"si chiama una funzione specifica.\n"
"\n"
"Abbiamo preparato per voi diverse funzioni:\n"
"\n"
"- [code]move_forward(pixel)[/code] fa avanzare la tartaruga su una "
"determinata distanza in [i]pixel[/i].  \n"
"- [code]turn_right(degrees)[/code] fa girare la tartaruga in senso orario di "
"una quantità precisa di [i]gradi[/i].\n"
"- [code]turn_left(degrees)[/code] funziona come [code]turn_right(degrees)[/"
"code], ma la tartaruga gira in senso antiorario.\n"
"\n"
"Queste funzioni si usano nello stesso modo in cui si è usato [code]rotate()[/"
"code].\n"
"\n"
"La tartaruga disegna una linea bianca mentre si muove. Questa linea verrà "
"utilizzata per disegnare forme.\n"
"\n"
"Per esempio, per spostare la tartaruga di 200 pixel, si scrive "
"[code]move_forward(200)[/code]."

#: course/lesson-4-drawing-a-rectangle/lesson.tres:76
msgid "Turning left and right"
msgstr ""

#: course/lesson-4-drawing-a-rectangle/lesson.tres:78
msgid ""
"The functions [code]turn_left()[/code] and [code]turn_right()[/code] work "
"the same.\n"
"\n"
"To turn 45 degrees to the right, you would write [code]turn_right(45)[/"
"code].\n"
"\n"
"If we call [code]turn_right(45)[/code], the turtle turns 45 degrees to the "
"right before moving on to the next instruction."
msgstr ""
"Le funzioni [code]turn_left()[/code] e [code]turn_right()[/code] funzionano "
"allo stesso modo.\n"
"\n"
"Per ruotare di 45 gradi a destra, dovresti scrivere [code]turn_right(45)[/"
"code].\n"
"\n"
"Se chiamiamo [code]turn_right(45)[/code], la tartaruga ruoterà di 45 gradi a "
"destra prima di passare all'istruzione successiva."

#: course/lesson-4-drawing-a-rectangle/lesson.tres:102
msgid ""
"Using these instructions, we can make any two-dimensional shape we like!\n"
"\n"
"Try to understand the example below. \n"
"\n"
"In the next practice, you'll use the functions we saw above to first draw a "
"corner, then a rectangle like this one."
msgstr ""
"Usando queste istruzioni possiamo creare qualsiasi forma bi-dimensionale che "
"vogliamo!\n"
"\n"
"Cerca di capire l'esempio qui sotto. \n"
"\n"
"Nel prossimo esercizio, userai le funzioni che abbiamo visto sopra per "
"disegnare un angolo, poi un rettangolo, proprio come questo."

#: course/lesson-4-drawing-a-rectangle/lesson.tres:124
msgid "In the function call below, which part is the argument?"
msgstr "Nella funzione chiamata qui sotto, quale parte è il parametro?"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:125
msgid "[code]move_forward(30)[/code]"
msgstr "[code]move_forward(30)[/code]"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:127
msgid ""
"A function's arguments are all the values inside the parentheses. In this "
"case, there's only one, but there can be multiple separated by commas.\n"
"\n"
"In this case, [code]move_forward[/code] is the function's name and [code]30[/"
"code] is the argument.\n"
"\n"
"This function call will make the turtle move forward by [code]30[/code] "
"pixels."
msgstr ""
"Gli argomenti di una funzione sono tutti i valori all'interno delle "
"parentesi. In questo caso, ce n'è solo uno, ma ce ne possono essere "
"molteplici separati da virgole.\n"
"\n"
"In questo caso, [code]move_forward[/code] è il nome della funzione e "
"[code]30[/code] è l'argomento.\n"
"\n"
"Questa chiamata di funzione farà si che la tartaruga si muova in avanti di "
"[code]30[/code] pixel."

#: course/lesson-4-drawing-a-rectangle/lesson.tres:132
msgid "move_forward"
msgstr "move_forward"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:132
#: course/lesson-4-drawing-a-rectangle/lesson.tres:133
msgid "30"
msgstr "30"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:140
msgid "The turtle uses code made specifically for this app!"
msgstr ""

#: course/lesson-4-drawing-a-rectangle/lesson.tres:142
msgid ""
"The turtle is a little learning tool custom-made for this course, based on a "
"proven code learning methodology. It's designed to teach you how to use and "
"create functions.\n"
"\n"
"So please don't be surprised if writing code like [code]turn_left()[/code] "
"inside of the Godot editor doesn't work! And don't worry, once you've "
"learned the foundations, you'll see they make it faster and easier to learn "
"Godot functions."
msgstr ""

#: course/lesson-4-drawing-a-rectangle/lesson.tres:154
msgid ""
"Let's move on to practice! You'll get to play with the turtle functions to "
"draw shapes."
msgstr ""

#: course/lesson-4-drawing-a-rectangle/lesson.tres:162
msgid "Drawing a Corner"
msgstr "Disegnando uno Spigolo"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:163
msgid ""
"In this practice, we'll tell the turtle to draw a corner.\n"
"\n"
"The corner is made up of two lines that are [code]200[/code] pixels long. "
"The lines are connected at each end by [code]90[/code] degrees, or right-"
"angle.\n"
"\n"
"The [code]move_forward()[/code] and [code]turn_right()[/code] functions to "
"the right draw a corner, but they're missing some arguments.\n"
"\n"
"Add the missing arguments so the turtle moves forward [code]200[/code] "
"pixels, turns right [code]90[/code] degrees, then moves forward again "
"[code]200[/code] pixels.\n"
"\n"
"We added the first argument for you so the turtle moves forward [code]200[/"
"code] pixels.\n"
"\n"
"In the following practices, we'll draw multiple corners to create "
"rectangles.\n"
"\n"
msgstr ""
"In questa pratica, diremo alla tartaruga di disegnare un angolo.\n"
"\n"
"L'angolo è composto da due linee lunghe [code]200[/code] pixel. Le linee "
"sono collegate a ciascuna estremità per [code]90[/code] gradi, o angolo "
"retto.\n"
"\n"
"Le funzioni [code]move_forward()[/code] e [code]turn_right()[/code] a destra "
"disegnano un angolo, ma mancano alcuni argomenti.\n"
"\n"
"Aggiungete gli argomenti mancanti in modo che la tartaruga si sposti in "
"avanti di [code]200[/code] pixel, si giri a destra di [code]90[/code] gradi, "
"quindi si sposti di nuovo in avanti di [code]200[/code] pixel.\n"
"\n"
"Abbiamo aggiunto il primo argomento per far sì che la tartaruga si muova in "
"avanti di [code]200[/code] pixel.\n"
"\n"
"Nei prossimi esercizi, disegneremo più angoli per creare dei rettangoli.\n"
"\n"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:187
msgid ""
"Use the turtle to draw a square's corner. You'll then build upon it to draw "
"a rectangle."
msgstr ""
"Usa la tartaruga per disegnare lo spigolo di un quadrato. Dopodiché su "
"quella base, disegnerai un rettangolo."

#: course/lesson-4-drawing-a-rectangle/lesson.tres:192
#: course/lesson-4-drawing-a-rectangle/lesson.tres:240
msgid "Drawing a Rectangle"
msgstr "Disegnando un Rettangolo"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:193
msgid ""
"Add the correct arguments to the functions [code]move_forward()[/code] and "
"[code]turn_right()[/code] to draw a rectangle with a width of [code]200[/"
"code] pixels, and a height of [code]120[/code] pixels.\n"
"\n"
"We wrote the first argument for you.\n"
"\n"
"In the next practice, you'll use the same functions to draw a bigger "
"rectangle."
msgstr ""
"Aggiungete gli argomenti corretti alle funzioni [code]move_forward()[/code] "
"e [code]turn_right()[/code] per disegnare un rettangolo con una larghezza di "
"[code]200[/code] pixel e un'altezza di [code]120[/code] pixel.\n"
"\n"
"Abbiamo scritto il primo argomento per voi.\n"
"\n"
"Nel prossimo esercizio, utilizzerete le stesse funzioni per disegnare un "
"rettangolo più grande."

#: course/lesson-4-drawing-a-rectangle/lesson.tres:213
msgid ""
"Based on your rectangle corner, you now need to draw a complete rectangle."
msgstr ""
"A partire dallo spigolo che hai creato, ora dovrai disegnare un rettangolo "
"completo."

#: course/lesson-4-drawing-a-rectangle/lesson.tres:218
msgid "Drawing a Bigger Rectangle"
msgstr "Disegnando un Rettangolo Più Grande"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:219
msgid ""
"Write out calls to the functions [code]move_forward()[/code] and "
"[code]turn_right()[/code] to draw a rectangle with a width of 220 pixels, "
"and a height of 260 pixels.\n"
"\n"
"We wrote the first two lines for you.\n"
"\n"
"Be sure to write each instruction on a separate line.\n"
"\n"
"Every line should start with one [code]Tab[/code] character so the computer "
"understands it's part of the [code]draw_rectangle()[/code] function."
msgstr ""
"Scrivi le chiamate per le funzioni [code]move_forward()[/code] e "
"[code]turn_right()[/code] per disegnare un rettangolo di larghezza 220 pixel "
"e altezza 260 pixel.\n"
"\n"
"Abbiamo scritto le prime due linee per te.\n"
"\n"
"Assicurati di scrivere ogni funzione su una linea diversa.\n"
"\n"
"Ricorda che ogni linea deve cominciare con il carattere [code]Tab[/code] "
"così da far comprendere al computer che quelle linee sono parte della "
"funzione [code]draw_rectangle()[/code]."

#: course/lesson-4-drawing-a-rectangle/lesson.tres:236
msgid ""
"At this point, you're ready to code entirely on your own. Call functions by "
"yourself to draw a complete rectangle."
msgstr ""
"A questo punto, sei pronto a scrivere codice da solo. Chiama le funzioni e "
"disegna un rettangolo completo."

#, fuzzy
#~ msgid ""
#~ "The function parameters are inside the parentheses in a function "
#~ "definition.\n"
#~ "\n"
#~ "The [code]func[/code] keyword tells the computer you're defining a new "
#~ "function, and [code]move_forward[/code] is the function's name."
#~ msgstr ""
#~ "I parametri delle funzioni si trovano all'interno delle parentesi tonde.\n"
#~ "\n"
#~ "La keyword [code]func[/code] dice al computer che stai definendo una "
#~ "nuova funzione, e [code]move_forward[/code] è il nome della funzione."

#, fuzzy
#~ msgid "func"
#~ msgstr "func"

#, fuzzy
#~ msgid "pixels"
#~ msgstr "pixels"
