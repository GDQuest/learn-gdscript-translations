# Translations template for Learn GDScript From Zero.
# Copyright (C) 2022 GDQuest
# This file is distributed under the same license as the Learn GDScript From
# Zero project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Learn GDScript From Zero\n"
"Report-Msgid-Bugs-To: https://github.com/GDQuest/learn-gdscript\n"
"POT-Creation-Date: 2023-05-16 09:25+0200\n"
"PO-Revision-Date: 2023-07-31 14:07+0000\n"
"Last-Translator: Peter Rake <prake71@gmail.com>\n"
"Language-Team: German <https://hosted.weblate.org/projects/"
"learn-gdscript-from-zero/lesson-15-modulo/de/>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Weblate 5.0-dev\n"
"Generated-By: Babel 2.9.0\n"

#: course/lesson-15-modulo/lesson.tres:14
msgid ""
"The modulo operation ([code]%[/code]) calculates the remainder of a whole "
"number division.\n"
"\n"
"For example, the modulo of [code]5[/code] by [code]3[/code] ([code]5 % 3[/"
"code]) is [code]2[/code].\n"
"\n"
"We typically use this operation to tell if a number is odd or even or to "
"produce a random number within a particular range (like a dice roll).\n"
"\n"
"Play around with the modulo widget on the right to see how modulo works "
"visually."
msgstr ""
"Die Modulo-Operation ([code]%[/code]) berechnet den Rest einer ganzzahligen "
"Division.\n"
"\n"
"Beispielsweise ist das Modulo von [code]5[/code] durch [code]3[/code] ([code]"
"5 % 3[/code]) [code]2[/code].\n"
"\n"
"Wir verwenden diese Operation normalerweise, um festzustellen, ob eine Zahl "
"ungerade oder gerade ist, oder um eine Zufallszahl innerhalb eines "
"bestimmten Bereichs (wie ein Würfelwurf) zu erzeugen.\n"
"\n"
"Spiele rechts mit verschiedenen Werten herum, um zu sehen, wie modulo "
"funktioniert."

#: course/lesson-15-modulo/lesson.tres:28
msgid "What's the result of this modulo operation?"
msgstr "Was ist das Ergebnis dieser Modulo-Operation?"

#: course/lesson-15-modulo/lesson.tres:29
msgid "[code]11 % 4[/code]"
msgstr "[code]11 % 4[/code]"

#: course/lesson-15-modulo/lesson.tres:31
msgid ""
"[code]11[/code] divided by [code]4[/code] is [code]2[/code], and the "
"[b]remainder[/b] of the division is [code]3[/code].\n"
"\n"
"So [code]11 % 4[/code] is [code]3[/code]."
msgstr ""
"[code]11[/code] geteilt durch [code]4[/code] ist [code]2[/code], und der "
"[b]Rest[/b] der Division ist [code]3[/code].\n"
"\n"
"[code]11 % 4[/code] ist also [code]3[/code]."

#: course/lesson-15-modulo/lesson.tres:34
#: course/lesson-15-modulo/lesson.tres:35
msgid "3"
msgstr "3"

#: course/lesson-15-modulo/lesson.tres:34
msgid "2"
msgstr "2"

#: course/lesson-15-modulo/lesson.tres:34
msgid "7"
msgstr "7"

#: course/lesson-15-modulo/lesson.tres:44
msgid ""
"The modulo operation only works on [b]whole numbers[/b]; Not decimal "
"numbers.\n"
"\n"
"Also, just like in regular divisions, the divisor can't be zero.\n"
"\n"
"All three examples below will cause an error in your code."
msgstr ""
"Die Modulo-Operation funktioniert nur bei [b]ganzen Zahlen[/b]; Keine "
"Dezimalzahlen.\n"
"\n"
"Genau wie in regulären Divisionen kann der Teiler auch nicht Null sein.\n"
"\n"
"Alle drei folgenden Beispiele verursachen einen Fehler in deinem Code."

#: course/lesson-15-modulo/lesson.tres:66
msgid "Three ways we use the modulo operation"
msgstr "Drei Möglichkeiten, wie wir die modulo-Operation verwenden"

#: course/lesson-15-modulo/lesson.tres:68
msgid ""
"The modulo operation has important uses in programming, like making a number "
"cycle.\n"
"\n"
"Take a traffic light, for example."
msgstr ""
"Die Modulo-Operation hat wichtige Anwendungen in der Programmierung, wie das "
"Erstellen eines Zahlenzyklus.\n"
"\n"
"Nehmen wir zum Beispiel eine Ampel."

#: course/lesson-15-modulo/lesson.tres:90
msgid ""
"We use the number [code]light_index[/code] to represent the traffic light's "
"current state.\n"
"\n"
"The lights always cycle in the same way: first, we have the red light, then "
"the yellow, then the green.\n"
"\n"
"To represent that cycle, you can periodically add one to the number and use "
"the modulo operator to wrap back to [code]0[/code].\n"
"\n"
"Instead, you could use a condition; In this case, we use the modulo as a "
"shortcut."
msgstr ""
"Wir verwenden die Variable [code]light_index[/code], um den aktuellen "
"Zustand der Ampel als Zahl darzustellen.\n"
"\n"
"Die Lichter durchlaufen immer die gleiche Reihenfolge: Zuerst haben wir das "
"rote Licht, dann das gelbe, dann das grüne.\n"
"\n"
"Um diesen Zyklus darzustellen, können Sie der Zahl regelmäßig um 1 erhöhen "
"und den Modulo-Operator verwenden, um wieder bei [code]0[/code] anzufangen.\n"
"\n"
"Du könntest stattdessen eine Bedingung verwenden. In diesem Fall verwenden "
"wir aber Modulo um den Code zu verkürzen."

#: course/lesson-15-modulo/lesson.tres:114
msgid "Why do we start from zero?"
msgstr "Warum fangen wir bei Null an?"

#: course/lesson-15-modulo/lesson.tres:116
msgid ""
"In computer code, we very often count from [code]0[/code].\n"
"\n"
"Every number translates to a precise combination of bits in the machine, "
"starting from [code]0[/code].\n"
"\n"
"We don't want to waste any number, and as the first number the computer "
"knows about is [code]0[/code], we start counting from [code]0[/code]."
msgstr ""
"Im Computercode starten wir mit dem Zählen sehr oft bei [code]0[/code].\n"
"\n"
"Jede Zahl wird in eine präzise Kombination von Bits in der Maschine "
"übersetzt, beginnend mit [code]0[/code].\n"
"\n"
"Wir wollen keine Zahl verschwenden, und da die erste Zahl, die der Computer "
"kennt, [code]0[/code] ist, beginnen wir mit dem Zählen von [code]0[/code]."

#: course/lesson-15-modulo/lesson.tres:128
msgid "Using modulo to find even and odd numbers"
msgstr "Verwenden von Modulo zum Finden gerader und ungerader Zahlen"

#: course/lesson-15-modulo/lesson.tres:130
msgid ""
"We can also use a modulo to check if a number is even or odd. If we divide a "
"number by [code]2[/code] and there's no remainder, then the number is "
"[b]even[/b]."
msgstr ""
"Wir können auch ein Modulo verwenden, um zu überprüfen, ob eine Zahl gerade "
"oder ungerade ist. Wenn wir eine Zahl durch [code]2[/code] teilen und es "
"keinen Rest gibt, dann ist die Zahl [b]gerade[/b]."

#: course/lesson-15-modulo/lesson.tres:150
msgid ""
"Notice how the modulo can be larger than the number it affects. For example, "
"[code]1 % 2[/code] gives you [code]1[/code]. That's because [code]1[/code] "
"divided by [code]2[/code] equals [code]0[/code], and the remainder is "
"[code]1[/code].\n"
"\n"
"Like with divisions, the only case you can't use modulo is with a divisor of "
"[code]0[/code]."
msgstr ""
"Beachte, dass das Modulo größer sein kann als die Zahl, die es beeinflusst. "
"Beispiel: [code]1 % 2[/code] ergibt [code]1[/code]. Das liegt daran, dass "
"[code]1[/code] geteilt durch [code]2[/code] gleich [code]0[/code] ist und "
"der Rest [code]1[/code] ist.\n"
"\n"
"Wie bei Divisionen ist der einzige Fall, in dem Du Modulo nicht verwenden "
"kannst, mit einem Teiler von [code]0[/code]."

#: course/lesson-15-modulo/lesson.tres:170
msgid "Calculating a random number within a range"
msgstr "Berechnen einer Zufallszahl innerhalb eines Zahlenbereichs"

#: course/lesson-15-modulo/lesson.tres:172
msgid ""
"We can use the modulo to simulate dice rolls. To do so, we generate a large "
"random number and use the modulo operator to limit the number's range.\n"
"\n"
"To generate a random whole number, you can call the [code]randi()[/code] "
"function. The name stands for random integer.\n"
"\n"
"The number the function generates can be huge: roughly up to 2 billion on an "
"Android device and around 10^18 on a 64-bit computer.\n"
"\n"
"You can use the modulo operation to limit the random number's range."
msgstr ""
"Wir können den Modulo verwenden, um Würfelwürfe zu simulieren. Dazu erzeugen "
"wir eine große Zufallszahl und verwenden den Modulo-Operator, um den Bereich "
"der Zahl zu begrenzen.\n"
"\n"
"Um eine zufällige ganze Zahl zu erzeugen, kannst du die Funktion "
"[code]randi()[/code] aufrufen. Der Name steht für Random Integer.\n"
"\n"
"Die von der Funktion erzeugte Zahl, kann riesig sein: etwa bis zu 2 "
"Milliarden auf einem Android-Gerät und etwa 10^18 auf einem 64-Bit-Computer."
"\n"
"\n"
"Du kannst die Modulo-Operation verwenden, um den Bereich der Zufallszahl zu "
"begrenzen."

#: course/lesson-15-modulo/lesson.tres:198
msgid ""
"The result is also random because we use the modulo operation on a random "
"number.\n"
"\n"
"In the following practices, you'll use a modulo to advance traffic lights, "
"add maximum health to the robot on every odd level, and learn how to code "
"dice rolls."
msgstr ""
"Das Ergebnis bleibt zufällig, auch wenn wir die Modulo-Operation auf eine "
"Zufallszahl anwenden.\n"
"\n"
"In den folgenden Übungen verwendest Du Modulo, um Ampeln umzuschalten und "
"dem Roboter, auf jeder ungeraden Stufe, maximales Leben zu verleihen. "
"Außerdem wirst du lernen, wie man zufällige Würfelergebnisse programmiert."

#: course/lesson-15-modulo/lesson.tres:208
msgid "Advancing Traffic Lights"
msgstr "Ampeln umschalten"

#: course/lesson-15-modulo/lesson.tres:209
msgid ""
"Add to the [code]advance_traffic_light()[/code] function so the "
"[code]light_index[/code] variable increments by one, then wraps back to "
"[code]0[/code] if it gets too high.\n"
"\n"
"Use the modulo operator [code]%[/code] to make sure the value of "
"[code]light_index[/code] wraps back to [code]0[/code].\n"
"\n"
"The value of [code]light_index[/code] should only ever be [code]0[/code], "
"[code]1[/code], or [code]2[/code]."
msgstr ""
"Ergänze die Funktion [code]advance_traffic_light()[/code], sodass die "
"Variable [code]light_index[/code] um 1 erhöht wird und wieder bei [code]0[/"
"code] anfängt, wenn sie zu hoch wird.\n"
"\n"
"Verwenden Sie den Modulo-Operator [code]%[/code], um sicherzustellen, dass "
"der Wert von [code]light_index[/code] wieder bei [code]0[/code] beginnt.\n"
"\n"
"Der Wert von [code]light_index[/code] sollte immer nur [code]0[/code], "
"[code]1[/code] oder [code]2[/code] sein."

#: course/lesson-15-modulo/lesson.tres:223
msgid ""
"Learn how to use modulo to wrap a number back to zero using traffic lights."
msgstr ""
"Lerne anhand einer Ampel wie du mit Hilfe von Modulo eine Zahl auf 0 "
"zurücksetzt."

#: course/lesson-15-modulo/lesson.tres:228
msgid "Rolling Dice"
msgstr "Würfeln"

#: course/lesson-15-modulo/lesson.tres:229
msgid ""
"Our dice rolling function doesn't work! Right now, it always gives the "
"result of how many sides the dice has: 20.\n"
"\n"
"Use [code]randi()[/code] to generate a random number and the modulo "
"operation [code]%[/code]. \n"
"\n"
"Using the [code]return[/code] keyword inside the function, return a random "
"number between [code]1[/code] and [code]sides[/code]."
msgstr ""
"Unsere Würfelfunktion funktioniert nicht! Im Moment liefert sie als Ergebnis "
"immer, wie viele Seiten der Würfel hat: 20.\n"
"\n"
"Verwende [code]randi()[/code] und die Modulo-Operation [code]%[/code], um "
"eine Zufallszahl zu generieren. \n"
"\n"
"Gebe mit dem Schlüsselwort [code]return[/code] innerhalb der Funktion eine "
"Zufallszahl zwischen [code]1[/code] und Anzahl der Würfelseiten([code]sides[/"
"code]) zurück."

#: course/lesson-15-modulo/lesson.tres:243
msgid ""
"Whether in a board game or video game, getting a random number is always "
"useful. Here, we create a function that simulates a dice roll."
msgstr ""
"Ob in einem Brettspiel oder einem Videospiel, eine Zufallszahl zu erhalten "
"ist immer nützlich. Hier erstellen wir eine Funktion, die einen Würfelwurf "
"simuliert."

#: course/lesson-15-modulo/lesson.tres:248
msgid "Bonus Health Every Other Level"
msgstr "Zusätzliches Leben beim Erreichen jeder zweiten Stufe"

#: course/lesson-15-modulo/lesson.tres:249
msgid ""
"Change the [code]level_up()[/code] function so it does the following:\n"
"\n"
"1) Increment [code]level[/code] by [code]1[/code]\n"
"2) Increase [code]max_health[/code] by [code]5[/code]\n"
"3) If [code]level[/code] is [b]even[/b], increase [code]max_health[/code] by "
"an additional [code]5[/code]\n"
"\n"
"The robot starts with [code]100[/code] maximum health. It will gain three "
"levels when you run the code. At level 4, the robot should have [code]125[/"
"code] maximum health."
msgstr ""
"Ändere die Funktion [code]level_up()[/code] wie folgt:\n"
"\n"
"1) Zähle die Variable [code]level[/code] um [code]1[/code] nach oben\n"
"2) Erhöhe [code]max_health[/code] um [code]5[/code]\n"
"3) Wenn [code]level[/code] [b]gerade[/b] ist, erhöhe [code]max_health[/code] "
"um zusätzliche [code]5[/code] Punkte\n"
"\n"
"Der Roboter beginnt mit [code]100[/code] maximaler Gesundheit. Er erhält "
"drei Stufen, wenn Du den Code ausführst. Auf Stufe 4 sollte der Roboter "
"maximal [code]125[/code] Leben haben."

#: course/lesson-15-modulo/lesson.tres:265
msgid ""
"There are other ways to increase maximum health. You could use a modulo to "
"give a bonus every even level. Learn how here!"
msgstr ""
"Es gibt andere Möglichkeiten, das maximale Leben zu erhöhen. Sie könnten ein "
"Modulo verwenden, um bei jeder geraden Stufe einen Bonus zu geben. Erfahren "
"Sie hier, wie das geht!"

#: course/lesson-15-modulo/lesson.tres:269
msgid "Modulo"
msgstr "Modulo"
