# Translations template for Learn GDScript From Zero.
# Copyright (C) 2022 GDQuest
# This file is distributed under the same license as the Learn GDScript From
# Zero project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Learn GDScript From Zero\n"
"Report-Msgid-Bugs-To: https://github.com/GDQuest/learn-gdscript\n"
"POT-Creation-Date: 2023-05-16 09:25+0200\n"
"PO-Revision-Date: 2024-02-29 13:51+0000\n"
"Last-Translator: 二中 <worigoule@gmail.com>\n"
"Language-Team: Chinese (Simplified) <https://hosted.weblate.org/projects/"
"learn-gdscript-from-zero/lesson-28-specifying-types/zh_Hans/>\n"
"Language: zh_Hans\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 5.5-dev\n"
"Generated-By: Babel 2.9.1\n"

#: course/lesson-28-specifying-types/lesson.tres:13
msgid ""
"By default, GDScript is what we call a dynamically-typed language. That "
"means that you can just write variables, assign them a value with a number, "
"and assign them another value with a different type.\n"
"\n"
"Unlike in some other languages, in GDScript, the following code is valid."
msgstr ""
"默认情况下，GDScript 是我们常说的动态类型（dynamically-typed）语言。 这意味着"
"你写变量的时候，给它分配一个数字类型的值也可以，然后重新分配一个不同类型的值"
"也可以。\n"
"\n"
"与其他一些语言不同，在GDScript中，以下代码是有效的。"

#: course/lesson-28-specifying-types/lesson.tres:35
msgid ""
"But this feature often causes problems down the line. Let's take one example."
msgstr "但是这个特性通常会导致问题。举个例子。"

#: course/lesson-28-specifying-types/lesson.tres:43
msgid "Cell size: decimal number, or 2D vector?"
msgstr "格子的大小：是小数还是二维向量？"

#: course/lesson-28-specifying-types/lesson.tres:45
msgid ""
"Games use grids all the time, be it for grid-based gameplay or to make "
"algorithms faster.\n"
"\n"
"When working with grids, you need to convert grid coordinates into positions "
"in the game world all the time. To do so, you give each cell a size in "
"pixels.\n"
"\n"
"You'll likely pick one of two types for that: [code]float[/code] or "
"[code]Vector2[/code], because pixel positions on the screen use "
"[code]Vector2[/code] coordinates.\n"
"\n"
"Either of those two values would be fine:"
msgstr ""
"游戏总会用到各种网格，无论是基于网格实现各种玩法，还是用网格让算法更快速。\n"
"\n"
"使用网格时，始终得将网格坐标转换为游戏世界的坐标。 "
"为此，需要为单元格设定好它的像素大小。\n"
"\n"
"为此你可能会用到以下两种类型的一种：[code]float[/code] 或 "
"[code]Vector2[/code]，因为屏幕上的像素位置用的也是[code]Vector2[/code]坐标。"
"\n"
"\n"
"这两种类型的值都可以："

#: course/lesson-28-specifying-types/lesson.tres:71
msgid ""
"Using a [code]Vector2[/code] could simplify some calculations. For example, "
"when converting grid coordinates to game world coordinates."
msgstr "使用 [code]Vector2[/code] 能简化一些计算。 "
"例如，将网格坐标转换为游戏世界坐标时。"

#: course/lesson-28-specifying-types/lesson.tres:91
msgid ""
"In this example, because both [code]cell[/code] and [code]cell_size[/code] "
"are [code]Vector2[/code] values, we can add them.\n"
"\n"
"However, if [code]cell_size[/code] is a [code]float[/code], we will get a "
"type error."
msgstr ""
"在这个例子中，因为 [code]cell[/code] 和 [code]cell_size[/code] 都是 "
"[code]Vector2[/code] 值，可以直接相加。\n"
"\n"
"但是，如果 [code]cell_size[/code] 是 [code]float[/code]型，就会得到类型错误。"

#: course/lesson-28-specifying-types/lesson.tres:123
msgid ""
"Worse: due to dynamic typing, we won't get an error [i]right away[/i]. We "
"will only get the error when calling [code]grid_to_world(Vector2(1, 1))[/"
"code].\n"
"\n"
"And that's a big problem."
msgstr ""
"更糟糕的是：由于类型可以动态变化，不会[i]写完就提示错误[/i]。在你调用 "
"[code]grid_to_world(Vector2(1, 1))[/code]时才会得到错误。\n"
"\n"
"这是一个大问题。"

#: course/lesson-28-specifying-types/lesson.tres:135
msgid ""
"Because we're learning, we only have small code examples in this course. But "
"your games' code will get long and split into many files. When coding, you "
"often forget about the code you wrote several weeks ago.\n"
"\n"
"And with a lot of code, it could take [i]hours[/i] of play before players "
"trigger a type error in your code."
msgstr ""
"因为我们正在学习，在本课程中的代码示例都是小体量的。但你的游戏代码会变得很长"
"，并且拆分成许多个文件。敲代码时，忘记几周前写了啥代码是很寻常的。\n"
"\n"
"也就是说在成吨代码里，尽管错误已经发生了，玩家可能还要玩[i]好几个小时[/i]，类"
"型错误才会被触发。"

#: course/lesson-28-specifying-types/lesson.tres:145
msgid "Using type hints"
msgstr "使用类型提示功能"

#: course/lesson-28-specifying-types/lesson.tres:147
msgid ""
"Fortunately, GDScript has optional [i]type hints[/i].\n"
"\n"
"Type hints let the computer know the value type you want for variables and "
"report errors before running the code.\n"
"\n"
"To specify the type a variable can accept, you can write a colon and a type "
"after the name when defining a new variable."
msgstr ""
"幸运的是，GDScript有可选的[i] 类型提示 [/i]功能。\n"
"\n"
"使用类型提示功能，计算机就能知道你想要的值类型，并在运行代码之前就报告错误。"
"\n"
"\n"
"要指定某个变量可以接受的类型，在定义新变量时要在变量名称后写一个冒号和一个类"
"型名。"

#: course/lesson-28-specifying-types/lesson.tres:171
msgid ""
"You could tell the computer you want [code]cell_size[/code] only to accept "
"[code]Vector2[/code] values like so."
msgstr "你可以告诉计算机，你想让 [code]cell_size[/code] 只接受 "
"[code]Vector2[/code]类型的值，像下面这样。"

#: course/lesson-28-specifying-types/lesson.tres:191
msgid ""
"If you try to replace the [code]cell_size[/code] with a value of another "
"type later, the computer will not let you."
msgstr "如果你写着写着将 [code]cell_size[/code] "
"替换为了其他类型的值，计算机不会允许你这么做。"

#: course/lesson-28-specifying-types/lesson.tres:219
msgid "Letting the computer figure it out"
msgstr "让电脑自己搞清楚"

#: course/lesson-28-specifying-types/lesson.tres:221
msgid ""
"GDScript comes with a feature called [i]type inference[/i]. In many cases, "
"but not all, the computer can figure out the type of a variable for you.\n"
"\n"
"To do so, you write [code]:=[/code], without the type. The computer will set "
"the type using the value after the equal sign. We could make "
"[code]cell_size[/code] a variable of type [code]Vector2[/code] like so:"
msgstr ""
"GDScript 带有一个称为[i]类型推测[/i]（type inference）的功能。在多数情况，但"
"不是全部的情况下，计算机可以替你确定变量的类型。\n"
"\n"
"为此，你只用写[code]:=[/code]，不用写类型。计算机将使用等号后面的值为依据来设"
"置类型。这样也可以将[code]cell_size[/code]设为[code]Vector2[/code]类型的变量"
"，如下所示："

#: course/lesson-28-specifying-types/lesson.tres:243
msgid ""
"This takes little typing, yet you get the benefits of using type hints, like "
"the computer reporting errors better and faster."
msgstr "这样你写的也少，也能得到变量类型提示功能的好处，比如能更好更快地报告类型错误"
"。"

#: course/lesson-28-specifying-types/lesson.tres:251
msgid "Why bother to add hints?"
msgstr "何必多写一个类型提示呢？"

#: course/lesson-28-specifying-types/lesson.tres:253
msgid ""
"When you give the language hints like that, it will [i]prevent[/i] major "
"type errors. When you work in Godot, you will see that the computer can "
"report issues as you write the code. It makes the benefit even greater.\n"
"\n"
"Type hints can also help improve the readability of your code. It can help "
"to put more information directly in the code. As we saw, types are essential "
"when coding, and when using type hints, the computer will add them to the "
"engine's built-in code documentation system.\n"
"\n"
"There's an incredible third benefit for you: by using type hints, you will "
"learn types much faster. It's excellent for learning.\n"
"\n"
"In the following practices, you will write the correct type hints to make "
"the code error-free."
msgstr ""
"当你给编程语言这些类型提示时，它能[i]防止[/i]大多数的类型错误。当你在用Godot"
"时，计算机可以在写代码的时候实时反馈各种问题。使用类型提示就更有帮助了。\n"
"\n"
"类型提示还可以帮助提高代码的可读性。能让很多信息以直观的形式放在代码里。正如"
"我们所看到的，活用类型在写代码时是必不可少的，当使用类型提示时，计算机就能对"
"他们用上引擎内置的实时编程文档系统。\n"
"\n"
"第三个好处，对你来说是好极了的：通过使用类型提示，你能更快地学习掌握不同的类"
"型。对学习非常有益。\n"
"\n"
"在以下练习中，你需要编写正确的类型提示，让代码远离类型错误。"

#: course/lesson-28-specifying-types/lesson.tres:267
msgid "Add the correct type hints to variables"
msgstr "向变量添加正确的类型提示"

#: course/lesson-28-specifying-types/lesson.tres:268
msgid ""
"Our variables get the correct values but not the right hints. Using your "
"type-fu, add the correct type names in the variable definitions.\n"
"\n"
"You need to write the type name between the colon and the equal sign.\n"
"\n"
"Note: You cannot use type inference in this practice. You need to write the "
"type name in full."
msgstr ""
"我们的变量得到了正确的值，但是类型提示是错误的。用你刚学到的类型招式大展拳脚"
"，为变量定义添加正确的类型名。\n"
"\n"
"要在冒号和等号之间写入类型名称。\n"
"\n"
"注意：这个练习中使用类型推断功能被禁用了。需要你写出完整的类型名称。"

#: course/lesson-28-specifying-types/lesson.tres:284
msgid ""
"Our variables have the wrong type hints, causing errors. Correct them to "
"make the code run."
msgstr "变量的类型提示搞错了，就会导致错误。更正它们以使代码运行。"

#: course/lesson-28-specifying-types/lesson.tres:289
msgid "Fix the values to match the type hints"
msgstr "修改变量的值以匹配类型提示"

#: course/lesson-28-specifying-types/lesson.tres:290
msgid ""
"It is the other way around in this practice: the type hints are fine, but "
"the values are not.\n"
"\n"
"Your task is to fix the values after the equal sign, so they match the type "
"hint of each variable."
msgstr ""
"这个练习又和上次恰恰相反：类型提示好得很，但是变量的值有问题。\n"
"\n"
"你的任务是修改等号后的值，使它们与每个变量的类型提示相匹配。"

#: course/lesson-28-specifying-types/lesson.tres:304
msgid ""
"This time, it's the other way around: variables have the correct type hints "
"but the wrong values. Change the values to make the code run."
msgstr "这次的情况正好相反：变量有正确的类型提示，但错误的值。 修改值以使代码运行。"

#: course/lesson-28-specifying-types/lesson.tres:308
msgid "Specifying types with type hints"
msgstr "用类型提示功能指定变量类型"
