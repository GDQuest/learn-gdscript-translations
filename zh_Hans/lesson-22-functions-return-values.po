# Translations template for Learn GDScript From Zero.
# Copyright (C) 2022 GDQuest
# This file is distributed under the same license as the Learn GDScript From
# Zero project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Learn GDScript From Zero\n"
"Report-Msgid-Bugs-To: https://github.com/GDQuest/learn-gdscript\n"
"POT-Creation-Date: 2023-05-16 09:25+0200\n"
"PO-Revision-Date: 2024-02-29 06:02+0000\n"
"Last-Translator: 二中 <worigoule@gmail.com>\n"
"Language-Team: Chinese (Simplified) <https://hosted.weblate.org/projects/"
"learn-gdscript-from-zero/lesson-22-functions-return-values/zh_Hans/>\n"
"Language: zh_Hans\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 5.5-dev\n"
"Generated-By: Babel 2.9.1\n"

#: course/lesson-22-functions-return-values/lesson.tres:13
msgid ""
"Until now, you learned that functions are sequences of instructions you give "
"a name and you can call any time.\n"
"\n"
"On top of that, functions can make calculations and [i]return[/i] new "
"values.\n"
"\n"
"Let's look at some examples to see why it's useful."
msgstr ""
"·学到现在，你已经知道了到函数是一个由你命名的指令序列，可以被随时调用。\n"
"\n"
"在此基础上，函数还可以进行计算并[i]返回[/i]（return）新的值。\n"
"\n"
"让我们来看些例子，看看它为什么很有用。"

#: course/lesson-22-functions-return-values/lesson.tres:25
msgid "Built-in functions that return a value"
msgstr "返回一个值的内置函数"

#: course/lesson-22-functions-return-values/lesson.tres:27
msgid ""
"Many functions built into GDScript make calculations and return a new "
"value.\n"
"\n"
"For example, the [code]round()[/code] function takes a decimal number as an "
"argument and gives you back a new number rounded to the nearest digit."
msgstr ""
"GDScript 会自带内置的函数，有些能进行计算并返回一个新值。\n"
"\n"
"例如，[code]round()[/code] 函数以一个小数为参数，返回一个四舍五入的整数。"

#: course/lesson-22-functions-return-values/lesson.tres:49
msgid ""
"Imagine you have a game where you track the player's health as a percentage, "
"a decimal number going from [code]0.0[/code] to [code]100.0[/code].\n"
"\n"
"When displaying the health on the interface, you don't want to show the "
"decimal part. In that case, you may use the [code]round()[/code] function, "
"like so."
msgstr ""
"想象一下，你在做一个游戏，要用百分比的形式跟踪玩家的血量，这是一个从 [code]0."
"0[/code] 到 [code]100.0[/code] 的小数字。\n"
"\n"
"在游戏界面上显示血量时，你不想显示出小数部分。在这种情况下，可以像这样使用 "
"[code]round()[/code] 函数。"

#: course/lesson-22-functions-return-values/lesson.tres:71
msgid ""
"Notice how we assign the result of the function call to a variable. Because "
"the [code]round()[/code] function returns a [i]new[/i] value, we need to "
"either store the result or use the value immediately.\n"
"\n"
"Above, we assigned it to a variable, but you could also do the following."
msgstr ""
"请注意是如何将函数调用的结果赋值给变量的。因为 [code]round()[/code] "
"函数返回了一个 [i]新[/i] 的值，我们要么得存储它，或者立即使用这个值。\n"
"\n"
"在上面的例子里，我们将结果赋值给了一个变量，但你也可以像下面这样做。"

#: course/lesson-22-functions-return-values/lesson.tres:93
msgid ""
"You can assign the return value of a function call if you plan on using it "
"more than once."
msgstr "如果你计划多次使用一个函数的返回值的话，你可以将它赋值给一个变量。"

#: course/lesson-22-functions-return-values/lesson.tres:101
msgid "A cooler example: lerp()"
msgstr "更酷的例子：lerp()函数"

#: course/lesson-22-functions-return-values/lesson.tres:103
msgid ""
"The [code]lerp()[/code] function, short for [i]linear interpolate[/i], "
"calculates and returns a weighted average between two values.\n"
"\n"
"It takes three arguments: the two values to average and a value between "
"[code]0.0[/code] and [code]1.0[/code] to skew the result.\n"
"\n"
"In game programming, it's used to animate things moving towards a target "
"with a single line of code."
msgstr ""
"[code]lerp()[/code] 函数是 [i]linear interpolate[/i] "
"（线性插值）的缩写，计算并返回两个值之间的加权平均值。\n"
"\n"
"它需要三个参数：要平均的两个值，和一个 [code]0.0[/code] 和 [code]1.0[/code] "
"之间的值来偏移结果（和小的值更近还是和大的更近）。\n"
"\n"
"在游戏编程中，用它只需一行代码，就能使物体向一个目标运动起来。"

#: course/lesson-22-functions-return-values/lesson.tres:137
msgid ""
"Every frame, the code calculates a position somewhere between the turtle and "
"the mouse cursor. The [code]lerp()[/code] function takes care of "
"everything.\n"
"\n"
"It's not the most robust approach for smooth movement, as you'll learn in "
"the future, but it's a helpful function nonetheless."
msgstr ""
"每一帧，代码都会计算出某个小海龟和鼠标光标之间的位置。 [code]lerp()[/code] "
"函数负责处理所有的过程。\n"
"\n"
"如果你继续深入学习下去，会发现这并不是实现平滑运动的最强大的方法，但它仍然是"
"一个很有用的函数。"

#: course/lesson-22-functions-return-values/lesson.tres:147
msgid "Writing a function that returns a value"
msgstr "编写一个有返回值的函数"

#: course/lesson-22-functions-return-values/lesson.tres:149
msgid ""
"You can make [i]your[/i] functions return values.\n"
"\n"
"To make a function return a value, you use the [code]return[/code] keyword "
"followed by the value in question.\n"
"\n"
"In previous lessons, we had characters walking on grids.\n"
"\n"
"And for those practices, you were working directly with cell coordinates.\n"
"\n"
"Well, cell coordinates don't correspond to positions on the screen. To find "
"the center of any cell on the screen, we need to convert the cell's "
"coordinates to a position on the screen, in pixels."
msgstr ""
"你可以让 [i]你的[/i] 函数也能返回值。\n"
"\n"
"要让函数返回值，请使用 [code]return[/code]（返回） 关键字，后跟要返回的值。\n"
"\n"
"在之前的课程中，我们成功让角色能在棋盘网格上行走。\n"
"\n"
"在那些练习中，你直接使用的是网格本身的单元坐标。\n"
"\n"
"但是呢，单元格坐标和屏幕上的位置并不是对应的，所以我们需要将单元格位置转换为"
"屏幕上的像素位置。"

#: course/lesson-22-functions-return-values/lesson.tres:177
msgid ""
"To do so, we use a function. The function does two things:\n"
"\n"
"1. First, it multiplies the cell coordinates by the cell size, which gives "
"us the position of the cell's top-left corner on the screen, in pixels.\n"
"2. Then, we add half of the cell size to get the center of the cell.\n"
"\n"
"The function returns the result, allowing us to store it in a variable."
msgstr ""
"为此，我们要用到一个函数。该函数应有两个功能：\n"
"\n"
"第一步，它将单元格坐标乘以单元格大小，得出单元格的左上角在屏幕上的位置（以像"
"素为单位）。\n"
"第二步，加上一个单元格的大小的二分之一，得到单元格的中心点的位置。\n"
"\n"
"函数会返回这个结果，然后我们就可以将其存储在变量中。"

#: course/lesson-22-functions-return-values/lesson.tres:202
msgid ""
"The [code]return[/code] keyword returns the value to the code calling the "
"function. You'll receive the result where you call the function."
msgstr "[code]return[/code] "
"关键字将值返回给调用函数的代码。你会在调用该函数的位置收到结果。"

#: course/lesson-22-functions-return-values/lesson.tres:222
msgid ""
"Some functions return values, and some do not. During practices, you can "
"learn which functions return a value using the documentation panel. It will "
"display if the practice requires using specific functions or variables.\n"
"\n"
"There, functions that start with the term [code]void[/code] do not return a "
"value. Any other term means the function does return a value. You'll learn "
"more about what other terms mean in a couple of lessons when we explore "
"value [i]types[/i].\n"
"\n"
"For now, let's practice returning values from functions!"
msgstr ""
"有些函数会返回值，有些不会。你可以使用练习界面中的文档面板了解哪些函数会返回"
"结果。\n"
"\n"
"在那里，以关键字 [code]void[/code] "
"（空）开头的函数不返回值。任何其他关键字都意味着该函数确实返回一个值。"
"当我们探索值 [i]各种类型[/i] "
"时，你会在几节课的时间中了解更多其他关键字的含义。\n"
"\n"
"现在，让我们练习从函数返回值！"

#: course/lesson-22-functions-return-values/lesson.tres:234
msgid "Converting coordinates from the grid to the screen"
msgstr "将坐标从网格转换到屏幕"

#: course/lesson-22-functions-return-values/lesson.tres:235
msgid ""
"Define a function that converts a position on a grid to the screen.\n"
"\n"
"The function takes a [code]Vector2[/code] cell coordinate as an argument. It "
"should return the corresponding [code]Vector2[/code] screen coordinates at "
"the center of the cell."
msgstr ""
"定义一个将网格上的位置转换为屏幕位置的函数。\n"
"\n"
"该函数将 [code]Vector2[/code] 单元格坐标作为参数。它应该返回单元格中心对应的 "
"[code]Vector2[/code] 屏幕坐标。"

#: course/lesson-22-functions-return-values/lesson.tres:249
msgid ""
"We lost the function to convert grid coordinates, but we desperately need it "
"for our game! Make the turtle move again by coding it."
msgstr "我们弄丢了转换网格坐标的函数，但我们的游戏没了它不行！写好它，使小海龟能再次"
"移动。"

#: course/lesson-22-functions-return-values/lesson.tres:253
msgid "Functions that return a value"
msgstr "返回值的函数"

#~ msgid ""
#~ "To do so, we use a function. It multiplies the cell coordinate by the "
#~ "cell size, adds half the cell size to the product, and returns the result."
#~ msgstr ""
#~ "为此，我们使用一个函数。它将单元格坐标乘以单元格大小，将单元格大小的一半加"
#~ "到乘积中，然后返回结果。"
