# Translations template for Learn GDScript From Zero.
# Copyright (C) 2022 GDQuest
# This file is distributed under the same license as the Learn GDScript From
# Zero project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Learn GDScript From Zero\n"
"Report-Msgid-Bugs-To: https://github.com/GDQuest/learn-gdscript\n"
"POT-Creation-Date: 2023-05-16 09:25+0200\n"
"PO-Revision-Date: 2023-09-14 03:34+0000\n"
"Last-Translator: KeJun <kejun1997@gmail.com>\n"
"Language-Team: Chinese (Simplified) <https://hosted.weblate.org/projects/"
"learn-gdscript-from-zero/lesson-15-modulo/zh_Hans/>\n"
"Language: zh_Hans\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 5.0.1-dev\n"
"Generated-By: Babel 2.9.1\n"

#: course/lesson-15-modulo/lesson.tres:14
msgid ""
"The modulo operation ([code]%[/code]) calculates the remainder of a whole "
"number division.\n"
"\n"
"For example, the modulo of [code]5[/code] by [code]3[/code] ([code]5 % 3[/"
"code]) is [code]2[/code].\n"
"\n"
"We typically use this operation to tell if a number is odd or even or to "
"produce a random number within a particular range (like a dice roll).\n"
"\n"
"Play around with the modulo widget on the right to see how modulo works "
"visually."
msgstr ""
"模运算 ([code]%[/code]) 计算整数除法的余数。\n"
"\n"
"例如，[code]5[/code] 与 [code]3[/code] ([code]5 % 3[/code]) 的模是 [code]2[/"
"code]。\n"
"\n"
"我们通常使用这个操作来判断一个数字是奇数还是偶数，或者产生一个特定范围内的随"
"机数（如掷骰子）。\n"
"\n"
"玩弄右边的模小部件，看看模是如何在视觉上工作的。"

#: course/lesson-15-modulo/lesson.tres:28
msgid "What's the result of this modulo operation?"
msgstr "这个模运算的结果是什么？"

#: course/lesson-15-modulo/lesson.tres:29
msgid "[code]11 % 4[/code]"
msgstr "[code]11 % 4[/code]"

#: course/lesson-15-modulo/lesson.tres:31
msgid ""
"[code]11[/code] divided by [code]4[/code] is [code]2[/code], and the "
"[b]remainder[/b] of the division is [code]3[/code].\n"
"\n"
"So [code]11 % 4[/code] is [code]3[/code]."
msgstr ""
"[code]11[/code]除以[code]4[/code]为[code]2[/code]，除法的[b]余数[/b]为"
"[code]3[/code] .\n"
"\n"
"所以 [code]11 % 4[/code] 是 [code]3[/code]。"

#: course/lesson-15-modulo/lesson.tres:34
#: course/lesson-15-modulo/lesson.tres:35
msgid "3"
msgstr "3"

#: course/lesson-15-modulo/lesson.tres:34
msgid "2"
msgstr "2"

#: course/lesson-15-modulo/lesson.tres:34
msgid "7"
msgstr "7"

#: course/lesson-15-modulo/lesson.tres:44
msgid ""
"The modulo operation only works on [b]whole numbers[/b]; Not decimal "
"numbers.\n"
"\n"
"Also, just like in regular divisions, the divisor can't be zero.\n"
"\n"
"All three examples below will cause an error in your code."
msgstr ""
"模运算仅适用于[b]整数[/b]；不是十进制数。\n"
"\n"
"此外，就像在常规除法中一样，除数不能为零。\n"
"\n"
"以下所有三个示例都将导致您的代码出错。"

#: course/lesson-15-modulo/lesson.tres:66
msgid "Three ways we use the modulo operation"
msgstr "我们使用模运算的三种方式"

#: course/lesson-15-modulo/lesson.tres:68
msgid ""
"The modulo operation has important uses in programming, like making a number "
"cycle.\n"
"\n"
"Take a traffic light, for example."
msgstr ""
"模运算在编程中具有重要用途，例如制作数字循环。\n"
"\n"
"以交通灯为例。"

#: course/lesson-15-modulo/lesson.tres:90
msgid ""
"We use the number [code]light_index[/code] to represent the traffic light's "
"current state.\n"
"\n"
"The lights always cycle in the same way: first, we have the red light, then "
"the yellow, then the green.\n"
"\n"
"To represent that cycle, you can periodically add one to the number and use "
"the modulo operator to wrap back to [code]0[/code].\n"
"\n"
"Instead, you could use a condition; In this case, we use the modulo as a "
"shortcut."
msgstr ""
"我们使用数字 [code]light_index[/code] 来表示红绿灯的当前状态。\n"
"\n"
"灯总是以相同的方式循环：首先，我们有红灯，然后是黄色，然后是绿色。\n"
"\n"
"为了表示该循环，您可以定期将数字加一并使用模运算符返回到 [code]0[/code]。\n"
"\n"
"相反，您可以使用条件；在这种情况下，我们使用模数作为捷径。"

#: course/lesson-15-modulo/lesson.tres:114
msgid "Why do we start from zero?"
msgstr "为什么要从零开始？"

#: course/lesson-15-modulo/lesson.tres:116
msgid ""
"In computer code, we very often count from [code]0[/code].\n"
"\n"
"Every number translates to a precise combination of bits in the machine, "
"starting from [code]0[/code].\n"
"\n"
"We don't want to waste any number, and as the first number the computer "
"knows about is [code]0[/code], we start counting from [code]0[/code]."
msgstr ""
"在计算机代码中，我们经常从 [code]0[/code] 开始计数。\n"
"\n"
"每个数字都转换为机器中位的精确组合，从 [code]0[/code] 开始。\n"
"\n"
"我们不想浪费任何数字，因为计算机知道的第一个数字是 [code]0[/code]，我们从 "
"[code]0[/code] 开始计数。"

#: course/lesson-15-modulo/lesson.tres:128
msgid "Using modulo to find even and odd numbers"
msgstr "使用模查找偶数和奇数"

#: course/lesson-15-modulo/lesson.tres:130
msgid ""
"We can also use a modulo to check if a number is even or odd. If we divide a "
"number by [code]2[/code] and there's no remainder, then the number is "
"[b]even[/b]."
msgstr ""
"我们还可以使用模来检查数字是偶数还是奇数。如果我们将一个数除以 [code]2[/"
"code] 并且没有余数，则该数是 [b]偶数[/b]。"

#: course/lesson-15-modulo/lesson.tres:150
msgid ""
"Notice how the modulo can be larger than the number it affects. For example, "
"[code]1 % 2[/code] gives you [code]1[/code]. That's because [code]1[/code] "
"divided by [code]2[/code] equals [code]0[/code], and the remainder is "
"[code]1[/code].\n"
"\n"
"Like with divisions, the only case you can't use modulo is with a divisor of "
"[code]0[/code]."
msgstr ""
"注意模数如何大于它影响的数字。例如，[code]1 % 2[/code] 为您提供 [code]1[/"
"code]。这是因为 [code]1[/code] 除以 [code]2[/code] 等于 [code]0[/code]，余数"
"为 [code]1[/code]。\n"
"\n"
"与除法一样，唯一不能使用模数的情况是除数为 [code]0[/code]。"

#: course/lesson-15-modulo/lesson.tres:170
msgid "Calculating a random number within a range"
msgstr "计算范围内的随机数"

#: course/lesson-15-modulo/lesson.tres:172
msgid ""
"We can use the modulo to simulate dice rolls. To do so, we generate a large "
"random number and use the modulo operator to limit the number's range.\n"
"\n"
"To generate a random whole number, you can call the [code]randi()[/code] "
"function. The name stands for random integer.\n"
"\n"
"The number the function generates can be huge: roughly up to 2 billion on an "
"Android device and around 10^18 on a 64-bit computer.\n"
"\n"
"You can use the modulo operation to limit the random number's range."
msgstr ""
"我们可以使用模来模拟掷骰子。为此，我们生成一个大随机数并使用模运算符来限制数"
"字的范围。\n"
"\n"
"要生成随机整数，可以调用 [code]randi()[/code] 函数。该名称代表随机整数。\n"
"\n"
"该函数生成的数字可能很大：在 Android 设备上大约高达 20 亿，在 64 位计算机上大"
"约为 10^18。\n"
"\n"
"您可以使用模运算来限制随机数的范围。"

#: course/lesson-15-modulo/lesson.tres:198
msgid ""
"The result is also random because we use the modulo operation on a random "
"number.\n"
"\n"
"In the following practices, you'll use a modulo to advance traffic lights, "
"add maximum health to the robot on every odd level, and learn how to code "
"dice rolls."
msgstr ""
"结果也是随机的，因为我们对随机数使用模运算。\n"
"\n"
"在以下练习中，您将使用模数来推进红绿灯，在每个奇数级别为机器人添加最大生命"
"值，并学习如何编写掷骰子代码。"

#: course/lesson-15-modulo/lesson.tres:208
msgid "Advancing Traffic Lights"
msgstr "推进交通灯"

#: course/lesson-15-modulo/lesson.tres:209
msgid ""
"Add to the [code]advance_traffic_light()[/code] function so the "
"[code]light_index[/code] variable increments by one, then wraps back to "
"[code]0[/code] if it gets too high.\n"
"\n"
"Use the modulo operator [code]%[/code] to make sure the value of "
"[code]light_index[/code] wraps back to [code]0[/code].\n"
"\n"
"The value of [code]light_index[/code] should only ever be [code]0[/code], "
"[code]1[/code], or [code]2[/code]."
msgstr ""
"添加到 [code]advance_traffic_light()[/code] 函数，使 [code]light_index[/"
"code] 变量递增 1，如果它变得太高，则返回到 [code]0[/code]。\n"
"\n"
"使用模运算符 [code]%[/code] 确保 [code]light_index[/code] 的值回绕到 "
"[code]0[/code]。\n"
"\n"
"[code]light_index[/code] 的值只能是 [code]0[/code]、[code]1[/code] 或 "
"[code]2[/code]。"

#: course/lesson-15-modulo/lesson.tres:223
msgid ""
"Learn how to use modulo to wrap a number back to zero using traffic lights."
msgstr "了解如何使用红绿灯使用模数将数字回零。"

#: course/lesson-15-modulo/lesson.tres:228
msgid "Rolling Dice"
msgstr "掷骰子"

#: course/lesson-15-modulo/lesson.tres:229
msgid ""
"Our dice rolling function doesn't work! Right now, it always gives the "
"result of how many sides the dice has: 20.\n"
"\n"
"Use [code]randi()[/code] to generate a random number and the modulo "
"operation [code]%[/code]. \n"
"\n"
"Using the [code]return[/code] keyword inside the function, return a random "
"number between [code]1[/code] and [code]sides[/code]."
msgstr ""
"我们的掷骰子功能不起作用！现在，它总是给出骰子有多少面的结果：20。\n"
"\n"
"使用 [code]randi()[/code] 生成随机数和模运算 [code]%[/code]。\n"
"\n"
"使用函数内部的 [code]return[/code] 关键字，返回 [code]1[/code] 和 "
"[code]sides[/code] 之间的随机数。"

#: course/lesson-15-modulo/lesson.tres:243
msgid ""
"Whether in a board game or video game, getting a random number is always "
"useful. Here, we create a function that simulates a dice roll."
msgstr ""
"无论是在棋盘游戏还是视频游戏中，获取随机数总是有用的。在这里，我们创建了一个"
"模拟掷骰子的函数。"

#: course/lesson-15-modulo/lesson.tres:248
msgid "Bonus Health Every Other Level"
msgstr "其他级别的额外生命值"

#: course/lesson-15-modulo/lesson.tres:249
msgid ""
"Change the [code]level_up()[/code] function so it does the following:\n"
"\n"
"1) Increment [code]level[/code] by [code]1[/code]\n"
"2) Increase [code]max_health[/code] by [code]5[/code]\n"
"3) If [code]level[/code] is [b]even[/b], increase [code]max_health[/code] by "
"an additional [code]5[/code]\n"
"\n"
"The robot starts with [code]100[/code] maximum health. It will gain three "
"levels when you run the code. At level 4, the robot should have [code]125[/"
"code] maximum health."
msgstr ""
"更改 [code]level_up()[/code] 函数，使其执行以下操作：\n"
"\n"
"1) 将 [code]level[/code] 增加 [code]1[/code]\n"
"2) 将 [code]max_health[/code] 增加 [code]5[/code]\n"
"3) 如果 [code]level[/code] 为 [b]偶数[/b]，则将 [code]max_health[/code] 增加"
"一个 [code]5[/code]\n"
"\n"
"机器人以 [code]100[/code] 最大生命值开始。运行代码时，它将获得三个级别。在第 "
"4 级，机器人应该有 [code]125[/code] 的最大生命值。"

#: course/lesson-15-modulo/lesson.tres:265
msgid ""
"There are other ways to increase maximum health. You could use a modulo to "
"give a bonus every even level. Learn how here!"
msgstr ""
"还有其他方法可以增加最大血量。您可以使用模数为每个偶数等级提供奖金。在这里学"
"习如何！"

#: course/lesson-15-modulo/lesson.tres:269
msgid "Modulo"
msgstr "模数"
