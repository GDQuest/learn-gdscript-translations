# Translations template for Learn GDScript From Zero.
# Copyright (C) 2022 GDQuest
# This file is distributed under the same license as the Learn GDScript From
# Zero project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Learn GDScript From Zero\n"
"Report-Msgid-Bugs-To: https://github.com/GDQuest/learn-gdscript\n"
"POT-Creation-Date: 2023-05-16 09:25+0200\n"
"PO-Revision-Date: 2023-09-14 03:34+0000\n"
"Last-Translator: KeJun <kejun1997@gmail.com>\n"
"Language-Team: Chinese (Simplified) <https://hosted.weblate.org/projects/"
"learn-gdscript-from-zero/lesson-17-while-loops/zh_Hans/>\n"
"Language: zh_Hans\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 5.0.1-dev\n"
"Generated-By: Babel 2.9.1\n"

#: course/lesson-17-while-loops/lesson.tres:14
msgid ""
"You've seen that you can use functions to [i]reuse[/i] code. In this lesson, "
"you'll learn about [b]loops[/b]. Loops help you [i]repeat[/i] code.\n"
"\n"
"To illustrate how loops work, let's take a game board split into a grid.\n"
"\n"
"Our robot can move to neighboring cells by changing a [code]Vector2[/code] "
"variable named [code]cell[/code]. It represents the current cell the robot "
"is in.\n"
"\n"
"When we increase [code]cell.x[/code], the robot moves to the right.\n"
"\n"
"Note that we delay the robot's movement in the app to help you visualize how "
"it moves. The following code would normally move the robot instantly."
msgstr ""
"您已经看到可以使用函数来[i]复用[/i]代码。在本课中，您将了解 "
"[b]循环[/b]。循环帮助你[i]迭代[/i]代码。\n"
"\n"
"为了说明循环是如何工作的，让我们将一个游戏板分成一个网格。\n"
"\n"
"我们的机器人可以通过更改名为 [code]cell[/code] 的 [code]Vector2[/code] "
"变量移动到相邻单元格。\n"
"\n"
"当我们增加 [code]cell.x[/code] 时，机器人向右移动。\n"
"\n"
"请注意，我们会在应用程序中延迟机器人的移动，以帮助您直观地了解它的移动方式。"
"以下代码通常会立即移动机器人。"

#: course/lesson-17-while-loops/lesson.tres:42
msgid "We can move diagonally by adding a [code]Vector2[/code] directly."
msgstr "我们可以通过直接添加 [code]Vector2[/code] 来沿对角线移动。"

#: course/lesson-17-while-loops/lesson.tres:62
msgid ""
"The above code works for a pre-defined board with a size of [code]Vector2(3, "
"3)[/code], but the [code]move_to_end()[/code] function wouldn't work if the "
"size of the board was different. \n"
"\n"
"The robot would either stop before the end or go too far.\n"
"\n"
"To implement a general solution for all board sizes, we can repeat the "
"robot's movement until it gets to the end.\n"
"\n"
"For code that repeats, we can use [i]loops[/i]."
msgstr ""
"上面的代码适用于大小为 [code]Vector2(3, 3)[/code] 的预定义板，但如果"
"[code]move_to_end()[/code]是不同的。\n"
"\n"
"机器人要么在结束前停止，要么走得太远。\n"
"\n"
"为了实现适用于所有板尺寸的通用解决方案，我们可以重复机器人的运动，直到它到达"
"终点。\n"
"\n"
"对于重复的代码，我们可以使用 [i]loops[/i]。"

#: course/lesson-17-while-loops/lesson.tres:76
msgid "Using while loops to repeat code"
msgstr "使用 while 循环重复代码"

#: course/lesson-17-while-loops/lesson.tres:78
msgid ""
"You can use a [code]while[/code] loop to make the computer repeat a block of "
"code until you meet a specific condition or decide to break from the loop.\n"
"\n"
"Here's how we use a [code]while[/code] loop."
msgstr ""
"您可以使用 [code]while[/code] 循环让计算机重复一段代码，直到您满足特定条件或"
"决定退出循环。\n"
"\n"
"下面是我们如何使用 [code]while[/code] 循环。"

#: course/lesson-17-while-loops/lesson.tres:100
msgid ""
"We use the variable [code]number[/code] to keep track of how many loops the "
"[code]while[/code] loop completes.\n"
"\n"
"Each time we go through the [code]while[/code] loop, we add [code]1[/code] "
"to [code]number[/code].\n"
"\n"
"The [code]while[/code] loop keeps running for as long as the condition is "
"true. In this case, it keeps running while [code]number[/code] is less than "
"[code]4[/code].\n"
"\n"
"You can see that the following code is executed four times in the console."
msgstr ""
"我们使用变量 [code]number[/code] 来跟踪 [code]while[/code] 循环完成了多少次循"
"环。\n"
"\n"
"每次我们通过 [code]while[/code] 循环时，我们将 [code]1[/code] 添加到 "
"[code]number[/code]。\n"
"\n"
"只要条件为真，[code]while[/code] 循环就会一直运行。在这种情况下，它会在 "
"[code]number[/code] 小于 [code]4[/code] 时继续运行。\n"
"\n"
"可以看到以下代码在控制台中执行了四次。"

#: course/lesson-17-while-loops/lesson.tres:126
#, fuzzy
msgid ""
"Let's apply this to our [code]move_to_end()[/code] function.\n"
"\n"
"This time, we compare the number of loops to the board's width. We go "
"through the loop until we reach the width of the board.\n"
"\n"
"Note that we move the robot until its position is one less than the board's "
"width because we are counting tiles from [code]0[/code].\n"
"\n"
"A board of [code]3[/code] by [code]3[/code] cells would have cell "
"coordinates going from [code]0[/code] to [code]2[/code] on both the X and Y "
"axes."
msgstr ""
"让我们将其应用于我们的 [code]move_to_end()[/code] 函数。\n"
"\n"
"这一次，我们将循环数与板的宽度进行比较。我们遍历循环，直到达到板的宽度。\n"
"\n"
"请注意，由于机器人已经在第一个单元格上，所以我们移动的距离比板的宽度小一个。"

#: course/lesson-17-while-loops/lesson.tres:160
msgid "While loops can cause issues"
msgstr "While循环可能会导致问题"

#: course/lesson-17-while-loops/lesson.tres:162
msgid ""
"If you're not careful, your [code]while[/code] loop can run infinitely. In "
"that case, the application will freeze.\n"
"\n"
"Take a look at this code example."
msgstr ""
"如果您不小心，您的 [code]while[/code] 循环可能会无限运行。在这种情况下，应用"
"程序将冻结。\n"
"\n"
"看看这个代码示例。"

#: course/lesson-17-while-loops/lesson.tres:182
msgid "What would happen if the computer tried to run the code above?"
msgstr "如果计算机试图运行上面的代码会发生什么？"

#: course/lesson-17-while-loops/lesson.tres:185
msgid ""
"Because we don't increment [code]number[/code] within the [code]while[/code] "
"loop, it always stays at [code]0[/code].\n"
"\n"
"As a result, the number is always lower than [code]10[/code], so we never "
"break out of the loop.\n"
"\n"
"Since there's no way to exit the [code]while[/code] loop, the computer will "
"attempt to draw squares infinitely, which will freeze the program.\n"
"\n"
"When programs stop responding on your computer, it's often due to an "
"infinite loop!"
msgstr ""
"因为我们没有在 [code]while[/code] 循环中增加 [code]number[/code]，所以它始终"
"保持在 [code]0[/code]。\n"
"\n"
"结果，这个数字总是小于[code]10[/code]，所以我们永远不会跳出循环。\n"
"\n"
"由于无法退出 [code]while[/code] 循环，计算机将尝试无限绘制正方形，这将冻结程"
"序。\n"
"\n"
"当程序在您的计算机上停止响应时，通常是由于无限循环！"

#: course/lesson-17-while-loops/lesson.tres:192
#: course/lesson-17-while-loops/lesson.tres:193
msgid "It would draw squares infinitely until the program is terminated"
msgstr "它将无限绘制正方形，直到程序终止"

#: course/lesson-17-while-loops/lesson.tres:192
msgid "It would draw 10 squares"
msgstr "它会画10个正方形"

#: course/lesson-17-while-loops/lesson.tres:192
msgid "It would draw 20 squares"
msgstr "它会画20个正方形"

#: course/lesson-17-while-loops/lesson.tres:200
msgid "When to use while loops"
msgstr "何时使用 while 循环"

#: course/lesson-17-while-loops/lesson.tres:202
msgid ""
"At first, you will not need [code]while[/code] loops often. Even the code we "
"show here has more efficient alternatives.\n"
"\n"
"Also, there's a safer kind of loop, [code]for[/code] loops, which we'll look "
"at in the next lesson.\n"
"\n"
"Yet, [code]while[/code] loops have important intermediate to advanced-level "
"uses, so you at least need to know they exist and how to use them.\n"
"\n"
"We use [code]while[/code] loops every time we need to loop an unknown number "
"of times.\n"
"\n"
"For example, games run in a loop that typically generates sixty images per "
"second until the user closes the game. This is possible thanks to "
"[code]while[/code] loops.\n"
"\n"
"There are other good uses for [code]while[/code] loops:\n"
"\n"
"- Reading and processing a file, like a text document, line by line.\n"
"- Processing a constant stream of data, like someone recording audio with a "
"microphone.\n"
"- Reading code and converting it into instructions the computer "
"understands.\n"
"- Various intermediate to advanced-level algorithms, like finding paths "
"around a map for AI."
msgstr ""
"起初，您不需要经常使用 [code]while[/code] 循环。甚至我们在这里展示的代码也有"
"更有效的替代方案。\n"
"\n"
"此外，还有一种更安全的循环，[code]for[/code] 循环，我们将在下一课中介绍。\n"
"\n"
"然而，[code]while[/code] 循环具有重要的中级到高级用途，因此您至少需要知道它们"
"的存在以及如何使用它们。\n"
"\n"
"每次我们需要循环未知次数时，我们都会使用 [code]while[/code] 循环。\n"
"\n"
"例如，游戏循环运行，通常每秒生成 60 张图像，直到用户关闭游戏。这要归功于 "
"[code]while[/code] 循环。\n"
"\n"
"[code]while[/code] 循环还有其他很好的用途：\n"
"\n"
"- 逐行读取和处理文件，如文本文档。\n"
"- 处理源源不断的数据流，例如有人用麦克风录制音频。\n"
"- 阅读代码并将其转换为计算机可以理解的指令。\n"
"- 各种中级到高级算法，例如为 AI 寻找地图周围的路径。"

#: course/lesson-17-while-loops/lesson.tres:227
msgid ""
"Let's practice some [code]while[/code] loops, as they're useful to know. "
"It's also an excellent opportunity to practice 2D vectors.\n"
"\n"
"Then, we'll move on to the safer [code]for[/code] loops in the following "
"lesson."
msgstr ""
"让我们练习一些 [code]while[/code] 循环，因为了解它们很有用。这也是练习 2D 矢"
"量的绝佳机会。\n"
"\n"
"然后，我们将在下一课中继续学习更安全的 [code]for[/code] 循环。"

#: course/lesson-17-while-loops/lesson.tres:237
msgid "Moving to the end of a board"
msgstr "移动到棋盘的末尾"

#: course/lesson-17-while-loops/lesson.tres:238
msgid ""
"Our robot has decided to stand at the top of the board.\n"
"\n"
"Complete the [code]move_to_bottom()[/code] function so the robot moves to "
"the bottom of the board.\n"
"\n"
"The board size is determined by the [code]Vector2[/code] [code]board_size[/"
"code].\n"
"\n"
"The robot's current cell is [code]Vector2(2, 0)[/code]. \n"
"\n"
"Make sure to use a [code]while[/code] loop so the function works for any "
"board size."
msgstr ""
"我们的机器人决定站在棋盘的顶端。\n"
"\n"
"完成 [code]move_to_bottom()[/code] 函数，使机器人移动到板子底部。\n"
"\n"
"板子大小由 [code]Vector2[/code] [code]board_size[/code] 决定。\n"
"\n"
"机器人的当前单元格是 [code]Vector2(2, 0)[/code]。\n"
"\n"
"确保使用 [code]while[/code] 循环，以便该函数适用于任何板尺寸。"

#: course/lesson-17-while-loops/lesson.tres:256
msgid ""
"Use a while loop to have our robot move from the top of the board to the "
"bottom."
msgstr "使用 while 循环让我们的机器人从板的顶部移动到底部。"

#: course/lesson-17-while-loops/lesson.tres:260
msgid "Introduction to While Loops"
msgstr "While循环简介"
