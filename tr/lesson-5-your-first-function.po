# Translations template for Learn GDScript From Zero.
# Copyright (C) 2022 GDQuest
# This file is distributed under the same license as the Learn GDScript From
# Zero project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Learn GDScript From Zero\n"
"Report-Msgid-Bugs-To: https://github.com/GDQuest/learn-gdscript\n"
"POT-Creation-Date: 2023-05-16 09:25+0200\n"
"PO-Revision-Date: 2023-07-10 21:52+0000\n"
"Last-Translator: Yılmaz Durmaz <yilmaz_durmaz@hotmail.com>\n"
"Language-Team: Turkish <https://hosted.weblate.org/projects/"
"learn-gdscript-from-zero/lesson-5-your-first-function/tr/>\n"
"Language: tr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Weblate 5.0-dev\n"
"Generated-By: Babel 2.9.1\n"

#: course/lesson-5-your-first-function/lesson.tres:14
msgid ""
"So far, we have called existing functions that other developers wrote.\n"
"\n"
"In this lesson, we'll talk more about what functions are and see some "
"examples. Then, you will learn how to define your own functions."
msgstr ""
"Şimdiye kadar, diğer geliştiricilerin yazdığı fonksiyonları çağırıyorduk.\n"
"\n"
"Bu derste, fonksiyonların ne oldukları hakkında konuşup birkaç örnek "
"göreceğiz. Daha sonra, kendi fonksiyonlarınızı nasıl tanımlayacağını "
"öğreneceksin."

#: course/lesson-5-your-first-function/lesson.tres:24
msgid "Functions are named sequences of instructions"
msgstr "Fonksiyonlar, isimlendirilmiş talimatlar dizisidir"

#: course/lesson-5-your-first-function/lesson.tres:26
msgid ""
"Functions are [i]sequences of instructions[/i] we give a name. We call that "
"name an [i]identifier[/i].\n"
"\n"
"Using the identifier, we can get the computer to execute all the "
"instructions inside the function as many times as we need. This is what a "
"[i]function call[/i] does."
msgstr ""
"Fonksiyonlar, onlara bir isim verdiğimiz [i]talimatlar dizisi[/i]dir. Bu "
"isme bir [i]tanımlayıcı[/i] diyoruz.\n"
"\n"
"Bir tanımlayıcı kullanarak, bize gerektiği zaman ve sayıda, bilgisayarın, "
"bir fonksiyonun içindeki talimatları çalıştırmasını sağlayabiliriz. Buna bir "
"[i]fonksiyonu çağırmak[/i] denir."

#: course/lesson-5-your-first-function/lesson.tres:36
msgid "Learn more about identifiers"
msgstr "Tanımlayıcılar hakkında fazlasını öğren"

#: course/lesson-5-your-first-function/lesson.tres:38
msgid ""
"In computer programming, we talk about [i]identifiers[/i] rather than "
"\"names\".\n"
"\n"
"It is because a function name is a label the computer uses to precisely "
"[i]identify[/i] and refer to a function or other code elements.\n"
"\n"
"Identifiers are unique: you cannot reuse the same name in a given [i]space[/"
"i] in your code.\n"
"\n"
"If you try to name two functions the same, the computer will raise an error."
msgstr ""
"Bilgisayar programcılığında, \"isim\"lerden çok [i]tanımlayıcılar[/i]dan "
"bahsederiz.\n"
"\n"
"Bunun nedeni, bir fonksiyonun isminin, bilgisayar tarafından, bir fonksiyonu "
"veya onun içindeki kod elemanlarını kesin bir şekilde [i]tanımlamak[/i] için "
"kullanılan bir etiket olmasıdır.\n"
"\n"
"Tanımlayıcılar eşsizdir: aynı kod [i]alanında[/i] aynı ismi başka amaçla "
"kullanamazsın.\n"
"\n"
"Eğer iki fonksiyona aynı ismi vermeyi denersen, bilgisayar sana hata "
"verecektir."

#: course/lesson-5-your-first-function/lesson.tres:54
msgid ""
"If there is any code that you need to run multiple times, you can put it "
"inside a function and give it a name.\n"
"\n"
"The instructions inside a function can be any code you want, and they will "
"all run every time you call the function.\n"
"\n"
"Here's the example of a [code]move_and_rotate()[/code] function that moves "
"the turtle forward and then turns it 90°."
msgstr ""
"Eğer birden fazla sefer çalıştırman gereken bir kodun varsa, bunu bir "
"fonksiyonun içine koyup ona bir isim verirsin.\n"
"\n"
"Fonksiyonun içindeki talimatlar, istediğin herhangi bir kod olabilir, ve "
"fonksiyonu her çağırdığında hepsi çalışacaktır.\n"
"\n"
"Bir örnek olarak, kaplumbağayı önce ileri hareket ettirip sonra 90° döndüren "
"[code]move_and_rotate()[/code] (hareket_ettir_ve_döndür) fonksiyonunu "
"verebiliriz."

#: course/lesson-5-your-first-function/lesson.tres:78
msgid ""
"The [code]move_and_rotate()[/code] function consists of two instructions, "
"each on a separate line. Both of those instructions call another familiar "
"function.\n"
"\n"
"You could write another function that calls [code]move_and_rotate()[/code] "
"four times to draw a square of length 200 pixels."
msgstr ""
"[code]move_and_rotate()[/code] fonksiyonu, ayrı satırlarda iki tane talimat "
"içeriyor. Bu talimatların her ikisi de, oldukça tanıdık başka bir fonksiyonu "
"çağırıyor.\n"
"\n"
"[code]move_and_rotate()[/code] fonksiyonunu dört kere kullanarak 200 piksel "
"uzunluğunda bir kare çizdiren tamamen başka bir fonksiyonda yazabilirdin."

#: course/lesson-5-your-first-function/lesson.tres:100
msgid ""
"Every time we call [code]move_and_rotate()[/code], the two functions "
"[code]move_forward(200)[/code] and [code]turn_right(90)[/code] are called in "
"sequence.\n"
"\n"
"In this simple example, it may not feel super useful. Here's a more useful "
"and realistic one: a function to draw any square.\n"
"\n"
"The following function uses [i]parameters[/i], which we will explore in the "
"next lesson.\n"
"\n"
"[i]Drag the slider to change the square's size.[/i]"
msgstr ""
"[code]move_and_rotate()[/code] fonksiyonunu her çağırdığımızda, "
"[code]move_forward(200)[/code] ve [code]turn_right(90)[/code] fonksiyonları "
"sırasıyla çağırılır.\n"
"\n"
"Bu basit örnekte, bu sana süper kullanışlı gelmeyebilir. O halde işte sana "
"daha kullanışlı ve gerçekçi olan: bir kare çizdiren fonksiyon.\n"
"\n"
"Aşağıdaki fonksiyon, [i]alınan değişkenler[/i] (parametre) kullanıyor, ki "
"bunu sonraki derste işleyeceğiz.\n"
"\n"
"[i]Ayar çubuğunu kaydırarak karenin boyutunu değiştir.[/i]"

#: course/lesson-5-your-first-function/lesson.tres:124
msgid "How to define your own functions"
msgstr "Kendi fonksiyonunu nasıl tanımlarsın"

#: course/lesson-5-your-first-function/lesson.tres:126
msgid ""
"Let's break down how you define a function.\n"
"\n"
"A function definition starts with the [code]func[/code] keyword followed by "
"a space, the function's name, parentheses, and a colon."
msgstr ""
"Hadi kendi fonksiyonunu nasıl tanımlayacağına bir göz atalım.\n"
"\n"
"Bir fonksiyon tanımı, [code]func[/code] anahtar kelimesi ile başlayıp, bir "
"boşluk, fonksiyonun ismi, aç-kapa parantezleri, ve iki nokta üstüste ile "
"biter."

#: course/lesson-5-your-first-function/lesson.tres:148
msgid ""
"The instructions inside the function [b]must[/b] all start with a leading "
"tab character. You can insert that tab character by pressing the [b]Tab[/b] "
"key.\n"
"\n"
"We call those leading tabs [i]indents[/i]. They're important: the computer "
"uses them to know which instructions are part of the same code block."
msgstr ""
"Fonksiyonun içindeki talimatların hepsi, satır başında en az bir sekme "
"karakteri ile başlamak [b]zorundadır[/b]. Bir sekme karakterini klavyede "
"[b]Sekme[/b] tuşuna (en solda iki yönlü iki ok) basarak ekleyebilirsiniz.\n"
"\n"
"Bu başa eklediğimiz sekme karakterlerine [i]girinti[/i] diyoruz. Bunlar çok "
"önemli: bilgisayar bunları kullanarak, hangi talimatların aynı kod bölümüne "
"ait olduklarını bilmek için kullanıyor."

#: course/lesson-5-your-first-function/lesson.tres:158
msgid "Why do we use functions?"
msgstr "Fonksiyonları neden kullanıyoruz?"

#: course/lesson-5-your-first-function/lesson.tres:161
msgid ""
"Functions are groups of instructions we reuse every time we call the "
"function.\n"
"\n"
"Because we give functions a name, they also allow us to name a set of "
"instructions, which is handy!"
msgstr ""
"Fonksiyonlar, bunları her çağırdımızda tekrar kullandığımız talimatlar "
"gurubudur.\n"
"\n"
"Fonksiyonlara bir isim verdiğimiz için, bu bize bir talimatlar dizisini "
"isimlendirme olanağı da veriyor, ki bu çok kullanışlı!"

#: course/lesson-5-your-first-function/lesson.tres:164
#: course/lesson-5-your-first-function/lesson.tres:165
msgid "To reuse code multiple times. "
msgstr "Kodu bir çok defa yeniden kullanmak için. "

#: course/lesson-5-your-first-function/lesson.tres:164
#: course/lesson-5-your-first-function/lesson.tres:165
msgid "To run multiple instructions in one go."
msgstr "Tek seferde bir sürü talimatı çalıştırmak için."

#: course/lesson-5-your-first-function/lesson.tres:164
#: course/lesson-5-your-first-function/lesson.tres:165
msgid "To put a name on multiple lines of code."
msgstr "Çoklu kod satırlarına bir isim koymak için."

#: course/lesson-5-your-first-function/lesson.tres:172
msgid "Names in code have rules"
msgstr "Kod içindeki isimlerin bir kuralı var"

#: course/lesson-5-your-first-function/lesson.tres:174
msgid ""
"Function identifiers cannot contain spaces. In general, names in programming "
"languages cannot contain spaces.\n"
"\n"
"The computer uses spaces to detect the separation between different keywords "
"and identifiers.\n"
"\n"
"Instead of spaces, in GDScript, we use underscores (\"_\"). You saw this "
"already with functions like [code]move_forward()[/code] or "
"[code]move_local_x()[/code]. This is the convention we follow in GDScript.\n"
"\n"
"There's another convention programmers use in some other programming "
"languages.\n"
"\n"
"Instead of using underscores, they start words with capital letters except "
"for the first one. With that convention, you'd write function names like "
"[code]moveForward()[/code] or [code]moveLocalX()[/code]\n"
"\n"
"Identifiers also [i]have[/i] to start with a letter or an underscore; You "
"[i]can't[/i] begin with a number, but you can use numbers after the first "
"character."
msgstr ""
"Fonksiyon tanımlayıcılar boşluk içeremez. Genel olarak, programlama "
"dillerindeki isimler boşluk içeremezler.\n"
"\n"
"Bilgisayar, farklı anahtar kelimeler ve tanımlayıcıları birbirinden ayırt "
"etmek için boşluk karakterini kullanır.\n"
"\n"
"GDScript'te, boşlukların yerine alt çizgi (\"_\") kullanıyoruz. Bunu zaten "
"[code]move_forward()[/code] ya da [code]move_local_x()[/code] "
"fonsiyonlarında gördün. GDScript'te takip ettiğimiz düzen budur.\n"
"\n"
"Programcıların, bazı diğer programlama dillerinde kullandığı bir başka düzen "
"daha var.\n"
"\n"
"Alt çizgi kullanmak yerine, ilk harf hariç, kelimelerin ilk harflerini büyük "
"yazarak birleştirirler. Bu düzene uyacak olursak, fonksiyon isimlerini "
"[code]moveForward()[/code] ya da [code]moveLocalX()[/code] şeklinde yazardın."
"\n"
"\n"
"Ayrıca, tanımlayıcılar bir harf ve ya alt çizgi ile başlamak "
"[i]zorundadır[/i]. Bir numara ile [i]başlayamazsın[/i], ama ilk harften "
"sonra numaralar kullanabilirsin."

#: course/lesson-5-your-first-function/lesson.tres:192
msgid "Which of the following names are valid function names?"
msgstr "Bu isimlerden hangileri, geçerli birer fonksiyon ismidir?"

#: course/lesson-5-your-first-function/lesson.tres:193
msgid "Note that it's fine to use capital letters."
msgstr "Büyük harf kullanmanın sorun olmadığına dikkat et."

#: course/lesson-5-your-first-function/lesson.tres:195
msgid ""
"You can't name a function [code]move forward[/code] because it contains a "
"space. Names in code cannot contain spaces.\n"
"\n"
"They can't start with numbers either, which is why [code]45_degree_turn[/"
"code] is also invalid. \n"
"\n"
"However, having numbers elsewhere in a function name is fine. That's why "
"[code]make3NewCharacters[/code] works."
msgstr ""
"Bir fonksiyona, [code]move forward[/code] ismini veremezsin çünkü içinde "
"boşluk var. Kodun içindeki isimler boşluk içeremez.\n"
"\n"
"İsimler, numaralarla da başlayamazlar, bu nedenle [code]45_degree_turn[/code]"
" de geçersizdir.\n"
"\n"
"Ancak ismin diğer yerlerinde numara olmasında sorun yoktur. "
"[code]make3NewCharacters[/code] isminin işe yaramasının sebebi bu."

#: course/lesson-5-your-first-function/lesson.tres:200
msgid "move forward"
msgstr "move forward"

#: course/lesson-5-your-first-function/lesson.tres:200
#: course/lesson-5-your-first-function/lesson.tres:201
msgid "jump"
msgstr "jump"

#: course/lesson-5-your-first-function/lesson.tres:200
#: course/lesson-5-your-first-function/lesson.tres:201
msgid "make3NewCharacters"
msgstr "make3NewCharacters"

#: course/lesson-5-your-first-function/lesson.tres:200
#: course/lesson-5-your-first-function/lesson.tres:201
msgid "move_forward"
msgstr "move_forward"

#: course/lesson-5-your-first-function/lesson.tres:200
msgid "45_degree_turn"
msgstr "45_degree_turn"

#: course/lesson-5-your-first-function/lesson.tres:208
msgid "Instantly moving the turtle to a different position"
msgstr "Kaplumbağayı hızlıca farklı bir konuma taşımak"

#: course/lesson-5-your-first-function/lesson.tres:210
msgid ""
"In order to draw multiple squares in different positions, we introduce a new "
"function for our turtle to use.\n"
"\n"
"The [code]jump()[/code] function picks up the turtle and places it relative "
"to where it is.\n"
"\n"
"So calling [code]jump(-100, 50)[/code] moves the turtle by 100 pixels to the "
"[b]left[/b] and 50 pixels [b]down[/b] without drawing any lines."
msgstr ""
"Farklı konumlarda bir sürü kare çizmek için, kaplumbağamızın kullanacağı "
"yeni bir fonksiyon tanıtıyoruz.\n"
"\n"
"[code]jump()[/code] (zıpla) fonksiyonu kaplumbağayı alıp, bulunduğu yere "
"yakın başka bir yere taşır.\n"
"\n"
"Yani [code]jump(-100, 50)[/code] çağırması, kaplumbağayı, hiç bir çizgi "
"çizmeden, 100 piksel [b]sola[/b] ve 50 piksel [b]aşağıya[/b] taşıyor."

#: course/lesson-5-your-first-function/lesson.tres:232
msgid "A function to draw squares"
msgstr "Kare çizen bir fonksiyon"

#: course/lesson-5-your-first-function/lesson.tres:233
msgid ""
"Code a function named [code]draw_square()[/code] to draw one square of "
"length 200 pixels. The function should take no parameters.\n"
"\n"
"Use the [code]move_forward()[/code] and [code]turn_right()[/code] functions "
"to instruct the turtle.\n"
"\n"
"In the following practice, you'll use the [code]draw_square()[/code] "
"function to draw multiple squares by calling your own function."
msgstr ""
"200 piksel uzunluğunda bir kare çizen, [code]draw_square()[/code] (çiz_kare) "
"isimli bir fonksiyon kodla. Fonksiyon, hiç bir girdi değişkeni almasın.\n"
"\n"
"Kaplumbağaya talimat vermek için, [code]move_forward()[/code] ve "
"[code]turn_right()[/code] fonksiyonlarını kullan.\n"
"\n"
"Sıradaki alıştırmada, çoklu kareler çizmek için kendi fonksiyonunu "
"çağırırken, [code]draw_square()[/code] fonksiyonunu kullanacaksın."

#: course/lesson-5-your-first-function/lesson.tres:246
msgid ""
"Until now, you've had to write code by hand, and it's boring. It's time to "
"code a reusable function. You'll use it to draw multiple squares."
msgstr ""
"Şimdiye kadar, kodları elle yazman gerekiyordu, ve bu biraz sıkıcı. Yeniden "
"kullanılabilir bir fonksiyon yazmanın zamanı geldi. Çoklu kareler çizmek "
"bunu kullanacaksın."

#: course/lesson-5-your-first-function/lesson.tres:251
msgid "Drawing multiple squares"
msgstr "Çoklu kareler çizmek"

#: course/lesson-5-your-first-function/lesson.tres:252
msgid ""
"You have a function to draw one square: [code]draw_square()[/code]. Use it "
"to draw three squares.\n"
"\n"
"We already created [code]draw_square()[/code] for you. Create a function "
"named [code]draw_three_squares[/code] that calls [code]draw_square()[/code] "
"three times.\n"
"\n"
"If you just call the function, all three squares will overlap. To stack them "
"diagonally, call [code]jump(300, 300)[/code] between two calls to "
"[code]draw_square()[/code].\n"
"\n"
"Calling [code]jump(300, 300)[/code] makes the turtle jump by 300 pixels to "
"the right and 300 pixels down without drawing any lines."
msgstr ""
"Elinde bir tane kare çizebilen bir fonksiyon var: [code]draw_square()[/code]"
". Bunu kullanarak üç tane kare çiz.\n"
"\n"
"[code]draw_square()[/code] fonksiyonunu senin için biz oluşturduk. Senin "
"işin, üç defa [code]draw_square()[/code] çağrısı yapan, "
"[code]draw_three_squares[/code] (çiz_üç_kare) isimli bir fonksiyon "
"oluşturmak.\n"
"\n"
"Eğer fonksiyonu öylesine çağırırsan, üç kare birbiri üzerine gelecektir. "
"Bunları köşegen doğrultusunda istiflemek için, her iki "
"[code]draw_square()[/code] çağrısı arasına bir [code]jump(300, 300)[/code] "
"çağırmalısın.\n"
"\n"
"[code]jump(300, 300)[/code] çağrısı, kaplumbağayı alıp, herhangi bir çizgi "
"çizmeden 300 piksel sağa ve 300 piksel aşağıya zıplatır."

#: course/lesson-5-your-first-function/lesson.tres:275
msgid ""
"Now you created a function to draw squares, you can reuse it by calling it "
"multiple times."
msgstr ""
"Şimdi, kare çizen bir fonksiyon oluşturduğuna göre, artık bunu bir çok kere "
"çağırarak defalarca kullanabilirsin."

#: course/lesson-5-your-first-function/lesson.tres:279
msgid "Coding Your First Function"
msgstr "İlk Fonksiyonunu Kodlamak"
