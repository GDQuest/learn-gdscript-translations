# Translations template for Learn GDScript From Zero.
# Copyright (C) 2022 GDQuest
# This file is distributed under the same license as the Learn GDScript From
# Zero project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Learn GDScript From Zero\n"
"Report-Msgid-Bugs-To: https://github.com/GDQuest/learn-gdscript\n"
"POT-Creation-Date: 2022-03-26 17:50+0100\n"
"PO-Revision-Date: 2023-07-14 21:12+0000\n"
"Last-Translator: Yılmaz Durmaz <yilmaz_durmaz@hotmail.com>\n"
"Language-Team: Turkish <https://hosted.weblate.org/projects/"
"learn-gdscript-from-zero/lesson-20-looping-over-arrays/tr/>\n"
"Language: tr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Weblate 5.0-dev\n"
"Generated-By: Babel 2.9.1\n"

#: course/lesson-20-looping-over-arrays/lesson.tres:14
msgid ""
"We used the [code]range()[/code] function in combination with "
"[code]for[/code] loops."
msgstr ""
"[code]range()[/code] fonksiyonunu, [code]for[/code] döngüleri ile birlikte "
"kullanmıştık."

#: course/lesson-20-looping-over-arrays/lesson.tres:34
msgid ""
"The [code]range()[/code] function produced an array that the "
"[code]for[/code] keyword could loop over.\n"
"\n"
"We can give [code]for[/code] loops [i]any[/i] array, and they will loop "
"over them just the same.\n"
"\n"
"Instead of using the [code]range()[/code] function, we could manually "
"write the numbers and get the same result."
msgstr ""
"[code]range()[/code] fonksiyonu, [code]for[/code] anahtar kelimesinin "
"üzerinde döngü kurabileceği bir dizi üretiyor.\n"
"\n"
"[code]for[/code] döngülerine, [i]herhangi bir[/i] dizi verirsek, bunlar "
"üzerinde de aynı şekilde döngü kurulacaktır.\n"
"\n"
"[code]range()[/code] fonksiyonunu kullanmak yerine, sayıları elle yazabilir "
"ve aynı sonucu elde edebilirdik."

#: course/lesson-20-looping-over-arrays/lesson.tres:58
msgid ""
"For each element inside the array, the [code]for[/code] loop extracts it,"
" stores it in the temporary variable named [code]number[/code], and "
"executes the loop's code once.\n"
"\n"
"Inside the loop, you can access the [code]number[/code] variable, which "
"changes on each [i]iteration[/i].\n"
"\n"
"The code works regardless of the array or where you store it. Often, you "
"will store arrays in variables for easy access."
msgstr ""
"Bir dizinin içindeki her bir öğe için, [code]for[/code] döngüsü bu öğeyi "
"alır, [code]number[/code] isimli geçici değişkende saklar, ve döngü kodunu "
"bir kez çalıştırır.\n"
"\n"
"Döngünün içinde, her [i]yinelemede[/i] değişen bu [code]number[/code] "
"değişkenine erişebilirsin.\n"
"\n"
"Kod, diziden veya onu nerede sakladığına bakmadan çalışır. Genellikle, kolay "
"erişim için dizileri değişkenlerde saklarsın."

#: course/lesson-20-looping-over-arrays/lesson.tres:80
msgid "What will this code print?"
msgstr "Bu kod ne yazdıracak?"

#: course/lesson-20-looping-over-arrays/lesson.tres:81
msgid ""
"[code]var numbers = [0, 1, 2]\n"
"for number in numbers:\n"
"    print(number)\n"
"[/code]"
msgstr ""
"[code]var numbers = [0, 1, 2]\n"
"for number in numbers:\n"
"    print(number)\n"
"[/code]"

#: course/lesson-20-looping-over-arrays/lesson.tres:86
msgid ""
"Compared to previous examples, we store the array in the "
"[code]numbers[/code] variable. Using the [code]numbers[/code] variable in"
" our [code]for[/code] loop allows the computer to access the array of "
"numbers like before.\n"
"\n"
"We have three numbers in the array: [code]0[/code], [code]1[/code], and "
"[code]2[/code].\n"
"\n"
"The loop extracts each of them sequentially and assigns it to the "
"[code]number[/code] temporary variable. As the loop processes each "
"number, the output will print [code]0[/code], then [code]1[/code], then "
"[code]2[/code], each on a separate line."
msgstr ""
"Önceki örneklerle karşılaştırırsak, diziyi [code]numbers[/code] değişkeninde "
"saklıyoruz. [code]for[/code] döngümüzde [code]numbers[/code] değişkenini "
"kullanmak, bilgisayarın sayı dizisine daha önce olduğu gibi erişmesini "
"sağlar.\n"
"\n"
"Dizide üç tane sayımız var: [code]0[/code], [code]1[/code], ve "
"[code]2[/code].\n"
"\n"
"Döngü bunların her birini sırayla çıkarır ve [code]number[/code] geçici "
"değişkenine atar. Döngü her bir sayıyı işledikçe, çıktıya, her biri ayrı bir "
"satırda olacak şekilde, ilk başta [code]0[/code], sonra [code]1[/code], ve "
"en son [code]2[/code] yazdırılır."

#: course/lesson-20-looping-over-arrays/lesson.tres:91
#: course/lesson-20-looping-over-arrays/lesson.tres:92
msgid "0, 1, and 2"
msgstr "0, 1 ve 2"

#: course/lesson-20-looping-over-arrays/lesson.tres:91
msgid "1, 2, and 3"
msgstr "1, 2 ve 3"

#: course/lesson-20-looping-over-arrays/lesson.tres:91
msgid "0, 0, and 0"
msgstr "0, 0 ve 0"

#: course/lesson-20-looping-over-arrays/lesson.tres:99
msgid "Making the turtle walk, with a loop"
msgstr "Kaplumbağayı, bir döngü kullanarak yürütmek"

#: course/lesson-20-looping-over-arrays/lesson.tres:101
msgid ""
"In the previous lesson, you made a turtle walk along a path by writing "
"[code]Vector2[/code] coordinates in an array."
msgstr ""
"Bir önceki derste, [code]Vector2[/code] konumlarını bir diziye yazarak, bir "
"kaplumbağanın bir yol boyunca yürümesini sağladın."

#: course/lesson-20-looping-over-arrays/lesson.tres:121
msgid ""
"It's a [code]for[/code] loop that makes the turtle walk along the path.\n"
"\n"
"The loop works like this: for each coordinate in the array, it moves the "
"turtle once to that cell."
msgstr ""
"Kaplumbağanın yol boyunca yürümesini sağlayan, bir [code]for[/code] "
"döngüsüdür.\n"
"\n"
"Döngü şu şekilde çalışır: dizideki her konum için, kaplumbağayı o hücreye "
"taşır."

#: course/lesson-20-looping-over-arrays/lesson.tres:143
msgid "It's the same principle with unit selection."
msgstr "Birimlerin seçiminde de aynı ilke geçerli."

#: course/lesson-20-looping-over-arrays/lesson.tres:163
msgid ""
"For each coordinate in an array named [code]selected_units[/code], we "
"check if there is a unit in that cell. If so, we select it. \n"
"\n"
"In that case, we use an array, a loop, and a condition together."
msgstr ""
"[code]selected_units[/code] (seçili_birimler) adlı dizideki her konum için, "
"o hücrede bir birimin olup olmadığını kontrol ederiz. Eğer varsa, onu "
"seçeriz.\n"
"\n"
"Bu durumda, bir dizi, bir döngü ve bir koşulu birlikte kullanırız."

#: course/lesson-20-looping-over-arrays/lesson.tres:185
msgid ""
"The code above uses several features you haven't learned yet:\n"
"\n"
"- In a condition, the [code]in[/code] keyword allows you to check if a "
"value exists [i]in[/i] an array.\n"
"- The array's [code]append()[/code] function appends a new value at the "
"end of the array.\n"
"\n"
"Notice the use of a period after the [code]selected_units[/code] "
"variable, to call the [code]append()[/code] function. It's because this "
"function exists only on arrays.\n"
"\n"
"When functions exist only on a specific value type, you write a dot after"
" the value to call the function on it.\n"
"\n"
"We'll revisit those two features again in the following lessons."
msgstr ""
"Yukarıdaki kod, henüz öğrenmediğin birkaç özelliği kullanıyor:\n"
"\n"
"- Bir koşul yazımında, [code]in[/code] anahtar kelimesi, bir değerin, bir "
"dizinin [i]içinde[/i] var olup olmadığını kontrol etmeni sağlar.\n"
"- Dizinin [code]append()[/code] üye fonksiyonu, dizinin sonuna yeni bir "
"değer ekler.\n"
"\n"
"[code]append()[/code] fonksiyonunu çağırmak için, [code]selected_units[/code]"
" değişkeninden sonra bir nokta kullanıldığına dikkat et. Bunun nedeni, bu "
"fonksiyonun yalnızca dizilerde bulunmasıdır.\n"
"\n"
"Fonksiyonlar, eğer yalnızca belirli bir değer tipinde mevcut ise, fonksiyonu "
"bu değer üzerinden çağırmak için, değerden sonra bir nokta yazarsın.\n"
"\n"
"Bu iki özelliği, ilerleyen derslerde tekrar gözden geçireceğiz."

#: course/lesson-20-looping-over-arrays/lesson.tres:204
msgid ""
"The beauty of loops is that they work regardless of the size of your "
"arrays. \n"
"\n"
"The code just works whether you have one or ten thousand units to select."
" It is all accomplished with only a couple lines of code.\n"
"\n"
"That's the power of computer programming.\n"
"\n"
"In the following practices, you will use arrays combined with "
"[code]for[/code] loops to achieve similar results."
msgstr ""
"Döngülerin güzelliği, dizilerinizin boyutundan bağımsız olarak çalışmasıdır."
"\n"
"\n"
"Kod, seçilecek bir veya on bin birimin olsa da çalışır. Tüm bunlar sadece "
"birkaç satır kod ile gerçekleştirilir.\n"
"\n"
"Bu bilgisayar programcılığının gücüdür.\n"
"\n"
"Sıradaki alıştırmalarda, benzer sonuçlar elde etmek için, [code]for[/code] "
"döngüleriyle birlikte dizileri kullanacaksın."

#: course/lesson-20-looping-over-arrays/lesson.tres:218
msgid "Move the robot along the path"
msgstr "Robotu , verilen yol boyunca hareket ettir"

#: course/lesson-20-looping-over-arrays/lesson.tres:219
msgid ""
"Our AI pathfinding algorithm provided a path for the robot to move to the"
" right edge of the grid. Your task is to use a [code]for[/code] loop to "
"make the robot move.\n"
"\n"
"To move the robot, call [i]its[/i] [code]move_to()[/code] function, like "
"so: [code]robot.move_to()[/code].\n"
"\n"
"The [code]move_to()[/code] function only exists on the robot, which is "
"why you need to access it this way."
msgstr ""
"Yapay zeka yol bulma algoritmamız, robotun ızgaranın sağ kenarına gitmesi "
"için bir yol verdi. Senin görevin, robotu hareket ettirmek için bir "
"[code]for[/code] döngüsü kullanmak.\n"
"\n"
"Robotu hareket ettirmek için, onun [i]kendi[/i] [code]move_to()[/code] "
"fonksiyonunu şu şekilde çağır: [code]robot.move_to()[/code].\n"
"\n"
"[code]move_to()[/code] fonksiyonu sadece robot üzerinde mevcuttur, bu yüzden "
"bu şekilde erişmen gerekiyor."

#: course/lesson-20-looping-over-arrays/lesson.tres:235
msgid ""
"Our AI pathfinding algorithm is giving us a path to move the robot. Now, "
"you need to make the turtle move along the path."
msgstr ""
"Yapay zeka yol bulma algoritmamız bize robotu hareket ettirmek için bir yol "
"verdi. Şimdi, kaplumbağayı, bu yol boyunca hareket ettirmen gerekiyor."

#: course/lesson-20-looping-over-arrays/lesson.tres:240
msgid "Back to the drawing board"
msgstr "Çizim tahtasına geri dönüş"

#: course/lesson-20-looping-over-arrays/lesson.tres:241
msgid ""
"We want to draw many rectangles, something surprisingly common in games.\n"
"\n"
"However, writing this code by hand can get tedious. Instead, you could "
"store the size of your shapes in arrays and use a loop to draw them all "
"in batches.\n"
"\n"
"That's what you'll do in this practice.\n"
"\n"
"Use a [code]for[/code] loop to draw every rectangle in the "
"[code]rectangle_sizes[/code] array with the [code]draw_rectangle()[/code]"
" function.\n"
"\n"
"The rectangles shouldn't overlap or cross each other. To avoid that, "
"you'll need to call the [code]jump()[/code] function."
msgstr ""
"Oyunlarda, şaşırtıcı derecede yaygın olan, çok sayıda dikdörtgen çizmek "
"istiyoruz.\n"
"\n"
"Ancak bu kodu elle yazmak sıkıntılı olabilir. Bunun yerine, şekillerinin "
"boyutlarını dizilerde saklayabilir, ve hepsini toplu olarak çizmek için bir "
"döngü kullanabilirsin.\n"
"\n"
"Bu uygulamada yapacağın şey tam da bu.\n"
"\n"
"[code]draw_rectangle()[/code] fonksiyonu ile [code]rectangle_sizes[/code] "
"dizisindeki her bir dikdörtgeni çizmek için bir [code]for[/code] döngüsü "
"kullan.\n"
"\n"
"Dikdörtgenler üst üste gelmemeli veya birbirini kesmemelidir. Bunu önlemek "
"için [code]jump()[/code] fonksiyonunu da çağırman gerek. (Ayrıca, "
"Vector2'nin x ve y değerlerini tuttuğunu hatırla)."

#: course/lesson-20-looping-over-arrays/lesson.tres:261
msgid ""
"The drawing turtle makes its comeback. Fear not! Armed with loops, you'll"
" make it draw faster than ever before."
msgstr ""
"Çizim kaplumbağası aramıza dönüyor. Ama korkma! Döngülerle donanmış olarak, "
"her zamankinden daha hızlı çizmesini sağlayacaksın."

#: course/lesson-20-looping-over-arrays/lesson.tres:265
msgid "Looping over arrays"
msgstr "Diziler üzerinde döngü kurmak"
