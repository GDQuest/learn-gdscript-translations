# Translations template for Learn GDScript From Zero.
# Copyright (C) 2022 GDQuest
# This file is distributed under the same license as the Learn GDScript From
# Zero project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Learn GDScript From Zero\n"
"Report-Msgid-Bugs-To: https://github.com/GDQuest/learn-gdscript\n"
"POT-Creation-Date: 2023-05-16 09:25+0200\n"
"PO-Revision-Date: 2023-09-01 23:07+0000\n"
"Last-Translator: gsomgsom <zhelneen@yandex.ru>\n"
"Language-Team: Russian <https://hosted.weblate.org/projects/"
"learn-gdscript-from-zero/lesson-7-member-variables/ru/>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2;\n"
"X-Generator: Weblate 5.0.1-dev\n"
"Generated-By: Babel 2.9.1\n"

#: course/lesson-7-member-variables/lesson.tres:14
msgid ""
"In this lesson, we take a first look at variables.\n"
"\n"
"In games, you need to keep track of many values that change over time:\n"
"\n"
"- The player's score.\n"
"- Every character or enemy's health.\n"
"- The last checkpoint.\n"
"\n"
"And so much more. You need to store, retrieve, and update those values.\n"
"\n"
"We call those values [i]variables[/i]. Variables are labels you use to keep "
"track of values that vary over time. Here's an example of a variable "
"tracking a character or monster's health."
msgstr ""
"В этом уроке мы впервые рассмотрим переменные.\n"
"\n"
"В играх вам нужно отслеживать множество значений, которые меняются с "
"течением времени:\n"
"\n"
"- Счет игрока.\n"
"- Здоровье каждого персонажа или врага.\n"
"- Последнюю контрольную точку.\n"
"\n"
"И многие другие. Вам нужно хранить, извлекать и обновлять эти значения.\n"
"\n"
"Мы называем эти значения [i]переменными[/i]. Переменные — это метки, которые "
"вы используете для отслеживания значений, изменяющихся во времени. Вот "
"пример переменной, отслеживающей здоровье персонажа или монстра."

#: course/lesson-7-member-variables/lesson.tres:44
msgid ""
"The line above defines a new variable named [code]health[/code] and assigns "
"it a starting value of [code]100[/code] (that's what the equal sign does, "
"more on that below).\n"
"\n"
"Function parameters, which you saw in the previous lesson, are another "
"example of variables."
msgstr ""
"Строка выше определяет новую переменную с именем [code]health[/code] и "
"присваивает ей начальное значение [code]100[/code] (подробнее о том, что "
"делает знак равно, будет ниже).\n"
"\n"
"Параметры функции, которые вы видели в предыдущем уроке, являются ещё одним "
"примером переменных."

#: course/lesson-7-member-variables/lesson.tres:56
msgid ""
"In this lesson, we start using variables built into Godot. They're a "
"particular kind called [i]member variables[/i].\n"
"\n"
"Member variables are values attached to a game entity. They're useful "
"properties like the [code]position[/code], [code]rotation[/code], and "
"[code]scale[/code] of a character.\n"
"\n"
"In a previous lesson, we saw how we could use the [code]rotate()[/code] "
"function to rotate our character."
msgstr ""
"В этом уроке мы начнем использовать переменные, встроенные в Godot. Они "
"являются особым видом переменных и называются [i]свойствами[/i].\n"
"\n"
"Свойства — это значения, привязанные к игровому объекту, например ими "
"являются: положение [code]position[/code], вращение [code]rotation[/code], и "
"масштаб [code]scale[/code] персонажа.\n"
"\n"
"В предыдущем уроке мы видели, как можно использовать функцию [code]rotate()[/"
"code] для поворота персонажа."

#: course/lesson-7-member-variables/lesson.tres:80
msgid ""
"This function increases or decreases the value of the entity's "
"[code]rotation[/code] member variable.\n"
"\n"
"Say we want to reset the rotation to [code]0[/code] and make the character "
"upright. Using the [code]rotate()[/code] function can prove difficult: you "
"need to know the character's exact current angle to cancel it out.\n"
"\n"
"It's much easier to use the member variable rather than the function.\n"
"\n"
"The following code assigns the value [code]0[/code] to the character's "
"rotation, resetting its angle and making it upright."
msgstr ""
"Эта функция увеличивает или уменьшает значение свойства [code]rotation[/"
"code] объекта.\n"
"\n"
"Допустим, мы хотим сбросить угол наклона на [code]0[/code] и вернуть "
"персонажа в вертикальное положение. Использование функции [code]rotate()[/"
"code] может оказаться сложным: для отмены поворота необходимо точно знать "
"текущий угол наклона персонажа.\n"
"\n"
"Гораздо проще использовать свойство, а не функцию.\n"
"\n"
"Следующий код присваивает значение [code]0[/code] свойству персонажа, "
"сбрасывая его угол наклона."

#: course/lesson-7-member-variables/lesson.tres:106
msgid ""
"Notice how we use the equal sign ([code]=[/code]) to change the value of a "
"variable."
msgstr ""
"Обратите внимание как мы используем знак равенства ([code]=[/code]) для "
"изменения значения переменной."

#: course/lesson-7-member-variables/lesson.tres:114
msgid "What's a variable?"
msgstr "Что такое переменная?"

#: course/lesson-7-member-variables/lesson.tres:117
msgid ""
"Variables are labels you use to access values that change over time.\n"
"\n"
"You can also use them to put a name on a value you want to reuse throughout "
"your code. It makes your code easier to read and to change."
msgstr ""
"Переменные - это метки, которые вы используете для доступа к значениям, "
"изменяющимся со временем.\n"
"\n"
"Вы также можете использовать их, чтобы дать имя значению, которое вы хотите "
"повторно использовать во всем коде. Это облегчает чтение и изменение кода."

#: course/lesson-7-member-variables/lesson.tres:120
#: course/lesson-7-member-variables/lesson.tres:121
msgid "A label you use to keep track of a value that can change."
msgstr "Метка для отслеживания значения, которое может меняться."

#: course/lesson-7-member-variables/lesson.tres:120
msgid "A function that varies over time."
msgstr "Функция, которая изменяется с течением времени."

#: course/lesson-7-member-variables/lesson.tres:120
msgid "A decimal number."
msgstr "Десятичная дробь."

#: course/lesson-7-member-variables/lesson.tres:128
msgid "Accessing sub-variables with the dot"
msgstr "Использование точки для получения доступа ко вложенным переменным"

#: course/lesson-7-member-variables/lesson.tres:130
msgid ""
"In video games, you will see many member variables that have sub-values.\n"
"\n"
"For example, the [code]position[/code] we mentioned has two coordinates: "
"[code]x[/code] and [code]y[/code].\n"
"\n"
"It's the same for the [code]scale[/code]: it has [code]x[/code] and [code]y[/"
"code] sub-variables. They respectively control the horizontal and vertical "
"size of the game entity.\n"
"\n"
"To access those X and Y sub-components, you add a dot (\".\") after the "
"variable name.\n"
"\n"
"The code below places the entity at [code]200[/code] pixels on the x-axis "
"and [code]250[/code] pixels on the y-axis."
msgstr ""
"В видеоиграх вы увидите множество свойств, которые имеют вложенные значения."
"\n"
"\n"
"Например, упомянутая нами позиция [code]position[/code] имеет две координаты:"
" [code]x[/code] и [code]y[/code].\n"
"\n"
"То же самое касается масштаба [code]scale[/code]: у него есть вложенные "
"переменные [code]x[/code] и [code]y[/code]. Они управляют горизонтальным и "
"вертикальным размером игрового объекта соответственно.\n"
"\n"
"Чтобы получить доступ к этим вложенным компонентам X и Y, добавьте точку (\"."
"\") после имени переменной.\n"
"\n"
"Приведенный ниже код размещает объект в координаты [code]180[/code] пикселей "
"по оси x и [code]120[/code] пикселей по оси y."

#: course/lesson-7-member-variables/lesson.tres:158
msgid ""
"Notice how we use the equal sign (\"=\") to assign the numbers on the right "
"to the sub-variables on the left.\n"
"\n"
"Unlike in maths, in computer programming, the equal sign (\"=\") does not "
"mean \"is equal to.\"\n"
"\n"
"Instead, it means \"assign the result of the expression on the right to the "
"variable on the left\". We assign values so often in code that we prefer to "
"reserve the equal sign for that."
msgstr ""
"Обратите внимание как мы используем знак равенства (\"=\"), чтобы присвоить "
"числа справа вложенным переменным слева.\n"
"\n"
"В отличие от математики, в компьютерном программировании знак равенства "
"(\"=\") не означает \"равно\".\n"
"\n"
"Вместо этого он означает \"присвоить результат выражения справа переменной "
"слева\". Мы настолько часто присваиваем значения в коде, что предпочли "
"зарезервировать знак равенства для этого."

#: course/lesson-7-member-variables/lesson.tres:170
msgid "In games, the Y-axis is positive going down"
msgstr "В играх ось Y направлена вниз"

#: course/lesson-7-member-variables/lesson.tres:172
msgid ""
"Note that in games, assuming your character's position starts at (0, 0), the "
"code above moves the entity [code]180[/code] pixels to the right and "
"[code]120[/code] pixels down.\n"
"\n"
"In math, the y-axis is generally positive going up by convention.\n"
"\n"
"The convention is the [i]opposite[/i] in video games and many computer "
"applications: the y-axis is positive going down."
msgstr ""
"Обратите внимание, что в играх, если ваш персонаж находится в позиции (0, "
"0), приведенный выше код переместит его на [code]180[/code] пикселей вправо "
"и на [code]120[/code] пикселей вниз.\n"
"\n"
"В математике, как правило, ось Y направлена вверх, потому что так принято.\n"
"\n"
"В видеоиграх и многих компьютерных приложениях принято [i]обратное[/i]: "
"положительные значения оси Y направлены вниз."

#: course/lesson-7-member-variables/lesson.tres:194
msgid "Why does the Y-axis point downwards?"
msgstr "Почему ось Y направлена вниз?"

#: course/lesson-7-member-variables/lesson.tres:196
msgid ""
"This may be confusing if you only saw the y-axis pointing up in math "
"classes. However, in math, axes go in any direction. They don't even have to "
"be perpendicular.\n"
"\n"
"On the computer, the position (0, 0) happens to correspond to the top-left "
"of your computer screen. It then makes sense for coordinates to be positive "
"when going towards the bottom-right corner.\n"
"\n"
"This leads to another question: why is position zero the top left of the "
"screen? This is due to computer and TV displays history: they would "
"calculate and display pixels starting from the top left corner and moving "
"towards the bottom right corner."
msgstr ""
"Это может сбивать с толку, если вы видели только ось Y, указывающую вверх, "
"на уроках математики. Однако в математике оси могут идти в любом "
"направлении. Они даже не должны быть перпендикулярны.\n"
"\n"
"На компьютере позиция (0, 0) соответствует верхнему левому углу экрана "
"вашего компьютера. Поэтому, становление координат положительными при "
"движении к правому нижнему углу имеет смысл.\n"
"\n"
"Это приводит к другому вопросу: почему нулевая позиция находится в верхнем "
"левом углу экрана? Так сложилось в ходе истории компьютерных и телевизионных "
"дисплеев: они вычисляли и отображали пиксели, начиная с верхнего левого "
"угла, двигаясь к нижнему правому."

#: course/lesson-7-member-variables/lesson.tres:210
msgid ""
"Let's look at one last example before moving on to the practice. The "
"following code makes the character 1.5 times its starting size."
msgstr ""
"Прежде чем перейти к упражнениям, давайте рассмотрим последний пример. "
"Следующий код делает персонажа в 1.5 раза больше его изначального размера."

#: course/lesson-7-member-variables/lesson.tres:228
msgid "How do you access sub-variables?"
msgstr "Как получить доступ ко вложенным переменным?"

#: course/lesson-7-member-variables/lesson.tres:229
msgid ""
"Variables often hold sub-values, like the [code]position[/code] has two sub-"
"variables: [code]x[/code] and [code]y[/code]. How would you access the "
"[code]x[/code], for example?"
msgstr ""
"Переменные часто содержат вложенные значения, например позиция "
"[code]position[/code] имеет две вложенные переменные: [code]x[/code] и "
"[code]y[/code]. Как получить доступ к [code]x[/code], например?"

#: course/lesson-7-member-variables/lesson.tres:231
msgid ""
"To access a sub-variable, you need to write a dot between the parent "
"variable name and the sub-variable name.\n"
"\n"
"For example, to access the [code]x[/code] sub-variable of the "
"[code]position[/code] variable, you'll write [code]position.x[/code]."
msgstr ""
"Чтобы получить доступ ко вложенной переменной, необходимо написать точку "
"между именем родительской переменной и именем вложенной переменной.\n"
"\n"
"Например, чтобы получить доступ ко вложенному значению [code]x[/code] "
"переменной [code]position[/code], необходимо написать [code]position.x[/"
"code]."

#: course/lesson-7-member-variables/lesson.tres:234
#: course/lesson-7-member-variables/lesson.tres:235
msgid "You write a dot (\".\") between the variable and the sub-variable name."
msgstr "Написать точку (\".\") между переменной и именем вложенной переменной."

#: course/lesson-7-member-variables/lesson.tres:234
msgid ""
"You write an arrow (\"->\") between the variable and the sub-variable name."
msgstr ""
"Написать стрелку (\"->\") между переменной и именем вложенной переменной."

#: course/lesson-7-member-variables/lesson.tres:234
msgid ""
"You write a slash (\"/\") between the variable and the sub-variable name."
msgstr ""
"Написать косую черту (\"/\") между переменной и именем вложенной переменной."

#: course/lesson-7-member-variables/lesson.tres:244
msgid ""
"In a future lesson, we'll explain why and how those variables have sub-"
"variables.\n"
"\n"
"For now, just know you can use the dot to access them.\n"
"\n"
"We'll tell you which variables have sub-components and what their names "
"are.\n"
"\n"
"In the next lessons, you'll create your own variables and do operations on "
"them to add or remove [code]score[/code], [code]health[/code], you name it.\n"
"\n"
"For now, let's practice accessing variables."
msgstr ""
"В следующем уроке мы объясним, почему и зачем в этих переменных есть "
"вложенные переменные.\n"
"\n"
"Пока что просто знайте, что вы можете использовать точку для доступа к ним.\n"
"\n"
"Мы расскажем вам, какие переменные имеют вложенные компоненты и как они "
"называются.\n"
"\n"
"В следующих уроках вы создадите свои собственные переменные и будете "
"использовать их в операциях по добавлению или вычитанию [code]score[/code] "
"(очков) и [code]health[/code] (здоровья).\n"
"\n"
"А пока давайте потренируемся получать доступ к переменным."

#: course/lesson-7-member-variables/lesson.tres:260
msgid "Draw a rectangle at a precise position"
msgstr "Нарисуйте прямоугольник в точной позиции"

#: course/lesson-7-member-variables/lesson.tres:261
msgid ""
"Draw a rectangle of 200 by 120 pixels at the X position of 120 pixels and Y "
"position of 100 pixels.\n"
"\n"
"You need to replace the numbers in the code editor to draw the correct "
"rectangle."
msgstr ""
"Нарисуйте прямоугольник размером 200 на 120 пикселей в позиции X — 120 и Y — "
"100 пикселей.\n"
"\n"
"Вам нужно заменить числа в редакторе кода, чтобы нарисовать правильный "
"прямоугольник."

#: course/lesson-7-member-variables/lesson.tres:275
msgid ""
"Use the position member variable and its sub-variables to change the "
"rectangle's position."
msgstr ""
"Используйте свойство position и его внутренние переменные для изменения "
"положения прямоугольника."

#: course/lesson-7-member-variables/lesson.tres:280
msgid "Draw squares at different positions"
msgstr "Нарисуйте квадраты в разных позициях"

#: course/lesson-7-member-variables/lesson.tres:281
msgid ""
"Draw three squares of size 100 by 100 that are 100 pixels apart on the "
"horizontal axis. In other words, there should be a 100-pixel gap between two "
"squares.\n"
"\n"
"You should draw the squares starting at the position (100, 100). This means "
"you should position the first square at 100 on the X axis and 100 on the Y "
"axis.\n"
"\n"
"Remember you need to use the equal sign ([code]=[/code]) to change the value "
"of a variable, like the turtle's position.\n"
"\n"
"Write your code inside the [code]run()[/code] function so the computer can "
"recognize it.\n"
"\n"
"Use the provided [code]draw_rectangle()[/code] function to draw each square."
msgstr ""
"Нарисуйте три квадрата размером 100 на 100, расположив их на расстоянии 100 "
"пикселей друг от друга по горизонтальной оси. Другими словами, между двумя "
"квадратами должен быть промежуток в 100 пикселей.\n"
"\n"
"Вы должны нарисовать квадраты, начиная с позиции (100, 100). Это означает, "
"что первый квадрат должен располагаться в координатах 100 по оси X и 100 по "
"оси Y.\n"
"\n"
"Помните, что для изменения значения переменной, например положения черепахи, "
"нужно использовать знак равенства ([code]=[/code]).\n"
"\n"
"Напишите свой код внутри функции [code]run()[/code], чтобы компьютер мог его "
"распознать.\n"
"\n"
"Используйте предоставленную функцию [code]draw_rectangle()[/code] для "
"рисования каждого квадрата."

#: course/lesson-7-member-variables/lesson.tres:299
msgid ""
"Now you can place and draw one shape, but how about drawing several? In this "
"practice, you'll place three squares side by side to really get the hang of "
"properties."
msgstr ""
"Теперь вы можете разместить и нарисовать одну фигуру, но как насчет "
"рисования нескольких? В этом упражнении вы разместите три квадрата рядом "
"друг с другом, чтобы действительно научиться пользоваться свойствами."

#: course/lesson-7-member-variables/lesson.tres:303
msgid "Introduction to Member Variables"
msgstr "Введение в свойства"
