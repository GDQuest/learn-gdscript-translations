# Translations template for Learn GDScript From Zero.
# Copyright (C) 2022 GDQuest
# This file is distributed under the same license as the Learn GDScript From
# Zero project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Learn GDScript From Zero\n"
"Report-Msgid-Bugs-To: https://github.com/GDQuest/learn-gdscript\n"
"POT-Creation-Date: 2022-03-26 17:50+0100\n"
"PO-Revision-Date: 2023-09-01 23:07+0000\n"
"Last-Translator: gsomgsom <zhelneen@yandex.ru>\n"
"Language-Team: Russian <https://hosted.weblate.org/projects/"
"learn-gdscript-from-zero/lesson-20-looping-over-arrays/ru/>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2;\n"
"X-Generator: Weblate 5.0.1-dev\n"
"Generated-By: Babel 2.9.1\n"

#: course/lesson-20-looping-over-arrays/lesson.tres:14
msgid ""
"We used the [code]range()[/code] function in combination with [code]for[/"
"code] loops."
msgstr ""
"Мы использовали функцию [code]range()[/code] в сочетании с циклами "
"[code]for[/code]."

#: course/lesson-20-looping-over-arrays/lesson.tres:34
msgid ""
"The [code]range()[/code] function produced an array that the [code]for[/"
"code] keyword could loop over.\n"
"\n"
"We can give [code]for[/code] loops [i]any[/i] array, and they will loop "
"over them just the same.\n"
"\n"
"Instead of using the [code]range()[/code] function, we could manually "
"write the numbers and get the same result."
msgstr ""
"Функция [code]range()[/code] создавала массив, элементы которого мы "
"могли перебрать по очереди при помощи ключевого слова [code]for[/code].\n"
"\n"
"Мы можем дать циклам [code]for[/code] [i]любой[/i] массив, и они точно "
"так же будут его перебирать.\n"
"\n"
"Вместо того чтобы использовать функцию [code]range()[/code], мы можем "
"вручную создать массив чисел и получить тот же результат."

#: course/lesson-20-looping-over-arrays/lesson.tres:58
msgid ""
"For each element inside the array, the [code]for[/code] loop extracts "
"it, stores it in the temporary variable named [code]number[/code], and "
"executes the loop's code once.\n"
"\n"
"Inside the loop, you can access the [code]number[/code] variable, which "
"changes on each [i]iteration[/i].\n"
"\n"
"The code works regardless of the array or where you store it. Often, you "
"will store arrays in variables for easy access."
msgstr ""
"Для каждого элемента в массиве, цикл [code]for[/code] извлечёт его, сохранит "
"во временной переменной [code]number[/code] и выполнит код цикла один раз.\n"
"\n"
"Внутри цикла вы имеете доступ к переменной [code]number[/code], значение "
"которой меняется каждую [i]итерацию[/i].\n"
"\n"
"Код работает независимо от состава массива или места его хранения. Часто вы "
"будете хранить массивы в переменных для упрощения их использования."

#: course/lesson-20-looping-over-arrays/lesson.tres:80
msgid "What will this code print?"
msgstr "Что выведет этот код?"

#: course/lesson-20-looping-over-arrays/lesson.tres:81
msgid ""
"[code]var numbers = [0, 1, 2]\n"
"for number in numbers:\n"
"    print(number)\n"
"[/code]"
msgstr ""
"[code]var numbers = [0, 1, 2]\n"
"for number in numbers:\n"
"    print(number)\n"
"[/code]"

#: course/lesson-20-looping-over-arrays/lesson.tres:86
msgid ""
"Compared to previous examples, we store the array in the [code]numbers[/"
"code] variable. Using the [code]numbers[/code] variable in our "
"[code]for[/code] loop allows the computer to access the array of numbers "
"like before.\n"
"\n"
"We have three numbers in the array: [code]0[/code], [code]1[/code], and "
"[code]2[/code].\n"
"\n"
"The loop extracts each of them sequentially and assigns it to the "
"[code]number[/code] temporary variable. As the loop processes each "
"number, the output will print [code]0[/code], then [code]1[/code], then "
"[code]2[/code], each on a separate line."
msgstr ""
"По сравнению с предыдущими примерами, мы храним массив в переменной "
"[code]numbers[/code]. Использование переменной [code]numbers[/code] в "
"цикле [code]for[/code] позволяет компьютеру обращаться к массиву чисел, "
"как и раньше.\n"
"\n"
"В нашем массиве есть три числа: [code]0[/code], [code]1[/code], и "
"[code]2[/code].\n"
"\n"
"Цикл последовательно извлекает каждое из них и присваивает его временной "
"переменной [code]number[/code]. По мере обработки каждого числа, в окне "
"вывода появляются [code]0[/code], затем [code]1[/code], затем [code]2[/"
"code], каждое на отдельной линии."

#: course/lesson-20-looping-over-arrays/lesson.tres:91
#: course/lesson-20-looping-over-arrays/lesson.tres:92
msgid "0, 1, and 2"
msgstr "0, 1, и 2"

#: course/lesson-20-looping-over-arrays/lesson.tres:91
msgid "1, 2, and 3"
msgstr "1, 2, и 3"

#: course/lesson-20-looping-over-arrays/lesson.tres:91
msgid "0, 0, and 0"
msgstr "0, 0, и 0"

#: course/lesson-20-looping-over-arrays/lesson.tres:99
msgid "Making the turtle walk, with a loop"
msgstr "Заставляем черепаху ходить, при помощи цикла"

#: course/lesson-20-looping-over-arrays/lesson.tres:101
msgid ""
"In the previous lesson, you made a turtle walk along a path by writing "
"[code]Vector2[/code] coordinates in an array."
msgstr ""
"В предыдущем уроке вы заставили черепаху двигаться по пути, при помощи "
"написания массива координат типа [code]Vector2[/code]."

#: course/lesson-20-looping-over-arrays/lesson.tres:121
msgid ""
"It's a [code]for[/code] loop that makes the turtle walk along the path.\n"
"\n"
"The loop works like this: for each coordinate in the array, it moves the "
"turtle once to that cell."
msgstr ""
"Именно цикл [code]for[/code] позволяет черепахе двигаться по пути.\n"
"\n"
"Цикл работает так: для каждой координаты в массиве он передвигает "
"черепаху в ячейку, соответствующую этой координате."

#: course/lesson-20-looping-over-arrays/lesson.tres:143
msgid "It's the same principle with unit selection."
msgstr "Тот же принцип использовался при выборе юнитов."

#: course/lesson-20-looping-over-arrays/lesson.tres:163
msgid ""
"For each coordinate in an array named [code]selected_units[/code], we "
"check if there is a unit in that cell. If so, we select it. \n"
"\n"
"In that case, we use an array, a loop, and a condition together."
msgstr ""
"Для каждой координаты в массиве [code]cells[/code], мы проверяем, есть "
"ли в этой ячейке юнит, если да — мы выбираем его.\n"
"\n"
"В этом случае мы используем массив, цикл и условие вместе."

#: course/lesson-20-looping-over-arrays/lesson.tres:185
msgid ""
"The code above uses several features you haven't learned yet:\n"
"\n"
"- In a condition, the [code]in[/code] keyword allows you to check if a "
"value exists [i]in[/i] an array.\n"
"- The array's [code]append()[/code] function appends a new value at the "
"end of the array.\n"
"\n"
"Notice the use of a period after the [code]selected_units[/code] "
"variable, to call the [code]append()[/code] function. It's because this "
"function exists only on arrays.\n"
"\n"
"When functions exist only on a specific value type, you write a dot "
"after the value to call the function on it.\n"
"\n"
"We'll revisit those two features again in the following lessons."
msgstr ""
"В приведённом выше коде есть несколько особенностей, с которыми вы ещё "
"не знакомы:\n"
"\n"
"- В условии, ключевое слово [code]in[/code] (в) позволяет вам проверить, "
"существует ли конкретное значение [i]в[/i] массиве.\n"
"- Функция массива [code]append()[/code] добавляет новое значение в конец "
"массива.\n"
"\n"
"Обратите внимание на использование точки после имени переменной "
"[code]selected_units[/code] для вызова функции [code]append()[/code]. "
"Точка необходима, так как эта функция существует только в массивах.\n"
"\n"
"Когда функция существует только в определённом типе значений, вы должны "
"использовать точку после значения для вызова функции для него\n"
"\n"
"Мы ещё встретимся с этими особенностями в последующих уроках."

#: course/lesson-20-looping-over-arrays/lesson.tres:204
msgid ""
"The beauty of loops is that they work regardless of the size of your "
"arrays. \n"
"\n"
"The code just works whether you have one or ten thousand units to "
"select. It is all accomplished with only a couple lines of code.\n"
"\n"
"That's the power of computer programming.\n"
"\n"
"In the following practices, you will use arrays combined with [code]for[/"
"code] loops to achieve similar results."
msgstr ""
"Циклы прекрасны тем, что они работают независимо от размера ваших "
"массивов.\n"
"\n"
"Код будет работать одинаково при выборе одного или десяти тысяч юнитов. "
"Всё это делается в несколько строчек кода.\n"
"\n"
"В этом и заключается сила компьютерного программирования.\n"
"\n"
"В следующих упражнениях вы будете использовать массивы в сочетании с "
"циклами [code]for[/code] для достижения подобных результатов."

#: course/lesson-20-looping-over-arrays/lesson.tres:218
msgid "Move the robot along the path"
msgstr "Перемещаем робота по пути"

#: course/lesson-20-looping-over-arrays/lesson.tres:219
msgid ""
"Our AI pathfinding algorithm provided a path for the robot to move to "
"the right edge of the grid. Your task is to use a [code]for[/code] loop "
"to make the robot move.\n"
"\n"
"To move the robot, call [i]its[/i] [code]move_to()[/code] function, like "
"so: [code]robot.move_to()[/code].\n"
"\n"
"The [code]move_to()[/code] function only exists on the robot, which is "
"why you need to access it this way."
msgstr ""
"Алгоритм поиска пути нашего ИИ предоставил путь, по которому робот может "
"переместиться в правый угол сетки. Ваша задача — использовать цикл "
"[code]for[/code], чтобы заставить робота двигаться.\n"
"\n"
"Для перемещения робота, вызовите [i]его[/i] функцию [code]move_to()[/"
"code], как в этом примере: [code]robot.move_to()[/code].\n"
"\n"
"Функция [code]move_to()[/code] существует только в роботе, поэтому "
"получить к ней доступ вы можете только таким образом."

#: course/lesson-20-looping-over-arrays/lesson.tres:235
msgid ""
"Our AI pathfinding algorithm is giving us a path to move the robot. Now, "
"you need to make the turtle move along the path."
msgstr ""
"Алгоритм поиска пути нашего ИИ предоставил нам путь по которому должен "
"двигаться робот. Теперь вам нужно заставить робота двигаться по нему."

#: course/lesson-20-looping-over-arrays/lesson.tres:240
msgid "Back to the drawing board"
msgstr "Возвращаемся к доске для рисования"

#: course/lesson-20-looping-over-arrays/lesson.tres:241
msgid ""
"We want to draw many rectangles, something surprisingly common in "
"games.\n"
"\n"
"However, writing this code by hand can get tedious. Instead, you could "
"store the size of your shapes in arrays and use a loop to draw them all "
"in batches.\n"
"\n"
"That's what you'll do in this practice.\n"
"\n"
"Use a [code]for[/code] loop to draw every rectangle in the "
"[code]rectangle_sizes[/code] array with the [code]draw_rectangle()[/"
"code] function.\n"
"\n"
"The rectangles shouldn't overlap or cross each other. To avoid that, "
"you'll need to call the [code]jump()[/code] function."
msgstr ""
"Мы хотим нарисовать много прямоугольников, что на удивление часто "
"встречается в играх.\n"
"\n"
"Однако, писать код вручную было бы утомительно. Вместо этого вы можете "
"записать размер всех фигур в массив и использовать цикл для рисования "
"всех их разом.\n"
"\n"
"Это именно то, что вы будете делать в этом упражнении.\n"
"\n"
"Используйте цикл [code]for[/code] для рисования каждого прямоугольника "
"из массива [code]rectangle_sizes[/code] при помощи функции "
"[code]draw_rectangle()[/code].\n"
"\n"
"Прямоугольники не должны перекрывать или пересекать друг друга. Чтобы "
"избежать этого, вам нужно использовать функцию [code]jump()[/code]."

#: course/lesson-20-looping-over-arrays/lesson.tres:261
msgid ""
"The drawing turtle makes its comeback. Fear not! Armed with loops, "
"you'll make it draw faster than ever before."
msgstr ""
"Рисующая черепаха возвращается. Не бойтесь! Вооружённые циклами, вы "
"сделаете процесс рисования быстрым, как никогда."

#: course/lesson-20-looping-over-arrays/lesson.tres:265
msgid "Looping over arrays"
msgstr "Обход массивов в цикле"
