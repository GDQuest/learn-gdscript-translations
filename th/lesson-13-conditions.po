# Translations template for Learn GDScript From Zero.
# Copyright (C) 2022 GDQuest
# This file is distributed under the same license as the Learn GDScript From
# Zero project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Learn GDScript From Zero\n"
"Report-Msgid-Bugs-To: https://github.com/GDQuest/learn-gdscript\n"
"POT-Creation-Date: 2022-06-12 11:07+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: th\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.1\n"

#: course/lesson-13-conditions/lesson.tres:14
msgid ""
"In previous lessons, we decreased and increased a character's health, but"
" there was no limit to how much health they could have."
msgstr ""

#: course/lesson-13-conditions/lesson.tres:34
msgid ""
"As a result, the player could increase their character's health "
"indefinitely, which we do not want."
msgstr ""

#: course/lesson-13-conditions/lesson.tres:52
msgid "What happens to health when we damage our character?"
msgstr ""

#: course/lesson-13-conditions/lesson.tres:53
msgid ""
"Suppose our character has [code]100[/code] health.\n"
"\n"
"What would the value of health be if we called "
"[code]take_damage(25)[/code] [b]five times[/b]?"
msgstr ""

#: course/lesson-13-conditions/lesson.tres:57
msgid ""
"Calling [code]take_damage(25)[/code] five times would subtract a total of"
" [code]125[/code] from [code]100[/code].\n"
"\n"
"100\n"
"75\n"
"50\n"
"25\n"
"0\n"
"-25"
msgstr ""

#: course/lesson-13-conditions/lesson.tres:65
#: course/lesson-13-conditions/lesson.tres:66
msgid "-25"
msgstr ""

#: course/lesson-13-conditions/lesson.tres:65
msgid "25"
msgstr ""

#: course/lesson-13-conditions/lesson.tres:65
msgid "0"
msgstr ""

#: course/lesson-13-conditions/lesson.tres:75
msgid ""
"We can use conditions to run actions [b]selectively[/b].\n"
"\n"
"Conditions make your code branch into two paths: if the condition is met,"
" the computer will run the corresponding instructions. Otherwise, those "
"instructions will not run at all."
msgstr ""

#: course/lesson-13-conditions/lesson.tres:87
msgid ""
"Video games and other computer programs are full of conditions. For "
"example, game input largely relies on conditions: [i]if[/i] the player "
"presses the button on a gamepad, the character jumps."
msgstr ""

#: course/lesson-13-conditions/lesson.tres:107
msgid ""
"When the computer checks a condition, this is called [b]to evaluate[/b] a"
" condition. All conditions [b]evaluate[/b] to either [code]true[/code] or"
" [code]false[/code].\n"
"\n"
"Either the player is pressing the button, or not. Either the character is"
" touching an enemy, or not. \n"
"\n"
"In our case, [i]if[/i] the health goes over a maximum value, we want to "
"reset it to the maximum.\n"
"\n"
"To define a condition, we use the [code]if[/code] keyword. We write a "
"line starting with [code]if[/code], type the condition to evaluate, and "
"end the line with a colon."
msgstr ""

#: course/lesson-13-conditions/lesson.tres:133
msgid ""
"Notice the [code]>[/code] comparison sign. We read this symbol as "
"\"greater than\". \n"
"\n"
"We've seen how function definitions use a colon at the end of the first "
"line and nest content inside.\n"
"\n"
"In GDScript, this syntax is a recurring pattern for all code blocks.\n"
"\n"
"The computer knows which instructions belong to the condition because "
"they are indented."
msgstr ""

#: course/lesson-13-conditions/lesson.tres:157
msgid "Comparisons"
msgstr ""

#: course/lesson-13-conditions/lesson.tres:159
msgid ""
"In the above example, we used the [code]>[/code] syntax to mean \"greater"
" than\".\n"
"\n"
"We can compare numbers in other ways too.\n"
"\n"
"[code]>[/code] means \"greater than\"\n"
"[code]<[/code] means \"less than\"\n"
"[code]==[/code] means \"equal to\"\n"
"[code]!=[/code] means \"not equal to\"\n"
"\n"
"Here's how we might use these in [code]if[/code] statements.\n"
msgstr ""

#: course/lesson-13-conditions/lesson.tres:187
msgid "Which of these statements are true?"
msgstr ""

#: course/lesson-13-conditions/lesson.tres:190
msgid ""
"The comparison [code]3 > 1[/code] means \"three is greater than one\" "
"which is [b]true[/b].\n"
"The comparison [code]2 < 3[/code] means \"two is less than three\" which "
"is [b]true[/b].\n"
"The comparison [code]1 != 3[/code] means \"one is not equal to three\" "
"which is [b]true[/b].\n"
"\n"
"The comparison [code]2 == 1[/code] means \"two is equal to one\" which is"
" [b]false[/b].\n"
"The comparison [code]3 < 1[/code] means \"three is less than one\" which "
"is [b]false[/b]."
msgstr ""

#: course/lesson-13-conditions/lesson.tres:196
#: course/lesson-13-conditions/lesson.tres:197
msgid "3 > 1"
msgstr ""

#: course/lesson-13-conditions/lesson.tres:196
msgid "2 == 1"
msgstr ""

#: course/lesson-13-conditions/lesson.tres:196
#: course/lesson-13-conditions/lesson.tres:197
msgid "2 < 3"
msgstr ""

#: course/lesson-13-conditions/lesson.tres:196
#: course/lesson-13-conditions/lesson.tres:197
msgid "1 != 3"
msgstr ""

#: course/lesson-13-conditions/lesson.tres:196
msgid "3 < 1"
msgstr ""

#: course/lesson-13-conditions/lesson.tres:204
msgid "Or else..."
msgstr ""

#: course/lesson-13-conditions/lesson.tres:206
msgid ""
"The [code]if[/code] keyword comes with a complementary [code]else[/code] "
"keyword.\n"
"\n"
"You can write an [code]else[/code] block after an [code]if[/code] block, "
"like so."
msgstr ""

#: course/lesson-13-conditions/lesson.tres:228
msgid ""
"The [code]else[/code] block will run whenever the condition above it "
"isn't met."
msgstr ""

#: course/lesson-13-conditions/lesson.tres:238
msgid ""
"In the following practices, we'll use conditions and improve the way our "
"character's health changes so it has limits."
msgstr ""

#: course/lesson-13-conditions/lesson.tres:246
msgid "Using Comparisons"
msgstr ""

#: course/lesson-13-conditions/lesson.tres:247
msgid ""
"This series of [code]if[/code] statements is all wrong. Change the "
"comparisons so each comparison matches the instruction below it.\n"
"\n"
"Keep the values and statements as they are; only change the comparison "
"signs.\n"
"\n"
"As a reminder, the comparison signs are:\n"
"[code]\n"
"> greater than\n"
"< less than\n"
"== equal to\n"
"!= not equal to\n"
"[/code]\n"
"\n"
"The line [code]health < 5:[/code] means \"health is less than 5\". \n"
"\n"
"Because [code]health = 100[/code], this is false so [code]print(\"health "
"is greater than five.\")[/code] won't run."
msgstr ""

#: course/lesson-13-conditions/lesson.tres:283
msgid ""
"Comparing values allows us to make decisions in code. But there's "
"something wrong with these statements.."
msgstr ""

#: course/lesson-13-conditions/lesson.tres:288
msgid "Limiting Healing"
msgstr ""

#: course/lesson-13-conditions/lesson.tres:289
msgid ""
"We have a heal function that adds an amount to the character's health.\n"
"\n"
"Add to the function so the character's health is never greater than "
"[code]80[/code]."
msgstr ""

#: course/lesson-13-conditions/lesson.tres:301
msgid ""
"As much as we might like, we don't want our robot to have too much "
"health. Limit how much healing the robot can take."
msgstr ""

#: course/lesson-13-conditions/lesson.tres:306
msgid "Preventing Health from Going Below Zero"
msgstr ""

#: course/lesson-13-conditions/lesson.tres:307
msgid ""
"When the robot takes damage, its health can be negative.\n"
"\n"
"We might want to display the health number on screen, like in Japanese "
"RPGs.\n"
"\n"
"We don't want negative numbers. We want to stop at zero instead.\n"
"\n"
"Calling the function should reduce [code]health[/code] by "
"[code]amount[/code].\n"
"\n"
"If [code]health[/code] goes below [code]0[/code], set it to "
"[code]0[/code] again."
msgstr ""

#: course/lesson-13-conditions/lesson.tres:325
msgid ""
"Having a negative health value doesn't make a lot of sense. Make sure the"
" robot's health can't go below zero."
msgstr ""

#: course/lesson-13-conditions/lesson.tres:329
msgid "Conditions"
msgstr ""
