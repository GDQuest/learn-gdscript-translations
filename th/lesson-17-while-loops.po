# Translations template for Learn GDScript From Zero.
# Copyright (C) 2022 GDQuest
# This file is distributed under the same license as the Learn GDScript From
# Zero project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Learn GDScript From Zero\n"
"Report-Msgid-Bugs-To: https://github.com/GDQuest/learn-gdscript\n"
"POT-Creation-Date: 2022-06-12 11:07+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: th\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.1\n"

#: course/lesson-17-while-loops/lesson.tres:14
msgid ""
"You've seen that you can use functions to [i]reuse[/i] code. In this "
"lesson, you'll learn about [b]loops[/b]. Loops help you [i]repeat[/i] "
"code.\n"
"\n"
"To illustrate how loops work, let's take a game board split into a grid.\n"
"\n"
"Our robot can move to neighboring cells by changing a "
"[code]Vector2[/code] variable named [code]cell[/code].\n"
"\n"
"When we increase [code]cell.x[/code], the robot moves to the right.\n"
"\n"
"Note that we delay the robot's movement in the app to help you visualize "
"how it moves. The following code would normally move the robot instantly."
msgstr ""

#: course/lesson-17-while-loops/lesson.tres:42
msgid "We can move diagonally by adding a [code]Vector2[/code] directly."
msgstr ""

#: course/lesson-17-while-loops/lesson.tres:62
msgid ""
"The above code works for a pre-defined board with a size of "
"[code]Vector2(3, 3)[/code], but the [code]move_to_end()[/code] function "
"wouldn't work if the size of the board was different. \n"
"\n"
"The robot would either stop before the end or go too far.\n"
"\n"
"To implement a general solution for all board sizes, we can repeat the "
"robot's movement until it gets to the end.\n"
"\n"
"For code that repeats, we can use [i]loops[/i]."
msgstr ""

#: course/lesson-17-while-loops/lesson.tres:76
msgid "Using while loops to repeat code"
msgstr ""

#: course/lesson-17-while-loops/lesson.tres:78
msgid ""
"You can use a [code]while[/code] loop to make the computer repeat a block"
" of code until you meet a specific condition or decide to break from the "
"loop.\n"
"\n"
"Here's how we use a [code]while[/code] loop."
msgstr ""

#: course/lesson-17-while-loops/lesson.tres:100
msgid ""
"We use the variable [code]number[/code] to keep track of how many loops "
"the [code]while[/code] loop completes.\n"
"\n"
"Each time we go through the [code]while[/code] loop, we add "
"[code]1[/code] to [code]number[/code].\n"
"\n"
"The [code]while[/code] loop keeps running for as long as the condition is"
" true. In this case, it keeps running while [code]number[/code] is less "
"than [code]4[/code].\n"
"\n"
"You can see that the following code is executed four times in the console."
msgstr ""

#: course/lesson-17-while-loops/lesson.tres:126
msgid ""
"Let's apply this to our [code]move_to_end()[/code] function.\n"
"\n"
"This time, we compare the number of loops to the board's width. We go "
"through the loop until we reach the width of the board.\n"
"\n"
"Note that we move one less than the board's width because the robot is "
"already on the first cell."
msgstr ""

#: course/lesson-17-while-loops/lesson.tres:158
msgid "While loops can cause issues"
msgstr ""

#: course/lesson-17-while-loops/lesson.tres:160
msgid ""
"If you're not careful, your [code]while[/code] loop can run infinitely. "
"In that case, the application will freeze.\n"
"\n"
"Take a look at this code example."
msgstr ""

#: course/lesson-17-while-loops/lesson.tres:180
msgid "What would happen if the computer tried to run the code above?"
msgstr ""

#: course/lesson-17-while-loops/lesson.tres:183
msgid ""
"Because we don't increment [code]number[/code] within the "
"[code]while[/code] loop, it always stays at [code]0[/code].\n"
"\n"
"As a result, the number is always lower than [code]10[/code], so we never"
" break out of the loop.\n"
"\n"
"Since there's no way to exit the [code]while[/code] loop, the computer "
"will attempt to draw squares infinitely, which will freeze the program.\n"
"\n"
"When programs stop responding on your computer, it's often due to an "
"infinite loop!"
msgstr ""

#: course/lesson-17-while-loops/lesson.tres:190
#: course/lesson-17-while-loops/lesson.tres:191
msgid "It would draw squares infinitely until the program is terminated"
msgstr ""

#: course/lesson-17-while-loops/lesson.tres:190
msgid "It would draw 10 squares"
msgstr ""

#: course/lesson-17-while-loops/lesson.tres:190
msgid "It would draw 20 squares"
msgstr ""

#: course/lesson-17-while-loops/lesson.tres:198
msgid "When to use while loops"
msgstr ""

#: course/lesson-17-while-loops/lesson.tres:200
msgid ""
"At first, you will not need [code]while[/code] loops often. Even the code"
" we show here has more efficient alternatives.\n"
"\n"
"Also, there's a safer kind of loop, [code]for[/code] loops, which we'll "
"look at in the next lesson.\n"
"\n"
"Yet, [code]while[/code] loops have important intermediate to advanced-"
"level uses, so you at least need to know they exist and how to use them."
"\n"
"\n"
"We use [code]while[/code] loops every time we need to loop an unknown "
"number of times.\n"
"\n"
"For example, games run in a loop that typically generates sixty images "
"per second until the user closes the game. This is possible thanks to "
"[code]while[/code] loops.\n"
"\n"
"There are other good uses for [code]while[/code] loops:\n"
"\n"
"- Reading and processing a file, like a text document, line by line.\n"
"- Processing a constant stream of data, like someone recording audio with"
" a microphone.\n"
"- Reading code and converting it into instructions the computer "
"understands.\n"
"- Various intermediate to advanced-level algorithms, like finding paths "
"around a map for AI."
msgstr ""

#: course/lesson-17-while-loops/lesson.tres:225
msgid ""
"Let's practice some [code]while[/code] loops, as they're useful to know. "
"It's also an excellent opportunity to practice 2D vectors.\n"
"\n"
"Then, we'll move on to the safer [code]for[/code] loops in the following "
"lesson."
msgstr ""

#: course/lesson-17-while-loops/lesson.tres:235
msgid "Moving to the end of a board"
msgstr ""

#: course/lesson-17-while-loops/lesson.tres:236
msgid ""
"Our robot has decided to stand at the top of the board.\n"
"\n"
"Complete the [code]move_to_bottom()[/code] function so the robot moves to"
" the bottom of the board.\n"
"\n"
"The board size is determined by the [code]Vector2[/code] "
"[code]board_size[/code].\n"
"\n"
"The robot's current cell is [code]Vector2(2, 0)[/code]. \n"
"\n"
"Make sure to use a [code]while[/code] loop so the function works for any "
"board size."
msgstr ""

#: course/lesson-17-while-loops/lesson.tres:254
msgid ""
"Use a while loop to have our robot move from the top of the board to the "
"bottom."
msgstr ""

#: course/lesson-17-while-loops/lesson.tres:258
msgid "Introduction to While Loops"
msgstr ""
