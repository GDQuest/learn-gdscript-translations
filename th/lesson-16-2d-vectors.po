# Translations template for Learn GDScript From Zero.
# Copyright (C) 2022 GDQuest
# This file is distributed under the same license as the Learn GDScript From
# Zero project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Learn GDScript From Zero\n"
"Report-Msgid-Bugs-To: https://github.com/GDQuest/learn-gdscript\n"
"POT-Creation-Date: 2022-06-12 11:07+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: th\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.1\n"

#: course/lesson-16-2d-vectors/lesson.tres:14
msgid ""
"Suppose we want to increase the size of the robot when it levels up.\n"
"\n"
"As you may recall, we do this by using the following code."
msgstr ""

#: course/lesson-16-2d-vectors/lesson.tres:36
msgid ""
"As we talked about in lesson 7, the [code]scale[/code] variable has two "
"sub-variables to it: [code]x[/code] and [code]y[/code].\n"
"\n"
"This is because [code]scale[/code] is a [code]Vector2[/code], which "
"stands for two-dimensional vector. A [code]Vector2[/code] represents 2D "
"coordinates."
msgstr ""

#: course/lesson-16-2d-vectors/lesson.tres:46
msgid "What are vectors?"
msgstr ""

#: course/lesson-16-2d-vectors/lesson.tres:48
msgid ""
"A vector, in physics, is a quantity with a magnitude and a direction. For"
" example, a force applied to some object, the velocity (speed and "
"direction) of a character, and so on.\n"
"\n"
"We often represent this quantity with an arrow.\n"
"\n"
"In Godot, 2D vectors are a common value type named [code]Vector2[/code],\n"
"\n"
"Unlike plain numbers, they store [i]two[/i] decimal numbers: one for the "
"X coordinate and one for the Y coordinate."
msgstr ""

#: course/lesson-16-2d-vectors/lesson.tres:72
msgid ""
"So far, you've come across two variables in the course which are vectors."
" Which are they?"
msgstr ""

#: course/lesson-16-2d-vectors/lesson.tres:75
msgid ""
"Both [code]scale[/code] and [code]position[/code] have [code]x[/code] and"
" [code]y[/code] sub-variables, so Godot uses a [code]Vector2[/code] to "
"store their values."
msgstr ""

#: course/lesson-16-2d-vectors/lesson.tres:76
#: course/lesson-16-2d-vectors/lesson.tres:77
msgid "scale"
msgstr ""

#: course/lesson-16-2d-vectors/lesson.tres:76
#: course/lesson-16-2d-vectors/lesson.tres:77
msgid "position"
msgstr ""

#: course/lesson-16-2d-vectors/lesson.tres:76
msgid "health"
msgstr ""

#: course/lesson-16-2d-vectors/lesson.tres:76
msgid "speed"
msgstr ""

#: course/lesson-16-2d-vectors/lesson.tres:84
msgid "Vectors are great for games"
msgstr ""

#: course/lesson-16-2d-vectors/lesson.tres:86
msgid ""
"Vectors are [i]essential[/i] in video games.\n"
"\n"
"They allow you to represent a character's movement speed and direction, "
"calculate the distance to a target, and more, with little code.\n"
"\n"
"Take this turtle AI below. You've probably seen games where enemies move "
"like this.\n"
"\n"
"This is done with just seven lines of pure vector calculation code.\n"
"\n"
"The code is a bit too difficult for now, so we'll spare you the details, "
"but this turtle gives you a glimpse of what 2D vectors can do for you and"
" your game projects."
msgstr ""

#: course/lesson-16-2d-vectors/lesson.tres:114
msgid ""
"We scale the robot again, this time by adding to it directly using a "
"[code]Vector2[/code]. The following code has the same effect as the "
"previous example."
msgstr ""

#: course/lesson-16-2d-vectors/lesson.tres:134
msgid ""
"Notice how we use parentheses and two arguments inside parentheses, just "
"like other function calls.\n"
"\n"
"We call this a [i]constructor function call[/i]. You can think of it as a"
" special kind of function that creates a particular type of value.\n"
"\n"
"The code [code]Vector2(0.2, 0.2)[/code] constructs a new "
"[code]Vector2[/code] value with its [code]x[/code] set to "
"[code]0.2[/code] and its [code]y[/code] set to [code]0.2[/code], "
"respectively."
msgstr ""

#: course/lesson-16-2d-vectors/lesson.tres:146
msgid "Using vectors to change the position"
msgstr ""

#: course/lesson-16-2d-vectors/lesson.tres:148
msgid ""
"We can add and subtract vectors to [code]position[/code] because it's a "
"vector. If we wanted to move our robot to a new relative position, we "
"would add a [code]Vector2[/code] to its [code]position[/code]."
msgstr ""

#: course/lesson-16-2d-vectors/lesson.tres:166
msgid "How would you move the robot 50 pixels to the left?"
msgstr ""

#: course/lesson-16-2d-vectors/lesson.tres:169
msgid ""
"[code]position -= Vector2(50, 0)[/code] subtracts [code]50[/code] to the "
"sub-variable [code]x[/code], and [code]0[/code] to [code]y[/code].\n"
"\n"
"[code]position.x -= Vector(50, 0)[/code] tries to subtract a 2D vector to"
" the sub-variable [code]x[/code], which is a decimal number. The value "
"types are incompatible. If you try to do this, you will get an error."
msgstr ""

#: course/lesson-16-2d-vectors/lesson.tres:172
#: course/lesson-16-2d-vectors/lesson.tres:173
msgid "position -= Vector2(50, 0)"
msgstr ""

#: course/lesson-16-2d-vectors/lesson.tres:172
msgid "position.x -= Vector(50, 0)"
msgstr ""

#: course/lesson-16-2d-vectors/lesson.tres:182
msgid ""
"In the next few practices, you'll use vectors to change scale and "
"position values."
msgstr ""

#: course/lesson-16-2d-vectors/lesson.tres:190
msgid "Increasing scale using vectors"
msgstr ""

#: course/lesson-16-2d-vectors/lesson.tres:191
msgid ""
"Add a line of code to the [code]level_up()[/code] function to increase "
"the [code]scale[/code] of the robot by [code]Vector2(0.2, 0.2)[/code] "
"every time it levels up."
msgstr ""

#: course/lesson-16-2d-vectors/lesson.tres:202
msgid ""
"To visually show our robot has gained in strength, let's increase its "
"size every time it levels up. Nothing could go wrong!"
msgstr ""

#: course/lesson-16-2d-vectors/lesson.tres:207
msgid "Resetting size and position using vectors"
msgstr ""

#: course/lesson-16-2d-vectors/lesson.tres:208
msgid ""
"The robot's level has increased a lot, and so has its size!\n"
"\n"
"Let's fix this by resetting the robot's [code]scale[/code] and "
"[code]position[/code] values.\n"
"\n"
"Create a function named [code]reset_robot()[/code] that sets the "
"[code]scale[/code] and [code]position[/code] of the robot.\n"
"\n"
"The [code]x[/code] and [code]y[/code] sub-variables of the robot's "
"[code]scale[/code] need to be [code]1.0[/code].\n"
"\n"
"The robot's [code]position[/code] needs to be [code]Vector2(0, 0)[/code]."
"\n"
"\n"
"As in the previous practice, make sure to use vectors when dealing with "
"scale and position."
msgstr ""

#: course/lesson-16-2d-vectors/lesson.tres:227
msgid ""
"Perhaps increasing the scale every level was a bad idea! Let's restore "
"the robot to the correct size."
msgstr ""

#: course/lesson-16-2d-vectors/lesson.tres:231
msgid "2D Vectors"
msgstr ""
