# Translations template for Learn GDScript From Zero.
# Copyright (C) 2022 GDQuest
# This file is distributed under the same license as the Learn GDScript From
# Zero project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Learn GDScript From Zero\n"
"Report-Msgid-Bugs-To: https://github.com/GDQuest/learn-gdscript\n"
"POT-Creation-Date: 2022-06-12 11:07+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: th\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.1\n"

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:14
msgid ""
"As programmers, we rely on a lot of code created by others before us.\n"
"\n"
"Every programming language comes with a wealth of features created by "
"other programmers to save you time.\n"
"\n"
"We call a bundle of code created by fellow developers a [i]library[/i].\n"
"\n"
"It's a bunch of code sitting there, waiting for you to use it.\n"
"\n"
"Game engines like Godot bundle many libraries together. They provide a "
"massive toolset to save you time when making games."
msgstr ""

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:30
msgid "You'll always use a lot of existing code"
msgstr ""

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:32
msgid ""
"When coding, you always use a lot of code from developers who came before"
" you.\n"
"\n"
"In a moment, you'll write your first code. You'll use [i]functions[/i] "
"created by the Godot developers.\n"
"\n"
"A function is a list of instructions with an exact name. We can tell the "
"computer to execute all the instructions in sequence with that name."
msgstr ""

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:44
msgid "Calling functions"
msgstr ""

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:46
msgid ""
"When you tell the computer to execute a function, we say you [i]call[/i] "
"the function.\n"
"\n"
"To call a function, you write its [i]exact[/i] name followed by an open "
"and closed parenthesis. To call the function named \"show\", you would "
"write [code]show()[/code]."
msgstr ""

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:58
msgid ""
"In Godot, calling [code]show()[/code] makes something visible, like a "
"character or item. The complementary [code]hide()[/code] function hides "
"the entity.\n"
"\n"
"Once an entity is visible, calling [code]show()[/code] again doesn't have"
" any effect.\n"
"\n"
"Similarly, once you hide something, calling [code]hide()[/code] again "
"doesn't change anything.\n"
"\n"
"[i]Click the Run button on any example below to execute the code "
"listing.[/i]"
msgstr ""

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:84
msgid ""
"In the code listing above, we write the function call [code]hide()[/code]"
" in a new function named [code]run()[/code] to execute the code. Creating"
" a new function is necessary to execute instructions in GDScript."
msgstr ""

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:92
msgid "Can you tell me more about that \"run()\" function?"
msgstr ""

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:94
msgid ""
"In GDScript, unlike in some other languages, we must write our code "
"inside of custom functions.\n"
"\n"
"You'll learn what functions are and how they work in great detail in the "
"course, but here's a quick look at them if you're curious.\n"
"\n"
"A function is a bundle of code you can execute anytime. It's a named list"
" of instructions.\n"
"\n"
"To define a function, you need to write the [code]func[/code] keyword, "
"the function's name, parentheses, and a colon: [code]func run():[/code] "
"defines a function named [code]run()[/code].\n"
"\n"
"You then go to the next line to write the function's body. That's the "
"instructions of the function.\n"
"\n"
"Notice how each instruction starts with a leading [code]Tab[/code] "
"character. The computer uses that to know which lines are part of the "
"function.\n"
"\n"
"Throughout the course, you'll see many functions called "
"[code]run()[/code].\n"
"\n"
"Those are functions we created to give you interactive examples."
msgstr ""

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:116
msgid "Function arguments"
msgstr ""

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:118
msgid ""
"We use parentheses to call functions because you can give the function "
"[i]arguments[/i] inside the parentheses when calling it.\n"
"\n"
"Here's a [i]sprite[/i] standing straight. If we call the "
"[code]rotate(0.3)[/code] function, the character [i]sprite[/i] turns by "
"0.3 units."
msgstr ""

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:140
msgid ""
"The [code]0.3[/code] part between the parentheses is the function's "
"[i]argument[/i].\n"
"\n"
"Arguments are values (numbers, bits of text, and more) that change how "
"the function behaves.\n"
"\n"
"Arguments let you fine-tune the effect of the function call. They can be "
"optional at times, but functions often require arguments in order to "
"work.\n"
"\n"
"For example, calling [code]rotate()[/code] without any argument would "
"result in an error. Without an argument, Godot doesn't know by [i]how "
"much[/i] you intend to rotate the [i]sprite[/i].\n"
"\n"
"Don't worry about memorizing what arguments each function requires or "
"accepts! As a programmer, the documentation will always be close by for "
"you to refer to.\n"
"\n"
"Finally, notice how we use a dot in the number [code]0.3[/code] above: "
"you need to use a dot like this to represent decimal numbers. You can't "
"use commas as they have a different purpose in code."
msgstr ""

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:158
msgid "What are radians?"
msgstr ""

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:160
msgid ""
"The value of [code]0.3[/code] is an angle in [i]radians[/i]. In daily "
"life, we're used to measuring angles in degrees. The radian is another "
"scale commonly used in video games and math.\n"
"\n"
"You can convert radians into degrees by multiplying them by 180 and "
"dividing them by PI:\n"
"\n"
"[code]degrees = radians * 180 / PI[/code]\n"
"\n"
"An angle of [code]PI[/code] radians corresponds to [code]180[/code] "
"degrees. And [code]2 * PI[/code] is a full turn: [code]360[/code] "
"degrees.\n"
"\n"
"[b]How do radians work exactly?[/b]\n"
"\n"
"Radians are a way to measure angles based on the radius of a circle.\n"
"\n"
"To get the angle in radians, you take the circle's radius and wrap it "
"around the circle. That angle is [code]1[/code] radian because you are "
"wrapping the radius [code]1[/code] time around the circle.\n"
"\n"
"Because the perimeter of a circle is [code]2 * PI * radius[/code], a full"
" turn (360Â°) corresponds to [code]2 * PI[/code] radians: you need to wrap"
" the radius of a circle [code]2 * PI[/code] times around the circle to "
"make a full circle."
msgstr ""

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:182
msgid "What does the code below do?"
msgstr ""

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:183
msgid "[code]show()[/code]"
msgstr ""

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:185
msgid ""
"Both answers were right! Technically, the code calls the "
"[code]show()[/code] function. And doing so makes the game entity visible."
msgstr ""

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:186
#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:187
msgid "It calls the function named \"show.\""
msgstr ""

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:186
#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:187
msgid "It makes the entity (like a game character or a sprite) visible."
msgstr ""

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:196
msgid ""
"Another example: With the [code]move_local_x()[/code] function, you can "
"move the character to its left and right. The function takes one "
"argument: a number of pixels to offset the entity.\n"
"\n"
"The complementary function [code]move_local_y()[/code] makes the "
"[i]sprite[/i] move up and down.\n"
"\n"
"This is one way to move a character in a game, although we'll see more "
"powerful ways to do this later."
msgstr ""

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:218
msgid "Why move_local_y(20) moves the character down"
msgstr ""

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:220
msgid ""
"With positive values ([code]20[/code]), the code above moves the robot to"
" the right and down.\n"
"\n"
"This is probably different than what you studied at school: in math "
"classes, the horizontal axis points to the right, like here, but the "
"vertical axis points up.\n"
"\n"
"In video games, and generally in 2D computer graphics, the vertical axis "
"points down instead. So whenever you move something on the Y-axis with a "
"positive value, it'll move [i]down[/i]."
msgstr ""

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:232
msgid "How do you call a function?"
msgstr ""

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:233
msgid "What is the syntax you use to call a function in general?"
msgstr ""

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:235
msgid ""
"To call a function, you need to write its exact name followed by an "
"opening and a closing parenthesis.\n"
"\n"
"If the function requires one or more [i]arguments[/i], you add them "
"inside the parentheses. Whether you need to do that or not depends on the"
" function."
msgstr ""

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:238
#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:239
msgid "You write its name followed by an opening and a closing parenthesis."
msgstr ""

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:238
msgid "You write its name followed by a colon."
msgstr ""

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:238
msgid ""
"You write a value, like a number, followed by an opening and a closing "
"parenthesis."
msgstr ""

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:246
msgid "Make The Character Visible"
msgstr ""

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:247
msgid ""
"Our robot character's invisible! Call the [code]show()[/code] function to"
" make it appear.\n"
"\n"
"Please call [code]show()[/code] inside the [code]run()[/code] function, "
"on line [code]2[/code], and keep the [code]Tab[/code] character at the "
"start of the line. The computer needs that to understand your code."
msgstr ""

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:259
msgid "The robot's invisible! Call a function to bring it back."
msgstr ""

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:264
msgid "Make the Robot Upright"
msgstr ""

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:265
msgid ""
"The robot was turned by [code]-0.5[/code] radians. You need to make it "
"upright by calling the [code]rotate()[/code] function.\n"
"\n"
"Please call [code]rotate()[/code] inside the [code]run()[/code] function,"
" on line [code]2[/code], and keep the [code]Tab[/code] character at the "
"start of the line. The computer needs that to understand your code."
msgstr ""

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:277
msgid "The robot is turned sideways. Help it straighten up with a function call."
msgstr ""

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:281
msgid "We Stand on the Shoulders of Giants"
msgstr ""
