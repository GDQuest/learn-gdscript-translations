# Translations template for Learn GDScript From Zero.
# Copyright (C) 2022 GDQuest
# This file is distributed under the same license as the Learn GDScript From
# Zero project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Learn GDScript From Zero\n"
"Report-Msgid-Bugs-To: https://github.com/GDQuest/learn-gdscript\n"
"POT-Creation-Date: 2023-10-06 07:34+0200\n"
"PO-Revision-Date: 2023-06-30 12:49+0000\n"
"Last-Translator: Deolindo <deolindojvn@gmail.com>\n"
"Language-Team: Portuguese (Brazil) <https://hosted.weblate.org/projects/"
"learn-gdscript-from-zero/lesson-4-drawing-a-rectangle/pt_BR/>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n > 1;\n"
"X-Generator: Weblate 5.0-dev\n"
"Generated-By: Babel 2.9.1\n"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:14
msgid ""
"We'll use code created by others like we did in the previous lesson. This "
"time, we'll solve a more complicated problem: drawing shapes."
msgstr ""
"Nós vamos usar códigos feitos por outros programadores assim como fizemos na "
"lição anterior. Dessa vez, vamos resolver um problema mais complicado: "
"desenhar formas."

#: course/lesson-4-drawing-a-rectangle/lesson.tres:22
msgid "Meet the turtle"
msgstr "Conheça a tartaruga"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:24
msgid ""
"We present you: the turtle! We created the turtle to teach you how to call "
"functions."
msgstr ""
"Nós apresentamos a você: a tartaruga! Nós criamos a tartaruga para te "
"ensinar como chamar funções."

#: course/lesson-4-drawing-a-rectangle/lesson.tres:44
msgid ""
"The turtle is a little machine that moves forward, turns, and draws lines "
"along its path.\n"
"\n"
"To make it draw, you give it a list of instructions: on each code line, you "
"call one specific function.\n"
"\n"
"We prepared several functions for you:\n"
"\n"
"- [code]move_forward(pixels)[/code] makes the turtle move forward over a "
"given distance in [i]pixels[/i].  \n"
"- [code]turn_right(degrees)[/code] makes the turtle turn clockwise by a "
"precise amount of [i]degrees[/i].\n"
"- [code]turn_left(degrees)[/code] works the same as [code]turn_right(degrees)"
"[/code], except the turtle turns counter-clockwise.\n"
"\n"
"You'll use these functions the same way you used [code]rotate()[/code] "
"before.\n"
"\n"
"The turtle draws a white line as it moves. We'll use this line to draw "
"shapes.\n"
"\n"
"For example, to move the turtle 200 pixels, you would write "
"[code]move_forward(200)[/code]."
msgstr ""
"A tartaruga é uma pequena máquina se move para frente, gira e desenha uma "
"linha ao longo do seu caminho.\n"
"\n"
"Para fazê-la desenhar, você deve dar a ela uma lista de instruções: em cada "
"linha de código, você chama uma função específica.\n"
"\n"
"Nós preparamos várias funções para você:\n"
"\n"
"- [code]move_forward(pixels)[/code] faz com que a tartaruga se mova para "
"frente por uma determinada distancia em [i]pixels[/i].  \n"
"- [code]turn_right(degrees)[/code] faz com que a tartaruga gire em sentido "
"horário (para a direita) por uma determinada quantia em [i]graus[/i].\n"
"- [code]turn_left(degrees)[/code] funciona igual a função "
"[code]turn_right(degrees)[/code], exceto que dessa vez ela gira em sentido "
"anti-horário (para a esquerda).\n"
"\n"
"Você vai usar essas funções da mesma forma que você usou a função "
"[code]rotate()[/code] anteriormente.\n"
"\n"
"A tartaruga irá desenhar uma linha branca enquanto se move. Vamos usar essa "
"linha para desenhar formas.\n"
"\n"
"Por exemplo, para mover a tartaruga em 200 pixels, você deve escrever "
"[code]move_forward(200)[/code]."

#: course/lesson-4-drawing-a-rectangle/lesson.tres:76
msgid "Turning left and right"
msgstr ""

#: course/lesson-4-drawing-a-rectangle/lesson.tres:78
msgid ""
"The functions [code]turn_left()[/code] and [code]turn_right()[/code] work "
"the same.\n"
"\n"
"To turn 45 degrees to the right, you would write [code]turn_right(45)[/"
"code].\n"
"\n"
"If we call [code]turn_right(45)[/code], the turtle turns 45 degrees to the "
"right before moving on to the next instruction."
msgstr ""
"As funções [code]turn_lef()[/code] e [code]turn_right()[/code] funcionam da "
"mesma forma.\n"
"\n"
"Para girar 45 graus para a direita, você deve escrever [code]turn_right(45)[/"
"code].\n"
"\n"
"Se chamarmos [code]turn_right(45)[/code], a tartaruga vai girar 45 graus "
"para a direita antes do código passar para a próxima instrução."

#: course/lesson-4-drawing-a-rectangle/lesson.tres:102
msgid ""
"Using these instructions, we can make any two-dimensional shape we like!\n"
"\n"
"Try to understand the example below. \n"
"\n"
"In the next practice, you'll use the functions we saw above to first draw a "
"corner, then a rectangle like this one."
msgstr ""
"Usando essas instruções, podemos fazer qualquer forma que seja bidimensional "
"que quisermos.\n"
"\n"
"Tente entender o exemplo abaixo.\n"
"\n"
"Na próxima seção de prática, você vai usar as funções que vimos acima para, "
"primeiro, desenhar um ângulo de 90 graus e depois uma retângulo como esse."

#: course/lesson-4-drawing-a-rectangle/lesson.tres:124
msgid "In the function call below, which part is the argument?"
msgstr "Na chamada de função abaixo, qual parte é o argumento?"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:125
msgid "[code]move_forward(30)[/code]"
msgstr "[code]move_forward(30)[/code]"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:127
msgid ""
"A function's arguments are all the values inside the parentheses. In this "
"case, there's only one, but there can be multiple separated by commas.\n"
"\n"
"In this case, [code]move_forward[/code] is the function's name and [code]30[/"
"code] is the argument.\n"
"\n"
"This function call will make the turtle move forward by [code]30[/code] "
"pixels."
msgstr ""
"Os argumentos de uma função são todos os valores dentro dos parênteses. "
"Nesse caso, há apenas um, mas pode haver vários separados por vírgulas.\n"
"\n"
"Neste caso, [code]move_forward[/code] é o nome da função e [code]30[/code] é "
"o argumento.\n"
"\n"
"Esta chamada de função fará a tartaruga avançar em [code]30[/code] pixels."

#: course/lesson-4-drawing-a-rectangle/lesson.tres:132
msgid "move_forward"
msgstr "move_forward"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:132
#: course/lesson-4-drawing-a-rectangle/lesson.tres:133
msgid "30"
msgstr "30"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:140
msgid "The turtle uses code made specifically for this app!"
msgstr ""

#: course/lesson-4-drawing-a-rectangle/lesson.tres:142
msgid ""
"The turtle is a little learning tool custom-made for this course, based on a "
"proven code learning methodology. It's designed to teach you how to use and "
"create functions.\n"
"\n"
"So please don't be surprised if writing code like [code]turn_left()[/code] "
"inside of the Godot editor doesn't work! And don't worry, once you've "
"learned the foundations, you'll see they make it faster and easier to learn "
"Godot functions."
msgstr ""

#: course/lesson-4-drawing-a-rectangle/lesson.tres:154
msgid ""
"Let's move on to practice! You'll get to play with the turtle functions to "
"draw shapes."
msgstr ""

#: course/lesson-4-drawing-a-rectangle/lesson.tres:162
msgid "Drawing a Corner"
msgstr "Desenhando um ângulo de 90 graus"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:163
msgid ""
"In this practice, we'll tell the turtle to draw a corner.\n"
"\n"
"The corner is made up of two lines that are [code]200[/code] pixels long. "
"The lines are connected at each end by [code]90[/code] degrees, or right-"
"angle.\n"
"\n"
"The [code]move_forward()[/code] and [code]turn_right()[/code] functions to "
"the right draw a corner, but they're missing some arguments.\n"
"\n"
"Add the missing arguments so the turtle moves forward [code]200[/code] "
"pixels, turns right [code]90[/code] degrees, then moves forward again "
"[code]200[/code] pixels.\n"
"\n"
"We added the first argument for you so the turtle moves forward [code]200[/"
"code] pixels.\n"
"\n"
"In the following practices, we'll draw multiple corners to create "
"rectangles.\n"
"\n"
msgstr ""
"Nessa prática, Nós vamos falar para a tartaruga desenhar um ângulo de 90 "
"graus.\n"
"\n"
"Esse ângulo de 90 graus é feito por duas linhas de [code]200[/code] pixels "
"de comprimento. As linhas são conectadas no final de cada uma delas por "
"[code]90[/code] graus, formando um ângulo reto.\n"
"\n"
"As funções [code]move_forward()[/code] e [code]turn_right()[/code] que estão "
"na direita desenham um ângulo de 90 graus, mas estão faltando nelas alguns "
"parâmetros.\n"
"\n"
"Adicione os parâmetros que estão faltando para que a tartaruga mova para "
"frente em [code]200[/code] pixels, vire para direita [code]90[/code] graus e "
"mova para frente novamente em [code]200[/code] pixels.\n"
"\n"
"Nós adicionamos o primeiro parâmetro para você, assim a tartaruga vai mover "
"para frente em [code]200[/code] pixels.\n"
"\n"
"Nas próximas práticas, vamos desenhar vários ângulos de 90 graus para "
"criarmos retângulos.\n"
"\n"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:187
msgid ""
"Use the turtle to draw a square's corner. You'll then build upon it to draw "
"a rectangle."
msgstr ""
"Use a tartaruga para desenhar um ângulo de 90 graus de um quadrado. Em "
"seguida, com o que você já fez, você vai desenhar um retângulo."

#: course/lesson-4-drawing-a-rectangle/lesson.tres:192
#: course/lesson-4-drawing-a-rectangle/lesson.tres:240
msgid "Drawing a Rectangle"
msgstr "Desenhando um retângulo"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:193
msgid ""
"Add the correct arguments to the functions [code]move_forward()[/code] and "
"[code]turn_right()[/code] to draw a rectangle with a width of [code]200[/"
"code] pixels, and a height of [code]120[/code] pixels.\n"
"\n"
"We wrote the first argument for you.\n"
"\n"
"In the next practice, you'll use the same functions to draw a bigger "
"rectangle."
msgstr ""
"Adicione os parâmetros corretos nas funções [code]move_forward()[/code] e "
"[code]turn_right()[/code] para desenhar um retângulo com uma largura de "
"[code]200[/code] pixels e altura de [code]120[/code] pixels.\n"
"\n"
"Nós escrevemos o primeiro parâmetro para você.\n"
"\n"
"Na próxima prática, você vai usar as mesmas funções para desenhar um "
"retângulo ainda maior."

#: course/lesson-4-drawing-a-rectangle/lesson.tres:213
msgid ""
"Based on your rectangle corner, you now need to draw a complete rectangle."
msgstr ""
"Com base no seu ângulo de 90 graus do retângulo, você precisa agora desenhar "
"um retângulo completo."

#: course/lesson-4-drawing-a-rectangle/lesson.tres:218
msgid "Drawing a Bigger Rectangle"
msgstr "Desenhando um Retângulo Ainda Maior"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:219
msgid ""
"Write out calls to the functions [code]move_forward()[/code] and "
"[code]turn_right()[/code] to draw a rectangle with a width of 220 pixels, "
"and a height of 260 pixels.\n"
"\n"
"We wrote the first two lines for you.\n"
"\n"
"Be sure to write each instruction on a separate line.\n"
"\n"
"Every line should start with one [code]Tab[/code] character so the computer "
"understands it's part of the [code]draw_rectangle()[/code] function."
msgstr ""
"Escreva as chamadas das funções [code]move_forward()[/code] e "
"[code]turn_right()[/code] para desenhar um retângulo com uma largura de 220 "
"pixels e altura de 260 pixels.\n"
"\n"
"Nós escrevemos as duas primeiras linhas para você.\n"
"\n"
"Certifique-se de escrever cada instrução em uma linha separada.\n"
"\n"
"Toda linha deve começar com um [code]caractere de tabulação[/code] para que "
"o computador entenda que essas linhas fazem parte da função "
"[code]draw_rectangle()[/code]."

#: course/lesson-4-drawing-a-rectangle/lesson.tres:236
msgid ""
"At this point, you're ready to code entirely on your own. Call functions by "
"yourself to draw a complete rectangle."
msgstr ""
"A partir desse ponto, você está pronto para programar por si só. Chame você "
"mesmo as funções para desenhar um retângulo completo."

#~ msgid ""
#~ "The function parameters are inside the parentheses in a function "
#~ "definition.\n"
#~ "\n"
#~ "The [code]func[/code] keyword tells the computer you're defining a new "
#~ "function, and [code]move_forward[/code] is the function's name."
#~ msgstr ""
#~ "Os parâmetros da função estão dentro dos parênteses numa definição de "
#~ "função.\n"
#~ "\n"
#~ "A palavra-chave [code]func[/code] diz ao computador que você está "
#~ "definindo uma nova função e [code]move_forward[/code] é o nome da função."

#~ msgid "func"
#~ msgstr "func"

#~ msgid "pixels"
#~ msgstr "pixels"
