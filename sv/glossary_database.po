# Translations template for Learn GDScript From Zero.
# Copyright (C) 2022 GDQuest
# This file is distributed under the same license as the Learn GDScript From
# Zero project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Learn GDScript From Zero\n"
"Report-Msgid-Bugs-To: https://github.com/GDQuest/learn-gdscript\n"
"POT-Creation-Date: 2023-12-09 20:05+0100\n"
"PO-Revision-Date: 2024-08-05 20:09+0000\n"
"Last-Translator: tygyh <jonis9898@hotmail.com>\n"
"Language-Team: Swedish <https://hosted.weblate.org/projects/"
"learn-gdscript-from-zero/glossary_database/sv/>\n"
"Language: sv\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Weblate 5.7-dev\n"
"Generated-By: Babel 2.9.1\n"

#. Reference: member function
#: course/glossary.csv:6
msgid "member function"
msgstr "medlemsfunktion"

#. Reference: member function
#: course/glossary.csv:6
msgid "member functions"
msgstr "medlemsfunktioner"

#. Reference: member function
#: course/glossary.csv:6
msgid ""
"Member functions are functions attached to a specific value type, like "
"arrays, strings, or dictionaries. We also call them methods.\n"
"\n"
"For example, arrays have member functions like [code]array.append()[/code].\n"
"\n"
"You can only call the function on an array, using the access operator "
"([code].[/code]) to access it, as shown above."
msgstr ""
"Medlemsfunktioner är funktioner kopplade till en specifik värdetyp, som "
"arrayer, strängar eller ordböcker. Vi kallar dem också metoder.\n"
"\n"
"Till exempel har arrayer medlemsfunktioner som [code]array.append()[/code].\n"
"\n"
"Du kan bara anropa funktionen på en array genom att använda "
"åtkomstoperatören ([code].[/code]) för att komma åt den, som visas ovan."

#. Reference: member variable
#: course/glossary.csv:9
msgid "member variable"
msgstr "medlemsvariabel"

#. Reference: member variable
#: course/glossary.csv:9
msgid "member variables"
msgstr "medlemsvariabler"

#. Reference: member variable
#: course/glossary.csv:9
msgid ""
"Member variables are variables attached to a specific value type, like a "
"vector's [code]x[/code] and [code]y[/code] sub-variables. We also call them "
"[i]properties[/i] or [i]fields[/i] of the vector.\n"
"\n"
"To access a member variable, you must first write the value's name followed "
"by the access operator ([code].[/code]). For example, [code]position.x[/"
"code]."
msgstr ""
"Medlemsvariabler är variabler kopplade till en specifik värdetyp, som en "
"vektors [code]x[/code] och [code]y[/code] undervariabler. Vi kallar dem "
"också för vektorns [i]egenskaper[/i] eller [i]fält[/i].\n"
"\n"
"För att komma åt en medlemsvariabel måste du först skriva värdets namn följt "
"av åtkomstoperatören ([code].[/code]). Till exempel [code]position.x[/code]."

#. Reference: parameter
#: course/glossary.csv:12
msgid "parameter"
msgstr "parameter"

#. Reference: parameter
#: course/glossary.csv:12
msgid "parameters"
msgstr "parametrar"

#. Reference: parameter
#: course/glossary.csv:12
msgid ""
"A parameter is a variable you create as part of a function definition.\n"
"\n"
"It allows you to reuse the function more by having values that vary in the "
"function's body."
msgstr ""
"En parameter är en variabel som du skapar som en del av en "
"funktionsdefinition.\n"
"\n"
"Det låter dig återanvända funktionen mer genom att ha värden som varierar i "
"funktionens kropp."

#. Reference: radian
#: course/glossary.csv:17
msgid "radian"
msgstr "radian"

#. Reference: radian
#: course/glossary.csv:17
msgid "radians"
msgstr "radianer"

#. Reference: radian
#: course/glossary.csv:17
msgid ""
"A radian is a unit of measurement of angles based on the circle's "
"circumference.\n"
"\n"
"We tend to use degrees more in our daily lives, but in computer programming, "
"and especially in games, radians are common.\n"
"\n"
"An angle of [code]2 * PI[/code] radians corresponds to 360 degrees. And an "
"angle of [code]PI[/code] radians corresponds to 180 degrees."
msgstr ""
"En radian är en måttenhet för vinklar baserad på cirkelns omkrets.\n"
"\n"
"Vi tenderar att använda grader mer i vårt dagliga liv, men i "
"datorprogrammering, och speciellt i spel, är radianer vanliga.\n"
"\n"
"En vinkel på [code]2 * PI[/code] radianer motsvarar 360 grader. Och en "
"vinkel på [code]PI[/code] radianer motsvarar 180 grader."

#. Reference: type
#: course/glossary.csv:20
msgid "type"
msgstr "typ"

#. Reference: type
#: course/glossary.csv:20
msgid "types"
msgstr "typer"

#. Reference: type
#: course/glossary.csv:20
msgid ""
"In computer programming, a type is the class of a value. For example, whole "
"numbers like [code]3[/code], [code]11[/code], and [code]255462[/code] are "
"all of type [code]int[/code] (short for integer).\n"
"\n"
"The computer uses types to determine which operations are valid between two "
"values and when they're undefined."
msgstr ""
"I datorprogrammering är en typ klassen för ett värde. Till exempel är heltal "
"som [code]3[/code], [code]11[/code] och [code]255462[/code] alla av typen "
"[code]int[/code] (förkortning av heltal) .\n"
"\n"
"Datorn använder typer för att avgöra vilka operationer som är giltiga mellan "
"två värden och när de är odefinierade."

#. Reference: iteration
#: course/glossary.csv:23
msgid "iteration"
msgstr "iteration"

#. Reference: iteration
#: course/glossary.csv:23
msgid "iterations"
msgstr "iterationer"

#. Reference: iteration
#: course/glossary.csv:23
msgid ""
"In computer code, an iteration is one repetition of some process or code. We "
"typically use the term with loops, where one iteration is one run of the "
"loop's code.\n"
"\n"
"When talking of algorithms, an iteration can mean a full pass of the "
"algorithm on a data set."
msgstr ""
"I datorkod är en iteration en upprepning av någon process eller kod. Vi "
"använder vanligtvis termen med loopar, där en iteration är en körning av "
"loopens kod.\n"
"\n"
"När man pratar om algoritmer kan en iteration betyda en full passning av "
"algoritmen på en datamängd."

#. Reference: vector
#: course/glossary.csv:28
msgid "vector"
msgstr "vektor"

#. Reference: vector
#: course/glossary.csv:28
msgid "vectors"
msgstr "vektorer"

#. Reference: vector
#: course/glossary.csv:28
msgid ""
"In math, a vector is a list of numbers. In games, we often use 2D and 3D "
"vectors: respectively, lists of two and three numbers.\n"
"\n"
"We use that to represent a direction and magnitude or intensity in space. "
"For example, you can use a vector to represent the direction and speed at "
"which a character or a vehicle moves.\n"
"\n"
"Vectors can seem daunting at first because they are pretty abstract, but as "
"you will see, they'll simplify code tremendously."
msgstr ""
"I matematik är en vektor en lista med tal. I spel använder vi ofta 2D- och "
"3D-vektorer: listor med två respektive tre nummer.\n"
"\n"
"Vi använder det för att representera en riktning och storlek eller "
"intensitet i rymden. Du kan till exempel använda en vektor för att "
"representera riktningen och hastigheten med vilken en karaktär eller ett "
"fordon rör sig.\n"
"\n"
"Vektorer kan verka skrämmande till en början eftersom de är ganska "
"abstrakta, men som du kommer att se kommer de att förenkla koden oerhört."

#. Reference: argument
#: course/glossary.csv:37
msgid "argument"
msgstr "argument"

#. Reference: argument
#: course/glossary.csv:37
msgid "arguments"
msgstr "argument"

#. Reference: argument
#: course/glossary.csv:37
msgid ""
"An argument is a value that you pass to a function when calling the "
"function. For example, in the call [code]rotate(0.5)[/code], the value "
"[code]0.5[/code] in the parentheses is an argument.\n"
"\n"
"A function can receive no arguments, one argument, or multiple arguments. "
"Arguments can be mandatory or optional.\n"
"\n"
"When a function takes multiple arguments, you separate the values with "
"commas, like in this function call: [code]jump(50, 100)[/code]\n"
"\n"
"When [i]calling[/i] a function, we name the values passed in parentheses "
"[i]arguments[/i].\n"
"\n"
"When writing a function definition, however, we talk about function "
"[i]parameters[/i]. In the following example, the names [code]x[/code] and "
"[code]y[/code] are [i]parameters[/i]."
msgstr ""
"Ett argument är ett värde som du skickar till en funktion när du anropar "
"funktionen. Till exempel, i anropet [code]rotate(0.5)[/code], är värdet "
"[code]0.5[/code] inom parentes ett argument.\n"
"\n"
"En funktion kan inte ta emot några argument, ett argument eller flera "
"argument. Argument kan vara obligatoriska eller valfria.\n"
"\n"
"När en funktion tar flera argument, separerar du värdena med kommatecken, "
"som i detta funktionsanrop: [code]jump(50, 100)[/code]\n"
"\n"
"När vi [i]anropar[/i] en funktion namnger vi värdena som skickas inom "
"parentes [i]argument[/i].\n"
"\n"
"När man skriver en funktionsdefinition talar vi dock om funktions "
"[i]parametrar[/i]. I följande exempel är namnen [code]x[/code] och "
"[code]y[/code] [i]parametrar[/i]."

#. Reference: array
#: course/glossary.csv:44
msgid "array"
msgstr "array"

#. Reference: array
#: course/glossary.csv:44
msgid "arrays"
msgstr "matriser"

#. Reference: array
#: course/glossary.csv:44
msgid ""
"An array is a list of values. In GDScript, arrays can contain [i]any[/i] "
"types of value.\n"
"\n"
"To create an array, you write comma-separated values in square brackets: "
"[code]var three_numbers = [1, 2, 3][/code]\n"
"\n"
"In games, we use arrays all the time to store lists of characters in a "
"party, lists of items in inventory, lists of spells the player unlocked, and "
"so on. They're everywhere.\n"
"\n"
"Arrays are a fundamental value type in computer programming. You'll find "
"arrays in pretty much any programming language."
msgstr ""
"En array är en lista med värden. I GDScript kan arrayer innehålla [i]alla[/"
"i] värdetyper.\n"
"\n"
"För att skapa en array skriver du kommaseparerade värden inom hakparenteser: "
"[code]var three_numbers = [1, 2, 3][/code]\n"
"\n"
"I spel använder vi arrayer hela tiden för att lagra listor över karaktärer i "
"ett parti, listor över föremål i inventeringen, listor över besvärjelser som "
"spelaren låst upp och så vidare. De finns överallt.\n"
"\n"
"Arrayer är en grundläggande värdetyp i datorprogrammering. Du hittar arrayer "
"i nästan alla programmeringsspråk."

#. Reference: assign
#: course/glossary.csv:45
msgid "assign"
msgstr "tilldela"

#. Reference: assign
#: course/glossary.csv:45
msgid ""
"Assigning a value to a variable means that you store a value inside the "
"variable. You do this with the equal sign ([code]=[/code])."
msgstr ""
"Att tilldela ett värde till en variabel innebär att du lagrar ett värde "
"inuti variabeln. Detta gör du med likhetstecknet ([code]=[/code])."

#. Reference: dictionary
#: course/glossary.csv:52
msgid "dictionary"
msgstr "ordbok(dictionary)"

#. Reference: dictionary
#: course/glossary.csv:52
msgid "dictionaries"
msgstr "ordböcker"

#. Reference: dictionary
#: course/glossary.csv:52
msgid ""
"A dictionary is a data structure that maps values with key-value pairs. When "
"you give the dictionary a key, it finds and gives you back the corresponding "
"value.\n"
"\n"
"In GDScript, keys can be many things. We often use text strings or numbers, "
"but you're not limited to that. A [code]Vector2[/code] can also be a valid "
"key, which is handy to map a grid cell to a unit or an item in a grid-based "
"game.\n"
"\n"
"You will often use dictionaries to associate bits of data in your games. For "
"example, we could use them to associate an equipment's name with its weapon "
"stats in a database.\n"
"\n"
"Like arrays, they are a fundamental data type that you will see in many "
"programming languages and use a lot."
msgstr ""
"En ordbok är en datastruktur som mappar värden med nyckel-värdepar. När du "
"ger ordboken en nyckel hittar den och ger dig tillbaka motsvarande värde.\n"
"\n"
"I GDScript kan nycklar vara många saker. Vi använder ofta textsträngar eller "
"siffror, men du är inte begränsad till det. En [code]Vector2[/code] kan "
"också vara en giltig nyckel, vilket är praktiskt för att mappa en "
"rutnätscell till en enhet eller ett objekt i ett rutnätsbaserat spel.\n"
"\n"
"Du kommer ofta att använda ordböcker för att associera bitar av data i dina "
"spel. Till exempel kan vi använda dem för att associera en utrustnings namn "
"med dess vapenstatistik i en databas.\n"
"\n"
"Liksom arrayer är de en grundläggande datatyp som du kommer att se i många "
"programmeringsspråk och använda mycket."

#. Reference: for loop
#: course/glossary.csv:59
msgid "for loop"
msgstr "for loop"

#. Reference: for loop
#: course/glossary.csv:59
msgid "for loops"
msgstr "for loopar"

#. Reference: for loop
#: course/glossary.csv:59
msgid ""
"A for loop instructs the computer to repeat a set of instructions once for "
"each value in an array.\n"
"\n"
"In each loop iteration, the compiler extracts one value from the array and "
"gives you access to it in the loop's body.\n"
"\n"
"For loops run code a limited amount of times: one per value in the array. It "
"is different from while loops that keep repeating code until a condition is "
"met.\n"
"\n"
"We recommend favoring for loops when you can. They're safer and easier to "
"use than while loops."
msgstr ""
"En for-loop instruerar datorn att upprepa en uppsättning instruktioner en "
"gång för varje värde i en array.\n"
"\n"
"I varje loopiteration extraherar kompilatorn ett värde från arrayen och ger "
"dig tillgång till det i loopens kropp.\n"
"\n"
"För loopar kör kod ett begränsat antal gånger: en per värde i arrayen. Det "
"skiljer sig från while-loopar som fortsätter att upprepa koden tills ett "
"villkor är uppfyllt.\n"
"\n"
"Vi rekommenderar att favorisera för loopar när du kan. De är säkrare och "
"enklare att använda än while-slingor."

#. Reference: function
#: course/glossary.csv:64
msgid "function"
msgstr "funktion"

#. Reference: function
#: course/glossary.csv:64
msgid "functions"
msgstr "funktioner"

#. Reference: function
#: course/glossary.csv:64
msgid ""
"A function is a group of code instructions you give a name. When you define "
"a function, you can call it any time to run all the instructions it "
"contains.\n"
"\n"
"You can modify a function's behavior with parameters. Parameters are "
"variable names that you write in the function definition. You can then use "
"them in the function's body to make your code adapt to different cases.\n"
"\n"
"Also, functions can optionally return a value to the code calling it."
msgstr ""
"En funktion är en grupp kodinstruktioner som du ger ett namn. När du "
"definierar en funktion kan du anropa den när som helst för att köra alla "
"instruktioner som den innehåller.\n"
"\n"
"Du kan ändra en funktions beteende med parametrar. Parametrar är "
"variabelnamn som du skriver i funktionsdefinitionen. Du kan sedan använda "
"dem i funktionens body för att få din kod att anpassa sig till olika fall.\n"
"\n"
"Funktioner kan också valfritt returnera ett värde till koden som anropar det."

#. Reference: increment
#: course/glossary.csv:65
msgid "increment"
msgstr "ökning"

#. Reference: increment
#: course/glossary.csv:65
msgid "increments"
msgstr "steg"

#. Reference: increment
#: course/glossary.csv:65
msgid "An increment is the amount by which a value changes in your code."
msgstr "Ett inkrement är det belopp med vilket ett värde ändras i din kod."

#. Reference: instruction
#: course/glossary.csv:68
msgid "instruction"
msgstr "instruktion"

#. Reference: instruction
#: course/glossary.csv:68
msgid "instructions"
msgstr "instruktioner"

#. Reference: instruction
#: course/glossary.csv:68
msgid ""
"In computer programming, instructions are a single operation the computer "
"recognizes and can execute.\n"
"\n"
"For example, a function call, an addition, or assigning a value to a "
"variable."
msgstr ""
"I datorprogrammering är instruktioner en enda operation som datorn känner "
"igen och kan utföra.\n"
"\n"
"Till exempel ett funktionsanrop, ett tillägg eller tilldelning av ett värde "
"till en variabel."

#. Reference: variable
#: course/glossary.csv:77
msgid "variable"
msgstr "variabel"

#. Reference: variable
#: course/glossary.csv:77
msgid "variables"
msgstr "variabler"

#. Reference: variable
#: course/glossary.csv:77
msgid ""
"Variables are a tool to give a name to values you want to store in your code "
"and change over time.\n"
"\n"
"For example, a character's health: when the character takes a hit, you want "
"it to go down. When healing, you want the health to go back up.\n"
"\n"
"You can create a variable named [code]health[/code] to represent the "
"health.\n"
"\n"
"Then, every time you write the keyword [code]health[/code] in your code, the "
"computer will fetch the corresponding value in its memory for you.\n"
"\n"
"Variables work a bit like product labels in a supermarket. They are names "
"that you attach to some value. Any time, you can take the label and stick it "
"onto a new product or, in that case, a new value."
msgstr ""
"Variabler är ett verktyg för att ge ett namn till värden du vill lagra i din "
"kod och ändra över tiden.\n"
"\n"
"Till exempel en karaktärs hälsa: när karaktären får en träff vill du att den "
"ska gå ner. När man läker vill man att hälsan ska gå upp igen.\n"
"\n"
"Du kan skapa en variabel som heter [code]health[/code] för att representera "
"hälsan.\n"
"\n"
"Sedan, varje gång du skriver nyckelordet [code]health[/code] i din kod, "
"kommer datorn att hämta motsvarande värde i sitt minne åt dig.\n"
"\n"
"Variabler fungerar lite som produktetiketter i en stormarknad. Det är namn "
"som man tillmäter något värde. Du kan när som helst ta etiketten och fästa "
"den på en ny produkt eller i så fall ett nytt värde."

#. Reference: while loop
#: course/glossary.csv:84
msgid "while loop"
msgstr "while loop"

#. Reference: while loop
#: course/glossary.csv:84
msgid "while loops"
msgstr "while loopar"

#. Reference: while loop
#: course/glossary.csv:84
msgid ""
"A while loop instructs the computer to keep running code based on a "
"condition. While the condition is true, the loop keeps running.\n"
"\n"
"When coding while loops, you must be careful: they will keep running "
"infinitely and freeze your game if you get the condition wrong.\n"
"\n"
"That's why we recommend using the safer for loop whenever you can.\n"
"\n"
"However, there are still essential cases in which we use while loops, like "
"processing files, processing computer code, or for powerful algorithms."
msgstr ""
"En while-loop instruerar datorn att fortsätta köra kod baserat på ett "
"tillstånd. Medan villkoret är sant, fortsätter slingan att köras.\n"
"\n"
"När du kodar while-loopar måste du vara försiktig: de fortsätter att köras i "
"det oändliga och fryser ditt spel om du får fel tillstånd.\n"
"\n"
"Det är därför vi rekommenderar att du använder safer for loop när du kan.\n"
"\n"
"Men det finns fortfarande viktiga fall där vi använder while-loopar, som att "
"bearbeta filer, bearbeta datorkod eller för kraftfulla algoritmer."

#. Reference: body
#: course/glossary.csv:85
msgid "body"
msgstr "kropp"

#. Reference: body
#: course/glossary.csv:85
msgid ""
"We talk about a loop or a function's body to refer to the lines of code that "
"are part of the loop or function."
msgstr ""
"Vi talar om en loop eller en funktions kropp för att hänvisa till de "
"kodrader som är en del av loopen eller funktionen."

#. Reference: return
#: course/glossary.csv:88
msgid "return"
msgstr "returnera"

#. Reference: return
#: course/glossary.csv:88
msgid ""
"Returning a value is the process of sending a value to the place where you "
"call a function.\n"
"\n"
"It happens when a function uses the [code]return[/code] keyword followed by "
"a value, for example: [code]return -1[/code]."
msgstr ""
"Att returnera ett värde är processen att skicka ett värde till den plats där "
"du anropar en funktion.\n"
"\n"
"Det händer när en funktion använder nyckelordet [code]return[/code] följt av "
"ett värde, till exempel: [code]return -1[/code]."

#. Reference: library
#: course/glossary.csv:89
msgid "library"
msgstr "bibliotek"

#. Reference: library
#: course/glossary.csv:89
msgid "libraries"
msgstr "bibliotek"

#. Reference: library
#: course/glossary.csv:89
msgid ""
"A collection of valuable and reusable code bundled together by other "
"programmers to save you time. All programmers use code libraries."
msgstr ""
"En samling värdefull och återanvändbar kod som buntas ihop av andra "
"programmerare för att spara tid. Alla programmerare använder kodbibliotek."

#. Reference: sprite
#: course/glossary.csv:90
msgid "sprite"
msgstr "sprite(bild)"

#. Reference: sprite
#: course/glossary.csv:90
msgid "sprites"
msgstr "sprites(bilder)"

#. Reference: sprite
#: course/glossary.csv:90
msgid ""
"In computer graphics, a sprite is an image you display on the screen. We "
"generally use this word to talk about moving images, like a character, a "
"monster, or an item falling on the ground."
msgstr ""
"I datorgrafik är en sprite en bild du visar på skärmen. Vi använder "
"vanligtvis detta ord för att prata om rörliga bilder, som en karaktär, ett "
"monster eller ett föremål som faller på marken."
