# Translations template for Learn GDScript From Zero.
# Copyright (C) 2022 GDQuest
# This file is distributed under the same license as the Learn GDScript From
# Zero project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Learn GDScript From Zero\n"
"Report-Msgid-Bugs-To: https://github.com/GDQuest/learn-gdscript\n"
"POT-Creation-Date: 2022-03-26 17:50+0100\n"
"PO-Revision-Date: 2024-04-08 10:01+0000\n"
"Last-Translator: Matthijs <m4tthijsbl0m@gmail.com>\n"
"Language-Team: Dutch <https://hosted.weblate.org/projects/"
"learn-gdscript-from-zero/lesson-20-looping-over-arrays/nl/>\n"
"Language: nl\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Weblate 5.5-dev\n"
"Generated-By: Babel 2.9.1\n"

#: course/lesson-20-looping-over-arrays/lesson.tres:14
msgid ""
"We used the [code]range()[/code] function in combination with "
"[code]for[/code] loops."
msgstr ""
"We hebben de functie [code]range()[/code] gebruikt in combinatie met "
"[code]for[/code]-lussen."

#: course/lesson-20-looping-over-arrays/lesson.tres:34
msgid ""
"The [code]range()[/code] function produced an array that the "
"[code]for[/code] keyword could loop over.\n"
"\n"
"We can give [code]for[/code] loops [i]any[/i] array, and they will loop "
"over them just the same.\n"
"\n"
"Instead of using the [code]range()[/code] function, we could manually "
"write the numbers and get the same result."
msgstr ""
"De functie [code]range()[/code] produceerde een array waar met behulp van "
"het sleutelwoord [code]for[/code] doorheen kon worden gestapt.\n"
"\n"
"We kunnen [code]for[/code]-lussen[i]elke[/i] array geven en ze zullen er net "
"zo doorheen lopen.\n"
"\n"
"In plaats van de functie [code]range()[/code] te gebruiken, zouden we de "
"getallen handmatig kunnen schrijven en hetzelfde resultaat krijgen."

#: course/lesson-20-looping-over-arrays/lesson.tres:58
msgid ""
"For each element inside the array, the [code]for[/code] loop extracts it,"
" stores it in the temporary variable named [code]number[/code], and "
"executes the loop's code once.\n"
"\n"
"Inside the loop, you can access the [code]number[/code] variable, which "
"changes on each [i]iteration[/i].\n"
"\n"
"The code works regardless of the array or where you store it. Often, you "
"will store arrays in variables for easy access."
msgstr ""
"Voor elk element in de array haalt de [code]for[/code]-lus het eruit, slaat "
"het op in de tijdelijke variabele met de naam [code]number[/code] en voert "
"de code van de lus één keer uit.\n"
"\n"
"Binnen de lus heb je toegang tot de variabele [code]number[/code], die bij "
"elke [i]iteratie[/i] verandert.\n"
"\n"
"De code werkt ongeacht de array of waar je deze opslaat. Vaak sla je arrays "
"op in variabelen voor gemakkelijke toegang."

#: course/lesson-20-looping-over-arrays/lesson.tres:80
msgid "What will this code print?"
msgstr "Wat zal deze code afdrukken?"

#: course/lesson-20-looping-over-arrays/lesson.tres:81
msgid ""
"[code]var numbers = [0, 1, 2]\n"
"for number in numbers:\n"
"    print(number)\n"
"[/code]"
msgstr ""
"[code]var numbers = [0, 1, 2]\n"
"for number in numbers:\n"
"    print(number)\n"
"[/code]"

#: course/lesson-20-looping-over-arrays/lesson.tres:86
msgid ""
"Compared to previous examples, we store the array in the "
"[code]numbers[/code] variable. Using the [code]numbers[/code] variable in"
" our [code]for[/code] loop allows the computer to access the array of "
"numbers like before.\n"
"\n"
"We have three numbers in the array: [code]0[/code], [code]1[/code], and "
"[code]2[/code].\n"
"\n"
"The loop extracts each of them sequentially and assigns it to the "
"[code]number[/code] temporary variable. As the loop processes each "
"number, the output will print [code]0[/code], then [code]1[/code], then "
"[code]2[/code], each on a separate line."
msgstr ""
"In vergelijking met de vorige voorbeelden slaan we de array op in de "
"variabele [code]numbers[/code]. Door de variabele [code]numbers[/code] in "
"onze [code]for[/code]-lus te gebruiken, kan de computer de array van "
"getallen gebruiken zoals voorheen.\n"
"\n"
"We hebben drie getallen in de array: [code]0[/code], [code]1[/code] en "
"[code]2[/code].\n"
"\n"
"De lus haalt elk getal opeenvolgend tevoorschijn en wijst het toe aan de "
"tijdelijke variabele [code]number[/code]. Omdat de lus elk nummer verwerkt, "
"zal [code]0[/code], dan [code]1[/code], dan [code]2[/code] worden afgedrukt, "
"elk op een aparte regel."

#: course/lesson-20-looping-over-arrays/lesson.tres:91
#: course/lesson-20-looping-over-arrays/lesson.tres:92
msgid "0, 1, and 2"
msgstr "0, 1 en 2"

#: course/lesson-20-looping-over-arrays/lesson.tres:91
msgid "1, 2, and 3"
msgstr "1, 2 en 3"

#: course/lesson-20-looping-over-arrays/lesson.tres:91
msgid "0, 0, and 0"
msgstr "0, 0 en 0"

#: course/lesson-20-looping-over-arrays/lesson.tres:99
msgid "Making the turtle walk, with a loop"
msgstr "De schildpad laten lopen, met een lus"

#: course/lesson-20-looping-over-arrays/lesson.tres:101
msgid ""
"In the previous lesson, you made a turtle walk along a path by writing "
"[code]Vector2[/code] coordinates in an array."
msgstr ""
"In de vorige les heb je een schildpad langs een pad laten lopen door "
"[code]Vector2[/code] coördinaten in een array te schrijven."

#: course/lesson-20-looping-over-arrays/lesson.tres:121
msgid ""
"It's a [code]for[/code] loop that makes the turtle walk along the path.\n"
"\n"
"The loop works like this: for each coordinate in the array, it moves the "
"turtle once to that cell."
msgstr ""
"Het is een [code]for[/code]-lus die de schildpad langs het pad laat lopen.\n"
"\n"
"De lus werkt als volgt: voor elk stel coördinaten in de array wordt de "
"schildpad één keer naar die cel verplaatst."

#: course/lesson-20-looping-over-arrays/lesson.tres:143
msgid "It's the same principle with unit selection."
msgstr "Hetzelfde principe geldt voor de selectie van spelstukken."

#: course/lesson-20-looping-over-arrays/lesson.tres:163
msgid ""
"For each coordinate in an array named [code]selected_units[/code], we "
"check if there is a unit in that cell. If so, we select it. \n"
"\n"
"In that case, we use an array, a loop, and a condition together."
msgstr ""
"Voor elke coördinaat in een array met de naam [code]selected_units[/code] "
"controleren we of er een spelstuk op die cel staat. Zo ja, dan selecteren we "
"die. \n"
"\n"
"In dat geval gebruiken we een array, een lus en een conditie tegelijk."

#: course/lesson-20-looping-over-arrays/lesson.tres:185
msgid ""
"The code above uses several features you haven't learned yet:\n"
"\n"
"- In a condition, the [code]in[/code] keyword allows you to check if a "
"value exists [i]in[/i] an array.\n"
"- The array's [code]append()[/code] function appends a new value at the "
"end of the array.\n"
"\n"
"Notice the use of a period after the [code]selected_units[/code] "
"variable, to call the [code]append()[/code] function. It's because this "
"function exists only on arrays.\n"
"\n"
"When functions exist only on a specific value type, you write a dot after"
" the value to call the function on it.\n"
"\n"
"We'll revisit those two features again in the following lessons."
msgstr ""
"De bovenstaande code gebruikt verschillende functies die je nog niet hebt "
"geleerd:\n"
"\n"
"- In een conditie kun je met het sleutelwoord [code]in[/code] controleren of "
"een waarde aanwezig is [i]in[/i] een array.\n"
"- De functie [code]append()[/code] van de array voegt een nieuwe waarde toe "
"aan het einde van de array.\n"
"\n"
"Let op het gebruik van een punt na de variabele [code]selected_units[/code] "
"om de functie [code]append()[/code] aan te roepen. Dat komt omdat deze "
"functie alleen bestaat bij arrays.\n"
"\n"
"Wanneer functies alleen bestaan bij een specifiek waardentype, schrijf je "
"een punt achter de waarde om de functie ermee aan te roepen.\n"
"\n"
"We zullen deze twee functies opnieuw bekijken in de volgende lessen."

#: course/lesson-20-looping-over-arrays/lesson.tres:204
msgid ""
"The beauty of loops is that they work regardless of the size of your "
"arrays. \n"
"\n"
"The code just works whether you have one or ten thousand units to select."
" It is all accomplished with only a couple lines of code.\n"
"\n"
"That's the power of computer programming.\n"
"\n"
"In the following practices, you will use arrays combined with "
"[code]for[/code] loops to achieve similar results."
msgstr ""
"Het mooie van lussen is dat ze werken ongeacht de grootte van je arrays. \n"
"\n"
"De code werkt gewoon, of je nu duizend of tienduizend spelstukken moet "
"selecteren. Dit alles wordt bereikt met slechts een paar regels code.\n"
"\n"
"Dat is de kracht van computerprogrammeren.\n"
"\n"
"In de volgende oefeningen zul je arrays gebruiken in combinatie met "
"[code]for[/code]-lussen om vergelijkbare resultaten te bereiken."

#: course/lesson-20-looping-over-arrays/lesson.tres:218
msgid "Move the robot along the path"
msgstr "Beweeg de robot langs het pad"

#: course/lesson-20-looping-over-arrays/lesson.tres:219
msgid ""
"Our AI pathfinding algorithm provided a path for the robot to move to the"
" right edge of the grid. Your task is to use a [code]for[/code] loop to "
"make the robot move.\n"
"\n"
"To move the robot, call [i]its[/i] [code]move_to()[/code] function, like "
"so: [code]robot.move_to()[/code].\n"
"\n"
"The [code]move_to()[/code] function only exists on the robot, which is "
"why you need to access it this way."
msgstr ""
"Ons AI-padzoekalgoritme heeft de robot een pad gegeven naar de rechterrand "
"van het rooster. Jouw taak is om een [code]for[/code]-lus te gebruiken om de "
"robot te laten bewegen.\n"
"\n"
"Om de robot te verplaatsen, roep je [i]zijn[/i] functie "
"[code]move_to()[/code] aan, op deze manier: [code]robot.move_to()[/code].\n"
"\n"
"De functie [code]move_to()[/code] bestaat alleen bij de robot, daarom moet "
"je hem op deze manier gebruiken."

#: course/lesson-20-looping-over-arrays/lesson.tres:235
msgid ""
"Our AI pathfinding algorithm is giving us a path to move the robot. Now, "
"you need to make the turtle move along the path."
msgstr ""
"Ons AI-padzoekalgoritme geeft ons een pad om de robot langs te bewegen. Nu "
"moet je de schildpad langs het pad laten bewegen."

#: course/lesson-20-looping-over-arrays/lesson.tres:240
msgid "Back to the drawing board"
msgstr "Terug naar de tekentafel"

#: course/lesson-20-looping-over-arrays/lesson.tres:241
msgid ""
"We want to draw many rectangles, something surprisingly common in games.\n"
"\n"
"However, writing this code by hand can get tedious. Instead, you could "
"store the size of your shapes in arrays and use a loop to draw them all "
"in batches.\n"
"\n"
"That's what you'll do in this practice.\n"
"\n"
"Use a [code]for[/code] loop to draw every rectangle in the "
"[code]rectangle_sizes[/code] array with the [code]draw_rectangle()[/code]"
" function.\n"
"\n"
"The rectangles shouldn't overlap or cross each other. To avoid that, "
"you'll need to call the [code]jump()[/code] function."
msgstr ""
"We willen veel rechthoeken tekenen, iets wat verrassend vaak voorkomt in "
"spellen.\n"
"\n"
"Deze code met de hand schrijven kan echter snel vervelen. In plaats daarvan "
"kun je de grootte van je vormen opslaan in arrays en een lus gebruiken om ze "
"allemaal in een keer te tekenen.\n"
"\n"
"Dat is wat je in deze oefening zult doen.\n"
"\n"
"Gebruik een [code]for[/code]-lus om elke rechthoek in de array "
"[code]rectangle_sizes[/code] te tekenen met de functie "
"[code]draw_rectangle()[/code].\n"
"\n"
"De rechthoeken mogen elkaar niet overlappen of kruisen. Om dat te vermijden, "
"moet je de functie [code]jump()[/code] aanroepen."

#: course/lesson-20-looping-over-arrays/lesson.tres:261
msgid ""
"The drawing turtle makes its comeback. Fear not! Armed with loops, you'll"
" make it draw faster than ever before."
msgstr ""
"De tekenschildpad is weer terug. Vrees niet! Gewapend met lussen kun je hem "
"sneller dan ooit laten tekenen."

#: course/lesson-20-looping-over-arrays/lesson.tres:265
msgid "Looping over arrays"
msgstr "Door arrays heen stappen"
