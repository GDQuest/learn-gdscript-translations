# Translations template for Learn GDScript From Zero.
# Copyright (C) 2022 GDQuest
# This file is distributed under the same license as the Learn GDScript From
# Zero project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Learn GDScript From Zero\n"
"Report-Msgid-Bugs-To: https://github.com/GDQuest/learn-gdscript\n"
"POT-Creation-Date: 2022-06-12 11:07+0200\n"
"PO-Revision-Date: 2024-04-11 23:02+0000\n"
"Last-Translator: Matthijs <m4tthijsbl0m@gmail.com>\n"
"Language-Team: Dutch <https://hosted.weblate.org/projects/"
"learn-gdscript-from-zero/lesson-23-append-to-arrays/nl/>\n"
"Language: nl\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Weblate 5.5-dev\n"
"Generated-By: Babel 2.9.1\n"

#: course/lesson-23-append-to-arrays/lesson.tres:13
msgid ""
"In previous lessons, you learned how to create arrays to store lists of "
"values and how to loop over them. It's nice, but you won't go far with only "
"that.\n"
"\n"
"The real strength of arrays is that you can add and remove values from them "
"at any time. It allows you to [i]queue[/i] or [i]stack[/i] data."
msgstr ""
"In de vorige lessen heb je geleerd hoe je arrays kunt maken om lijsten met "
"waarden op te slaan en hoe je er doorheen kunt lussen. Dat is leuk, maar met "
"alleen dat kom je niet ver.\n"
"\n"
"De echte kracht van arrays is dat je er op elk moment waarden aan toe kunt "
"voegen en uit kunt verwijderen. Hierdoor kun je gegevens in een "
"[i]wachtrij[/i] plaatsen of [i]stapelen[/i]."

#: course/lesson-23-append-to-arrays/lesson.tres:25
msgid "For now, let's take another example."
msgstr "Laten we voor nu nog een ander voorbeeld bekijken."

#: course/lesson-23-append-to-arrays/lesson.tres:33
msgid "Tracking orders in a restaurant management game"
msgstr "Bestellingen bijhouden in een restaurantmanagementspel"

#: course/lesson-23-append-to-arrays/lesson.tres:35
msgid ""
"You're making a restaurant management game where customers place orders, and "
"you need to handle them as they come.\n"
"\n"
"In this game, customers order meals that end up in a queue. You need to "
"prepare them in the kitchen.\n"
"\n"
"In this example, we simulate orders arriving and getting completed over time."
msgstr ""
"Je maakt een restaurantmanagementspel waarin klanten bestellingen plaatsen "
"en jij ze moet afhandelen.\n"
"\n"
"In dit spel bestellen klanten maaltijden die in een wachtrij belanden. Jij "
"moet ze bereiden in de keuken.\n"
"\n"
"In dit voorbeeld simuleren we bestellingen die binnenkomen en na verloop van "
"tijd klaar zijn."

#: course/lesson-23-append-to-arrays/lesson.tres:59
msgid ""
"How do you keep track of pending and completed orders? With an array!\n"
"\n"
"When a customer purchases a meal, you want to [i]append[/i] it to the array. "
"Then, as you complete a meal in the kitchen and serve it, you want to remove "
"it from the array.\n"
"\n"
"You can do that with the [code]append()[/code] and the [code]pop_front()[/"
"code] functions of the array, respectively.\n"
"\n"
"Try to read the code below before moving on. Don't worry if not everything "
"makes sense, as we'll break it all down."
msgstr ""
"Hoe houd je wachtende en afgehandelde bestellingen bij? Met een array!\n"
"\n"
"Wanneer een klant een maaltijd koopt, wil je deze [i]toevoegen[/i] aan de "
"array. Vervolgens, wanneer je een maaltijd voltooit in de keuken en "
"serveert, wil je deze verwijderen uit de array.\n"
"\n"
"Je kunt dat doen met respectievelijk de functies [code]append()[/code] en "
"[code]pop_front()[/code] van de array.\n"
"\n"
"Probeer de onderstaande code te lezen voordat je verder gaat. Maak je geen "
"zorgen als niet alles duidelijk is, want we zullen het allemaal uitleggen."

#: course/lesson-23-append-to-arrays/lesson.tres:85
msgid ""
"Notice how we call some functions by writing a dot after a variable name. "
"Like a given value type can have sub-variables, it can also have its own "
"functions.\n"
"\n"
"Functions like [code]append()[/code] and [code]pop_front()[/code] only exist "
"on arrays. That's why to call them, we need to access it from the array "
"using the dot: [code]array.append()[/code]."
msgstr ""
"Merk op hoe we sommige functies aanroepen door een punt achter een "
"variabelennaam te schrijven. Zoals een gegeven waardentype deelvariabelen "
"kan hebben, kan het ook zijn eigen functies hebben.\n"
"\n"
"Functies zoals [code]append()[/code] en [code]pop_front()[/code] bestaan "
"alleen bij arrays. Daarom moeten we, om ze aan te roepen, de punt gebruiken: "
"[code]array.append()[/code]."

#: course/lesson-23-append-to-arrays/lesson.tres:97
msgid ""
"Let's break down the code.\n"
"\n"
"We queue orders in the [code]waiting_orders[/code] array by appending them "
"to the array."
msgstr ""
"Laten we de code ontleden.\n"
"\n"
"We plaatsen orders in de wachtrij in de array [code]waiting_orders[/code] "
"door ze toe te voegen aan de array."

#: course/lesson-23-append-to-arrays/lesson.tres:119
msgid ""
"We can use a string to represent a meal when calling the [code]add_order()[/"
"code] function."
msgstr ""
"We kunnen een string gebruiken om een maaltijd aan te duiden wanneer we de "
"functie [code]add_order()[/code] aanroepen."

#: course/lesson-23-append-to-arrays/lesson.tres:139
msgid ""
"When completing an order, we remove it from the [code]waiting_orders[/code] "
"array by calling its [code]pop_front()[/code] function. This function gives "
"us the order back, which allows us to assign it to a temporary variable."
msgstr ""
"Wanneer we een bestelling voltooien, verwijderen we deze uit de array "
"[code]waiting_orders[/code] door de functie [code]pop_front()[/code] aan te "
"roepen. Deze functie geeft ons de bestelling terug, waardoor we deze kunnen "
"toewijzen aan een tijdelijke variabele."

#: course/lesson-23-append-to-arrays/lesson.tres:159
msgid ""
"We can then append the order to our [code]completed_orders[/code] array."
msgstr ""
"We kunnen de bestelling vervolgens toevoegen aan onze array "
"[code]completed_orders[/code]."

#: course/lesson-23-append-to-arrays/lesson.tres:179
msgid ""
"We call arrays like [code]waiting_orders[/code] a [i]queue[/i]: the first "
"element we append to the array is the first one we remove."
msgstr ""
"We noemen arrays zoals [code]waiting_orders[/code] een [i]wachtrij[/i]: het "
"eerste element dat we toevoegen aan de array is het eerste dat we "
"verwijderen."

#: course/lesson-23-append-to-arrays/lesson.tres:187
msgid "What does #... mean?"
msgstr "Wat betekent #...?"

#: course/lesson-23-append-to-arrays/lesson.tres:189
msgid ""
"We write [code]#...[/code] to represent ellipses in the code. It means "
"\"we're completing the function's code.\" We use that to break down code "
"examples and make them easier to learn from.\n"
"\n"
"The hash sign itself marks the start of a code comment. It's a line the "
"computer will ignore, which is why it typically appears in grey."
msgstr ""
"We schrijven [code]#...[/code] om weglatingen in de code weer te geven. Het "
"betekent \"we vullen de code van de functie aan\". We gebruiken dat om "
"codevoorbeelden op te splitsen en het makkelijker te maken om ervan te leren."
"\n"
"\n"
"Het hekje zelf markeert het begin van codecommentaar. Het is een regel die "
"de computer zal negeren, daarom wordt deze meestal grijs weergegeven."

#: course/lesson-23-append-to-arrays/lesson.tres:199
msgid "Using arrays as stacks"
msgstr "Arrays als stapels gebruiken"

#: course/lesson-23-append-to-arrays/lesson.tres:201
msgid ""
"Another common use of arrays is [i]stacks[/i] of data.\n"
"\n"
"Take a factory management game where you need to retrieve materials from "
"stacks of crates. They arrive at the factory piled up vertically, and you "
"need to take them from top to bottom."
msgstr ""
"Een ander veelvoorkomend gebruik van arrays is als [i]stapels[/i] van "
"gegevens.\n"
"\n"
"Neem een fabrieksmanagementspel waarin je materialen uit stapels kratten "
"moet halen. Ze komen verticaal opgestapeld aan in de fabriek en je moet ze "
"er aan de bovenkant vanaf halen."

#: course/lesson-23-append-to-arrays/lesson.tres:223
msgid ""
"To take a crate from the back of the array, this time, we use the "
"[code]pop_back()[/code] array function.\n"
"\n"
"This function removes (pops) the last value from the array and returns it to "
"you.\n"
"\n"
"Here we pop the last value of the array and print what's left of the array "
"to demonstrate how the array gets smaller."
msgstr ""
"Om deze keer een krat uit de achterkant van de array te halen, gebruiken we "
"de arrayfunctie [code]pop_back()[/code].\n"
"\n"
"Deze functie verwijdert (popt) de laatste waarde uit de array en geeft deze "
"terug.\n"
"\n"
"Hier halen we de laatste waarde uit de array en drukken we af wat er over is "
"van de array om te laten zien hoe de array kleiner wordt."

#: course/lesson-23-append-to-arrays/lesson.tres:247
msgid ""
"Like [code]pop_front()[/code], the function returns the value removed from "
"the array. You will often store that value in a variable.\n"
"\n"
"The value in question could be the crate's content, which you can then use "
"to give resources to the player.\n"
"\n"
"In the following practices, you will use the [code]append()[/code], "
"[code]pop_front()[/code], and [code]pop_back()[/code] array functions."
msgstr ""
"Net als [code]pop_front()[/code] geeft de functie de waarde terug die uit de "
"array is verwijderd. Je zult die waarde vaak opslaan in een variabele.\n"
"\n"
"De waarde in kwestie kan de inhoud van het krat zijn, die je vervolgens kunt "
"gebruiken om hulpmiddelen aan de speler te geven.\n"
"\n"
"In de volgende oefeningen gebruik je de arrayfuncties [code]append()[/code], "
"[code]pop_front()[/code] en [code]pop_back()[/code]."

#: course/lesson-23-append-to-arrays/lesson.tres:259
msgid "Completing orders"
msgstr "Bestellingen afhandelen"

#: course/lesson-23-append-to-arrays/lesson.tres:260
msgid ""
"The [code]waiting_orders[/code] array will be filled over time.\n"
"\n"
"Your job is to move orders from the waiting list to the "
"[code]completed_orders[/code] list using the array's [code]append()[/code] "
"and [code]pop_front()[/code] functions.\n"
"\n"
"Remember that the array's [code]pop_front()[/code] function returns the "
"popped value, which allows you to store it in a variable and then pass it to "
"another function."
msgstr ""
"De array [code]waiting_orders[/code] wordt gaandeweg gevuld.\n"
"\n"
"Het is jouw taak om bestellingen van de wachtlijst naar de lijst "
"[code]completed_orders[/code] te verplaatsen met behulp van de functies "
"[code]append()[/code] en [code]pop_front()[/code] van de array.\n"
"\n"
"Onthoud dat de functie [code]pop_front()[/code] van de array de gepopte "
"waarde teruggeeft, waardoor je deze kunt opslaan in een variabele en "
"vervolgens kunt doorgeven aan een andere functie."

#: course/lesson-23-append-to-arrays/lesson.tres:277
msgid ""
"Orders are piling up in the kitchen, and we need to clear them fast using "
"the array's [code]pop_front()[/code] function."
msgstr ""
"De bestellingen stapelen zich op in de keuken en we moeten ze snel wegwerken "
"met behulp van de functie [code]pop_front()[/code] van de array."

#: course/lesson-23-append-to-arrays/lesson.tres:282
msgid "Clearing up the crates"
msgstr "Kratten opruimen"

#: course/lesson-23-append-to-arrays/lesson.tres:283
msgid ""
"Crates are piling up on the platform. Move them out of the way by popping "
"them from the [code]crates[/code] array.\n"
"\n"
"You need to remove them from top to bottom using the array's [code]pop_back()"
"[/code] function.\n"
"\n"
"Your code should remove all the crates in the array using a while loop.\n"
"\n"
"[b]Careful![/b] if you run a while loop carelessly, you can lock the "
"software.\n"
"\n"
"You can check if the [code]crates[/code] array still contains values by "
"writing [code]while crates:[/code]"
msgstr ""
"Kratten stapelen zich op op het platform. Haal ze uit de weg door ze uit de "
"array [code]crates[/code] te halen.\n"
"\n"
"Je moet ze van boven naar beneden verwijderen met de functie "
"[code]pop_back()[/code] van de array.\n"
"\n"
"Je code moet alle kratten in de array verwijderen met behulp van een while-"
"lus.\n"
"\n"
"[b]Voorzichtig![/b] Als je een while-lus onvoorzichtig uitvoert, kun je de "
"software vast doen lopen.\n"
"\n"
"Je kunt controleren of de array [code]crates[/code] nog waarden bevat door "
"[code]while crates:[/code] te schrijven."

#: course/lesson-23-append-to-arrays/lesson.tres:303
msgid ""
"Crates are piling up on the platform. Move them out of the way by popping "
"them from their array."
msgstr ""
"Kratten stapelen zich op op het platform. Haal ze uit de weg door ze uit hun "
"array te pakken."

#: course/lesson-23-append-to-arrays/lesson.tres:307
msgid "Appending and popping values from arrays"
msgstr "Waarden toevoegen aan en verwijderen uit arrays"
